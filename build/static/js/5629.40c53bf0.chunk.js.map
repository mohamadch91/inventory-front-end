{"version":3,"file":"static/js/5629.40c53bf0.chunk.js","mappings":"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","sources":["app/reports/GapItemReport.js","app/services/report.service.js","app/shared/SharedTable.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport { Form } from \"react-bootstrap\";\nimport ReportService from \"../services/report.service\";\nimport \"./form.scss\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\nimport API_URL from \"../services/APIURL\";\n\nconst defaultValues = {\n  name: \"\",\n  code: \"\",\n  level: \"-1\",\n  type: \"-1\",\n  power: \"-1\",\n  degree: \"1\",\n  option: \"1\",\n  year_to: \"-1\",\n  year_from: \"-1\",\n  calculate_for: \"-1\",\n};\n\nconst degrees = [\n  { id: \"1\", name: \"2-8 C\" },\n  { id: \"2\", name: \"-20 C\" },\n  { id: \"3\", name: \"-70 C\" },\n  { id: \"4\", name: \"+25 C\" },\n  { id: \"5\", name: \"Dry store\" },\n  { id: \"6\", name: \"All\" },\n];\n\nconst options = [\n  { id: \"1\", name: \"All Equipment\" },\n  { id: \"2\", name: \"Only equipment from PQS/PIS\" },\n  { id: \"3\", name: \"Only equipment with installation date\" },\n];\n\nconst tableData = [\n  {\n    headTitle: \"Parent\",\n    valueKey: \"parent\",\n  },\n  {\n    headTitle: \"Name\",\n    valueKey: \"name\",\n  },\n  {\n    headTitle: \"Level\",\n    valueKey: \"level\",\n  },\n  {\n    headTitle: \"Code\",\n    valueKey: \"code\",\n  },\n  {\n    headTitle: \"Type\",\n    valueKey: \"type\",\n  },\n  {\n    headTitle: \"General\",\n    valueKey: \"general\",\n  },\n  {\n    headTitle: \"Under_1\",\n    valueKey: \"children\",\n  },\n];\n\nconst tableDegreeData = [\n  {\n    headTitle: \"Required Capacity(lit)\",\n    valueKey: \"req\",\n  },\n  {\n    headTitle: \"All Total Available (lit)\",\n    valueKey: \"tcapacity\",\n  },\n  {\n    headTitle: \"Functioning Total Available (lit)\",\n    valueKey: \"fcapacity\",\n  },\n  {\n    headTitle: \"Excess/ Shortage (lit)\",\n    valueKey: \"excees\",\n  },\n];\n\nfunction GapItemReport() {\n  const [filterValues, setFilterValues] = useState(defaultValues);\n  const [selectedDegree, setSelectedDegree] = useState(\"1\");\n\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n\n  const { data: gapItemHelper, isLoading: isGapItemHelperLoading } = useQuery(\n    [\"gap-item-helper\"],\n    async () => {\n      const res = await ReportService.getGapItem({ help: true });\n      return res.data;\n    }\n  );\n\n  const {\n    data: reports,\n    isLoading: isReportsLoading,\n    refetch: fetchReports,\n  } = useQuery(\n    [\"gap-item-report\"],\n    async () => {\n      const params = {\n        help: false,\n      };\n      for (const key in filterValues) {\n        const filter = filterValues[key];\n        if (filter.length > 0 && filter !== \"-1\") {\n          params[key] = filter;\n        }\n      }\n      const res = await ReportService.getGapItem(params);\n      return res.data;\n    },\n    {\n      refetchOnMount: false,\n      enabled: false,\n      onSuccess() {\n        setSelectedDegree(filterValues.degree);\n      },\n    }\n  );\n\n  if (isGapItemHelperLoading || isReportsLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Gap Item Report</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                fetchReports();\n              }}\n            >\n              <h4>\n                <Trans>Filters</Trans>\n              </h4>\n              <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Facility name:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          name: value,\n                        }));\n                      }}\n                      value={filterValues.name}\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Code:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          code: value,\n                        }));\n                      }}\n                      value={filterValues.code}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Level:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          level: value,\n                        }));\n                      }}\n                      value={filterValues.level}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {gapItemHelper?.level.map((lev) => (\n                        <option key={lev.id} value={lev.id}>\n                          {`${lev.id} - ${lev.name}`}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Type:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          type: value,\n                        }));\n                      }}\n                      value={filterValues.type}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {gapItemHelper?.type.map((ty) => (\n                        <option key={ty.id} value={ty.id}>\n                          {ty.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Power source:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          power: value,\n                        }));\n                      }}\n                      value={filterValues.power}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {gapItemHelper?.power.map((pow) => (\n                        <option key={pow.id} value={pow.id}>\n                          {pow.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Storage condition:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          degree: value,\n                        }));\n                      }}\n                      value={filterValues.item_class}\n                      as=\"select\"\n                    >\n                      {degrees?.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-5\">\n                <h4>\n                  <Trans>Item Options</Trans>\n                </h4>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Options:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          option: value,\n                        }));\n                      }}\n                      value={filterValues.item_class}\n                      as=\"select\"\n                    >\n                      {options?.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-2\">\n                      <Trans>from:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          year_from: value,\n                        }));\n                      }}\n                      value={filterValues.year_from}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        select\n                      </option>\n                      {Array.from({ length: 30 }).map((_, i) => {\n                        const year =\n                          (filterValues.year_to ||\n                            new Date().getUTCFullYear()) - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                    <label className=\"label col-sm-1\">\n                      <Trans>to:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          year_to: value,\n                        }));\n                      }}\n                      value={filterValues.year_to}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        select\n                      </option>\n                      {Array.from({\n                        length:\n                          new Date().getUTCFullYear() - filterValues.year_from,\n                      }).map((_, i) => {\n                        const year = new Date().getUTCFullYear() - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                    <label className=\"label col-sm-3\">\n                      <Trans>Calculate for year:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          calculate_for: value,\n                        }));\n                      }}\n                      value={filterValues.calculate_for}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        select\n                      </option>\n                      {Array.from({ length: 30 }).map((_, i) => {\n                        const year = new Date().getUTCFullYear() - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-1\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Reports\n                  </button>\n                </div>\n                <div className=\"col-sm-1\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    onClick={() => setFilterValues(defaultValues)}\n                  >\n                    Clear\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <h4>\n              <Trans>Report Number: Gap Item Report ({country?.country})</Trans>\n            </h4>\n            <h6>Date: {new Date().toISOString().split(\"T\")[0]}</h6>\n            <div className=\"mt-3 table-container \">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={5}>\n                      Facility information\n                    </TableCell>\n                    <TableCell align=\"center\" colSpan={2}>\n                      Populations\n                    </TableCell>\n                    {selectedDegree === \"6\" ? (\n                      Array.from({ length: 5 }).map((_, i) => (\n                        <TableCell\n                          key={i}\n                          align=\"center\"\n                          colSpan={4}\n                          style={{ textAlign: \"center\" }}\n                        >\n                          {degrees[i].name}\n                        </TableCell>\n                      ))\n                    ) : (\n                      <TableCell\n                        align=\"center\"\n                        colSpan={4}\n                        style={{ textAlign: \"center\" }}\n                      >\n                        {degrees[+selectedDegree - 1].name}\n                      </TableCell>\n                    )}\n                  </TableRow>\n                  <TableRow>\n                    {tableData.map((data) => (\n                      <TableCell key={data.headTitle}>\n                        <Trans>{data.headTitle}</Trans>\n                      </TableCell>\n                    ))}\n                    {Array.from({ length: selectedDegree === \"6\" ? 5 : 1 }).map(\n                      (_, i) => (\n                        <Fragment key={i}>\n                          {tableDegreeData.map((td) => (\n                            <TableCell key={`${td.valueKey}${i + 1}`}>\n                              <Trans>{td.headTitle}</Trans>\n                            </TableCell>\n                          ))}\n                        </Fragment>\n                      )\n                    )}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.data.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        {tableData.map((data) => (\n                          <TableCell key={data.valueKey}>\n                            {report[data.valueKey] ?? \"-\"}\n                          </TableCell>\n                        ))}\n                        {Array.from({\n                          length: selectedDegree === \"6\" ? 5 : 1,\n                        }).map((_, i) => (\n                          <Fragment key={i}>\n                            {tableDegreeData.map((td) => (\n                              <TableCell\n                                key={`${td.valueKey}${i + 1}`}\n                                style={{\n                                  color:\n                                    td.valueKey === \"excees\"\n                                      ? report[`exceed${i + 1}`]\n                                        ? \"blue\"\n                                        : \"red\"\n                                      : \"unset\",\n                                }}\n                              >\n                                {report[`${td.valueKey}${i + 1}`]}\n                              </TableCell>\n                            ))}\n                          </Fragment>\n                        ))}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n            {reports?.excel && (\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-2\">\n                  <a href={API_URL + reports.excel} download>\n                    <button className=\"btn btn-primary\">\n                      <Trans>Export to MS Excel</Trans>\n                    </button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GapItemReport;\n","import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"http://5.182.47.38:8001/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n","import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["defaultValues","name","code","level","type","power","degree","option","year_to","year_from","calculate_for","degrees","id","options","tableData","headTitle","valueKey","tableDegreeData","useState","filterValues","setFilterValues","selectedDegree","setSelectedDegree","country","JSON","parse","localStorage","getItem","useQuery","ReportService","help","res","data","gapItemHelper","isGapItemHelperLoading","isLoading","key","params","filter","length","refetchOnMount","enabled","onSuccess","reports","isReportsLoading","fetchReports","refetch","className","onSubmit","e","preventDefault","onChange","value","target","preValues","as","selected","disabled","map","lev","ty","pow","item_class","i","Array","from","_","year","Date","getUTCFullYear","onClick","toISOString","split","align","colSpan","style","textAlign","Fragment","td","report","index","color","excel","href","API_URL","download","ApiManager","headers","Authorization","authHeader","payload","children"],"sourceRoot":""}