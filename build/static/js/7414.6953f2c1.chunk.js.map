{"version":3,"file":"static/js/7414.6953f2c1.chunk.js","mappings":"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","sources":["app/settings/ItemClass.js","app/shared/CloseIcon.js","app/shared/EditIcon.js","app/shared/SharedTable.js"],"sourcesContent":["import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport ItemsService from \"../services/items.service\";\nimport CloseIcon from \"../shared/CloseIcon\";\nimport EditIcon from \"../shared/EditIcon\";\nimport SharedTable from \"../shared/SharedTable\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../shared/Spinner\";\nimport \"./itemClassLang.scss\";\nimport \"../styles/inputs.scss\";\nimport { Trans } from \"react-i18next\";\n/**\n * \n * @returns DOM elemnt \n * get all item classes from server and just can edit\n */\nfunction ItemClass() {\n  const [itemClasses, setItemClasses] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [editFormData, setEditFormData] = useState({});\n  const [editableRowId, setEditableRowId] = useState(null);\n\n  function getItemClasses() {\n    ItemsService.getItemClasses()\n      .then((res) => {\n        setItemClasses(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n                toast.error(<Trans>There is a problem loading data</Trans>);\n\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getItemClasses();\n  }, []);\n\n  function handleEdit(i) {\n    const formData = itemClasses.find((item) => item.id === i.id);\n    setEditFormData(formData);\n    setEditableRowId(i.id);\n  }\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setEditFormData({ ...editFormData, [name]: value });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    const isValid = Object.keys(editFormData).every((key) => {\n      return editFormData[key] !== \"\";\n    });\n    if (!isValid) {\n            toast.error(<Trans>Please fill all the fields</Trans>);\n\n    } else {\n      setIsLoading(true);\n      const newData = [...itemClasses];\n      const index = newData.findIndex((item) => item.id === editFormData.id);\n      newData[index] = editFormData;\n      const formToPut = (({ id, title, code, active }) => ({\n        id,\n        title,\n        code,\n        active,\n      }))(editFormData);\n      ItemsService.putItemClass(formToPut)\n        .then((res) => {\n          getItemClasses();\n        })\n        .catch((err) => {\n                    toast.error(<Trans>There is a problem sending data</Trans>);\n\n          setIsLoading(false);\n        });\n      setEditableRowId(null);\n      setEditFormData({});\n    }\n  }\n\n  return (\n    <div className=\"item-class-page mb-5\">\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <h3 className=\"page-title mb-3\">\n            <Trans>Item class list</Trans>\n          </h3>\n          <div>\n            <SharedTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Id</TableCell>\n                  <TableCell>\n                    <Trans>Title</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Code</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Active</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Edit</Trans>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {itemClasses.map((item) => (\n                  <>\n                    {editableRowId !== item.id ? (\n                      <TableRow>\n                        <TableCell>{item.id}</TableCell>\n                        <TableCell>{item.title}</TableCell>\n                        <TableCell>{item.code}</TableCell>\n                        <TableCell>\n                          <div class=\"form-check form-check-primary mt-3\">\n                            <label className=\"form-check-label\">\n                              <input\n                                type=\"checkbox\"\n                                checked={item.active}\n                                disabled\n                              ></input>\n                              <i className=\"input-helper mt-3\"></i>\n                            </label>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <button\n                            className=\"edit-btn\"\n                            onClick={(event) => handleEdit(item)}\n                          >\n                            <EditIcon />\n                          </button>\n                        </TableCell>\n                      </TableRow>\n                    ) : (\n                      <TableRow>\n                        <TableCell>{editFormData?.id}</TableCell>\n                        <TableCell>\n                          <input\n                            name=\"title\"\n                            type=\"text\"\n                            onChange={handleChange}\n                            value={editFormData?.title}\n                            required\n                          ></input>\n                        </TableCell>\n                        <TableCell>{editFormData.code}</TableCell>\n                        <TableCell>\n                          <div class=\"form-check form-check-primary mt-3\">\n                            <label className=\"form-check-label\">\n                              <input\n                                name=\"active\"\n                                type=\"checkbox\"\n                                onChange={() =>\n                                  setEditFormData({\n                                    ...editFormData,\n                                    active: !editFormData.active,\n                                  })\n                                }\n                                checked={editFormData?.active}\n                              ></input>\n                              <i className=\"input-helper mt-3\"></i>\n                            </label>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <button className=\"save-btn\" onClick={handleSubmit}>\n                            <Trans>Save</Trans>\n                          </button>\n                          <button\n                            className=\"close-btn\"\n                            onClick={() => setEditableRowId(null)}\n                          >\n                            <CloseIcon />\n                          </button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </>\n                ))}\n              </TableBody>\n            </SharedTable>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ItemClass;\n","/**\n * retun an svg\n *   CloseIcon\n */\nfunction CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n","/**\n * retun an svg\n *   EditIcon\n */\nfunction EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        width=\"30\"\n        height=\"30\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n","import { Table, TableContainer } from \"@mui/material\";\n/**\n * @param  {DOMElement} {children}\n * shared table use in settings and all tables\n */\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["useState","itemClasses","setItemClasses","isLoading","setIsLoading","editFormData","setEditFormData","editableRowId","setEditableRowId","getItemClasses","ItemsService","then","res","data","catch","err","toast","handleChange","e","target","name","value","handleSubmit","preventDefault","Object","keys","every","key","newData","index","findIndex","item","id","formToPut","title","code","active","useEffect","className","map","class","type","checked","disabled","onClick","event","i","formData","find","handleEdit","onChange","required","version","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","fillRule","clipRule","d","children"],"sourceRoot":""}