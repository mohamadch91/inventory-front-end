{"version":3,"file":"static/js/4120.09ef34c3.chunk.js","mappings":"yaAoCA,SAASA,EACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CACLf,GAAAA,EACAC,KAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAC,OAAAA,EAEH,EAEiBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC5CC,OAAQ,IACRC,MAAO,OACP,+BAAgC,CAC9BC,gBAAiB,yBACjBC,MAAO,UACP,uBAAwB,CACtBH,OAAQ,SAGZ,eAAgB,CACdE,gBAAgB,kBAAD,OACU,SAAvBH,EAAMK,QAAQC,KAAkB,EAAI,GADvB,KAGfF,MAAOJ,EAAMK,QAAQE,MAAMC,MAdD,IA+C9B,IAWMC,EAAY,CAChB,CACE3B,GAAI,SACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,UAET,CACE9B,GAAI,OACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,QAET,CACE9B,GAAI,SACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cAET,CACE9B,GAAI,WACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,kBAET,CACE9B,GAAI,WACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cAET,CACE9B,GAAI,SACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cAET,CACE9B,GAAI,SACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,kBAET,CACE9B,GAAI,YACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cAET,CACE9B,GAAI,cACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,kBAET,CACE9B,GAAI,cACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cAET,CACE9B,GAAI,YACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cAET,CACE9B,GAAI,YACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,kBAET,CACE9B,GAAI,SACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,gBAET,CACE9B,GAAI,SACJ4B,SAAS,EACTC,gBAAgB,EAChBC,MAAO,iBAKLC,EAAuB,SAACC,GAC5B,IAAQC,EAAgBD,EAAhBC,YAER,OACE,SAACC,EAAA,EAAD,CACEC,IAAE,QACAC,GAAI,CAAEC,GAAI,GACVC,GAAI,CAAEC,GAAI,EAAGF,GAAI,IACbJ,EAAc,GAAK,CACrBO,QAAS,SAACtB,GAAD,OACPuB,EAAAA,EAAAA,IACEvB,EAAMK,QAAQmB,QAAQhB,KACtBR,EAAMK,QAAQoB,OAAOC,iBAHhB,IALf,SAaGX,EAAc,GACb,UAACY,EAAA,EAAD,CACEV,GAAI,CAAEW,KAAM,YACZxB,MAAM,UACNyB,QAAQ,YACRC,UAAU,MAJZ,UAMGf,EANH,gBASA,SAACY,EAAA,EAAD,CACEV,GAAI,CAAEW,KAAM,YACZC,QAAQ,KACR/C,GAAG,aACHgD,UAAU,MAJZ,yBAWP,EAOc,SAASC,IACtB,MAAwBC,EAAAA,UAAe,GAAvC,eAAaC,GAAb,WAEA,EAAwBD,EAAAA,SAAe,IAAvC,eAAOE,EAAP,KAAaC,EAAb,KACA,EAA0BH,EAAAA,SAAe,OAAzC,eACA,GADA,UAC8BA,EAAAA,SAAe,aAA7C,eACA,GADA,UACgCA,EAAAA,SAAe,KAA/C,eAAOI,EAAP,KACA,GADA,KAC0BJ,EAAAA,UAAe,IAAzC,eACA,GADA,UAC0BA,EAAAA,UAAe,IAAzC,eAAOK,EAAP,KAAeC,EAAf,KACA,EAA8BN,EAAAA,UAAe,GAA7C,eAAgBO,GAAhB,WACA,EAAsCP,EAAAA,UAAe,GAArD,eACA,GADA,UACsCA,EAAAA,UAAe,IAArD,eAAOQ,EAAP,KAAoBC,EAApB,KAyBMC,EAAa,WACjBJ,GAASD,GACTF,EAAQD,GACRK,GAAW,GACNC,GAGHG,EAAAA,EAAAA,UAAsBT,GACnBU,MAAK,SAACC,GAGL,IAFA,IAAMjD,EAAUkD,KAAKC,MAAMC,aAAaC,QAAQ,YAC5CC,EAAM,GACDC,EAAI,EAAGA,EAAIvD,EAAQwD,OAAQD,IAClCD,EAAIG,KACFxE,EACEgE,EAASS,KAAKH,GAAGrE,GACjB+D,EAASS,KAAKH,GAAGpE,KACjBwE,SAASV,EAASS,KAAKH,GAAGnE,QAC1BuE,SAASV,EAASS,KAAKH,GAAGlE,QAC1B4D,EAASS,KAAKH,GAAGjE,SACjB2D,EAASS,KAAKH,GAAGhE,SACjB0D,EAASS,KAAKH,GAAG/D,OACjByD,EAASS,KAAKH,GAAG9D,OACjBwD,EAASS,KAAKH,GAAG7D,OACjBuD,EAASS,KAAKH,GAAG5D,UACjBsD,EAASS,KAAKH,GAAG3D,UACjBqD,EAASS,KAAKH,GAAG1D,YACjBoD,EAASS,KAAKH,GAAGzD,YACjBmD,EAASS,KAAKH,GAAGxD,UACjBkD,EAASS,KAAKH,GAAGvD,QACjBiD,EAASS,KAAKH,GAAGtD,SAIvBsC,EAAQe,EACT,IACAM,OAAM,SAACC,GAEP,IACHxB,GAAQ,IAjCRyB,EAAAA,GAAAA,MAAY,4CAmCbC,GAAiB,MACjBC,GAAgB,CAAC,EACnB,EACKC,EAAoB,SAACJ,EAAGK,GACN,SAAlBL,EAAEM,OAAOhF,MACPiF,MAAMP,EAAEM,OAAOE,QACjBxB,GAAe,GAGnB,IAAIyB,EAAST,EAAEM,OAAOE,MAGtB,GAFA1B,GAAW,GACE2B,EAAOC,MAAM,KAAKC,OACpB,EAAG,CACZ,IAAMC,EAAMH,EAAOC,MAAM,KAAK,GACxBG,EAAaJ,EAAOC,MAAM,KAAK,GAAGI,MAAM,EAAG,GACjDL,EAASG,EAAM,IAAMC,CACtB,CACD,MAAwBb,EAAEM,OAAlBhF,EAAR,EAAQA,KACFyF,GADN,EAAcP,OACJ,OAAO/B,IACjBsC,EAAKV,GAAO/E,GAAQmF,EACpB/B,EAAQqC,EACT,EAyDKC,EAAY,SAACC,GACjB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,IACtD,EASKC,EAAiB,SAACC,GACtB,GAAIA,EAAKV,OAAS,EAChB,OAAO,CAEV,EACKW,GAAkB,SAACD,GACvB,GAAIA,EAAKH,WAAWP,OAAS,EAC3B,OAAO,CAEV,EACKY,GAAkB,SAACF,GACvB,GAAIA,EAAKH,WAAWP,OAAS,EAC3B,OAAO,CAEV,EACKa,GAAoB,SAACH,GAEzB,IAAMI,EAAQC,WAAWL,GACzB,QAAII,EAAQ,KAGRA,EAAMP,WAAWP,QACZ,EAGV,EACD,GAA0BpC,EAAAA,SAAe,MAAzC,iBAAOoD,GAAP,MAAcC,GAAd,MACA,GAAwCrD,EAAAA,SAAe,CAAC,GAAxD,iBAAqB4B,IAArB,aACA,GAA0C5B,EAAAA,SAAe,MAAzD,iBAAOsD,GAAP,MAAsB3B,GAAtB,MAiHA,OApCA3B,EAAAA,WAAgB,WAEdW,EAAAA,EAAAA,YACGC,MAAK,SAACC,GAGL,IAFA,IAAMjD,EAAUkD,KAAKC,MAAMC,aAAaC,QAAQ,YAC5CC,EAAM,GACDC,EAAI,EAAGA,EAAIvD,EAAQwD,OAAQD,IAClCD,EAAIG,KACFxE,EACEgE,EAASS,KAAKH,GAAGrE,GACjB+D,EAASS,KAAKH,GAAGpE,KACjBwE,SAASV,EAASS,KAAKH,GAAGnE,QAC1BuE,SAASV,EAASS,KAAKH,GAAGlE,QAC1B4D,EAASS,KAAKH,GAAGjE,SACjB2D,EAASS,KAAKH,GAAGhE,SACjB0D,EAASS,KAAKH,GAAG/D,OACjByD,EAASS,KAAKH,GAAG9D,OACjBwD,EAASS,KAAKH,GAAG7D,OACjBuD,EAASS,KAAKH,GAAG5D,UACjBsD,EAASS,KAAKH,GAAG3D,UACjBqD,EAASS,KAAKH,GAAG1D,YACjBoD,EAASS,KAAKH,GAAGzD,YACjBmD,EAASS,KAAKH,GAAGxD,UACjBkD,EAASS,KAAKH,GAAGvD,QACjBiD,EAASS,KAAKH,GAAGtD,SAKvBsC,EAAQe,EACT,IACAM,OAAM,SAACC,GACN8B,QAAQC,IAAI/B,EACb,GACJ,GAAE,KAGD,4BACE,gBAAKgC,UAAU,cAAf,UACE,eAAIA,UAAU,aAAd,uCAEF,SAAC1F,EAAA,EAAD,CAAKkB,GAAI,CAAEf,MAAO,QAAlB,UACE,SAACwF,EAAA,EAAD,CAAOzE,GAAI,CAAEf,MAAO,OAAQyF,GAAI,GAAhC,UACE,0BACE,iBAAKF,UAAU,0BAAf,WACE,SAAC9D,EAAA,EAAD,CACEV,GAAI,CAAEW,KAAM,YACZC,QAAQ,KACR/C,GAAG,aACHgD,UAAU,MACV2D,UAAU,QALZ,2BASA,iBAAKA,UAAU,YAAf,WACE,mEACA,iBAAKA,UAAU,mBAAf,WACE,gBAAKA,UAAU,WAAf,UACE,kBACEG,KAAK,OACLH,UAAU,eACVI,SApIC,SAACpC,GAClB,IAAOqC,GAAP,OAAerC,EAAEM,OAAOgC,MAAxB,MACMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACf,IAAMC,EAAOD,EAAIpC,OAAOsC,OAClBC,EAAKC,EAAAA,GAAUH,EAAM,CAAER,KAAM,WAC7BY,EAASF,EAAGG,WAAW,GACvBC,EAAKJ,EAAGK,OAAOH,GACrBjB,QAAQC,IAAIkB,GACZ,IAAMpD,EAAOiD,EAAAA,GAAAA,cAAyBG,GACtCnB,QAAQC,IAAIlC,GACZ+B,GAAS/B,EACV,EACD0C,EAAOY,mBAAmBd,EAC7B,OAyHe,gBAAKL,UAAU,qBAAf,UACE,SAACoB,EAAA,EAAD,CACEhF,QAAQ,YACRzB,MAAM,UACN0G,QAAS,YA5HT,WAGlB,IAFA,IAAI1D,EAAO,GACLxD,EAAUkD,KAAKC,MAAMC,aAAaC,QAAQ,YACvCE,EAAI,EAAGA,EAAIvD,EAAQwD,OAAQD,IAAI,CACtC,IAAIG,EAAK8B,GAAMjC,EAAE,GACb4D,EAAM,CACRjI,GAAGwE,EAAI,QACPpE,SAAqB,KAAZoE,EAAK,GAAU,EAAIA,EAAK,GAAK0D,QAAQ,GAC9C5H,OAA2B,KAApBkE,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GAC5D7H,SAA6B,KAApBmE,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GAC9D1H,OAA2B,KAApBgE,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GAC5DzH,UAA8B,KAApB+D,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GAC/DvH,YAAgC,KAApB6D,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GACjEtH,YAAgC,KAApB4D,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GACjExH,UAA8B,KAApB8D,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GAC/DrH,UAA8B,KAApB2D,EAAI,UAAmB,EAAIA,EAAI,UAAc0D,QAAQ,GAC/D3H,OAA+B,KAAxBiE,EAAK,iBAAsB,EAAIA,EAAK,iBAAiB0D,QAAQ,IAExE5D,EAAOC,KAAK0D,EACb,CACDpE,EAAAA,EAAAA,UAAsBS,GAAQR,MAAK,SAACC,GAClCa,EAAAA,GAAAA,QAAc,gCAEX,IADA,IAAIR,EAAM,GACDC,EAAI,EAAGA,EAAIvD,EAAQwD,OAAQD,IAClCD,EAAIG,KACFxE,EACEgE,EAASS,KAAKH,GAAGrE,GACjB+D,EAASS,KAAKH,GAAGpE,KACjBwE,SAASV,EAASS,KAAKH,GAAGnE,QAC1BuE,SAASV,EAASS,KAAKH,GAAGlE,QAC1B4D,EAASS,KAAKH,GAAGjE,SACjB2D,EAASS,KAAKH,GAAGhE,SACjB0D,EAASS,KAAKH,GAAG/D,OACjByD,EAASS,KAAKH,GAAG9D,OACjBwD,EAASS,KAAKH,GAAG7D,OACjBuD,EAASS,KAAKH,GAAG5D,UACjBsD,EAASS,KAAKH,GAAG3D,UACjBqD,EAASS,KAAKH,GAAG1D,YACjBoD,EAASS,KAAKH,GAAGzD,YACjBmD,EAASS,KAAKH,GAAGxD,UACjBkD,EAASS,KAAKH,GAAGvD,QACjBiD,EAASS,KAAKH,GAAGtD,SAKvBsC,EAAQe,EAEZ,IAAEM,OAAM,SAACyD,GACRvD,EAAAA,GAAAA,MAAY,uBACb,IAAEwD,SAAQ,WACT7B,GAAS,KACV,IAEDE,QAAQC,IAAIpC,EACX,CAsEqB+D,EACD,EALH,sCAiBd,SAACpH,EAAA,EAAD,CAAKkB,GAAI,CAAEf,MAAO,QAAlB,UACE,UAACwF,EAAA,EAAD,CAAOzE,GAAI,CAAEf,MAAO,OAAQyF,GAAI,GAAhC,WACE,SAAC9E,EAAD,CAAsBE,YAAaqB,EAASgC,UAC5C,UAACgD,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAWC,QAAS,KACpB,UAACD,EAAA,EAAD,CAAWC,QAAS,EAApB,gCAEG1E,KAAKC,MAAMC,aAAaC,QAAQ,YAAYwE,cAE/C,SAACF,EAAA,EAAD,CAAWC,QAAS,QAEtB,UAACF,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAWC,QAAS,KACpB,SAACD,EAAA,EAAD,CACEtG,GAAI,CACFd,gBAAiB,UACjBuH,UAAW,SACXC,WAAY,mBAEdH,QAAS,EANX,6BAUA,SAACD,EAAA,EAAD,CACEtG,GAAI,CACFd,gBAAiB,UACjBuH,UAAW,SACXC,WAAY,kBACZC,YAAa,mBAEfJ,QAAS,EAPX,gCAYF,UAACF,EAAA,EAAD,CAAU7B,UAAU,kBAApB,WACE,SAAC8B,EAAA,EAAD,CAAWC,QAAS,IACnB/G,EAAUoH,KAAI,SAACC,GAAD,OACb,SAACP,EAAA,EAAD,CACEtG,GACkB,WAAhB6G,EAAShJ,IAAmC,cAAhBgJ,EAAShJ,GACjC,CAAE6I,WAAY,mBACE,cAAhBG,EAAShJ,GACT,CAAE8I,YAAa,mBACf,GANR,SAUGE,EAASlH,OAFLkH,EAAShJ,GATH,WAgBnB,SAACiJ,EAAA,EAAD,CAAWtC,UAAU,kBAArB,SACGvD,EAAK2F,KAAI,SAAC3E,EAAKC,GAAN,OACR,8BACGmC,KAAkBpC,EAAIpE,IACrB,UAACwI,EAAA,EAAD,CAAUU,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,WACE,SAACX,EAAA,EAAD,CAAWC,QAAS,EAApB,UACE,mBACE/B,UAAU,WACVqB,QAAS,SAACqB,GAAD,OA7N/B,SAAqBhF,GACnB,IAAMiF,EAAWlG,EAAKmG,MAAK,SAACC,GAAD,OAAUA,EAAKxJ,KAAOqE,EAAErE,EAAxB,IAC3B8E,GAAgBwE,GAChBzE,GAAiBR,EAAErE,GACpB,CAyNyCyJ,CAAYrF,EAAvB,EAFX,UAIE,SAACsF,EAAA,EAAD,SAGJ,SAACjB,EAAA,EAAD,CACE9B,UAAU,cACVgD,MAAM,MACNC,QAAQ,OAHV,SAKGxF,EAAIpE,MAEP,SAACyI,EAAA,EAAD,CACEkB,MAAM,MACNhD,UAAU,cACViD,QAAQ,OAHV,SAKGxF,EAAInE,QAEP,SAACwI,EAAA,EAAD,CACEtG,GAAI,CACF0G,WAAY,kBACZgB,YAAa,OAEfD,QAAQ,OACRE,MAAM,SANR,SAQG1F,EAAI9D,UAEP,SAACmI,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACG1F,EAAIhE,YAEP,SAACqI,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACG1F,EAAI/D,YAEP,SAACoI,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACG1F,EAAI7D,UAEP,SAACkI,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACG1F,EAAI5D,UAEP,SAACiI,EAAA,EAAD,CACEtG,GAAI,CAAE0G,WAAY,mBAClBe,QAAQ,OACRE,MAAM,SAHR,SAKG1F,EAAI3D,aAEP,SAACgI,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACG1F,EAAIzD,eAEP,SAAC8H,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACG1F,EAAIxD,eAEP,SAAC6H,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACG1F,EAAI1D,aAEP,SAAC+H,EAAA,EAAD,CACEmB,QAAQ,OACRzH,GAAI,CAAE2G,YAAa,mBACnBgB,MAAM,SAHR,SAKG1F,EAAIvD,aAEP,SAAC4H,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACGnE,EAAUvB,EAAIjE,WAEjB,SAACsI,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,SACGnE,EAAUvB,EAAIlE,YAxEgCkE,EAAIpE,KA4EvD,UAACwI,EAAA,EAAD,CAAUU,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,WACE,UAACX,EAAA,EAAD,CAAWC,QAAS,EAApB,WACE,mBAAQ/B,UAAU,WAAWqB,QAASpE,EAAtC,mBAGA,mBACE+C,UAAU,YACVqB,QAAS,kBAAMnD,GAAiB,KAAvB,EAFX,UAIE,SAACkF,EAAA,EAAD,UAGJ,SAACtB,EAAA,EAAD,CACE9B,UAAU,cACVgD,MAAM,MACNC,QAAQ,OAHV,UAKE,kBACEI,UAAQ,EACRC,UAAQ,EACR9E,MAAOf,EAAIpE,GACXC,KAAK,OACLiK,QAASnE,EAAe3C,EAAKiB,GAAGpE,MAChC6G,KAAK,YAGT,UAAC2B,EAAA,EAAD,CACEkB,MAAM,MACNC,QAAQ,OACRjD,UAAU,cAHZ,WAKE,kBACEqD,UAAQ,EACRE,QAASnE,EAAe3C,EAAKiB,GAAGpE,MAChCkF,MAAO/B,EAAKiB,GAAGpE,KACfA,KAAK,OACL8G,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDyC,KAAK,UAEP,wBAEF,UAAC2B,EAAA,EAAD,CACEtG,GAAI,CAAE0G,WAAY,mBAClBe,QAAQ,OACRE,MAAM,SAHR,WAKE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAG/D,QACnC6J,WAAYhE,GAAkB/C,EAAKiB,GAAG/D,QACtC6E,MAAO/B,EAAKiB,GAAG/D,OACfyG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,SACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,OAGN,wBAEF,UAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,WACE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAGjE,UACnC+E,MAAO/B,EAAKiB,GAAGjE,SACf2G,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,WACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,OAEN,wBAEF,UAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,WACE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAGhE,UACnC8E,MAAO/B,EAAKiB,GAAGhE,SACf0G,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,WACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,OAEN,wBAEF,UAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,WACE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAG9D,QACnC4E,MAAO/B,EAAKiB,GAAG9D,OACfwG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,SACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,OAEN,wBAEF,SAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,UACE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAG7D,QACnC2E,MAAO/B,EAAKiB,GAAG7D,OACfuG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,SACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,SAGR,UAAC5B,EAAA,EAAD,CACEtG,GAAI,CAAE0G,WAAY,mBAClBe,QAAQ,OACRE,MAAM,SAHR,WAKE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAG5D,WACnC0E,MAAO/B,EAAKiB,GAAG5D,UACfsG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,YACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,OAEN,wBAEF,SAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,UACE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAG1D,aACnCwE,MAAO/B,EAAKiB,GAAG1D,YACfoG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,cACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,SAGR,UAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,WACE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAGzD,aACnCuE,MAAO/B,EAAKiB,GAAGzD,YACfmG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,cACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,OAEN,wBAEF,UAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,WACE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAG3D,WACnCyE,MAAO/B,EAAKiB,GAAG3D,UACfqG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,YACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,OAEN,wBAEF,SAAC5B,EAAA,EAAD,CACEmB,QAAQ,OACRzH,GAAI,CAAE2G,YAAa,mBACnBgB,MAAM,SAHR,UAKE,kBACEE,UAAQ,EACRE,QAAS/D,GAAkB/C,EAAKiB,GAAGxD,WACnCsE,MAAO/B,EAAKiB,GAAGxD,UACfkG,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,YACL6G,KAAK,SACLsD,YAAY,IACZC,IAAI,SAIR,UAAC5B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,WACE,kBACEE,UAAQ,EACRE,QAASjE,GAAgB7C,EAAKiB,GAAGlE,QACjCgF,MAAOQ,EAAUvC,EAAKiB,GAAGlE,QACzB4G,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,SACL6G,KAAK,YAEP,wBAEF,SAAC2B,EAAA,EAAD,CAAWmB,QAAQ,OAAOE,MAAM,SAAhC,UACE,kBACEE,UAAQ,EACRE,QAAShE,GAAgB9B,EAAIlE,QAC7BiF,MAAOQ,EAAUvB,EAAIlE,QACrB6G,SAAU,SAACpC,GACTI,EAAkBJ,EAAGN,EACtB,EACDpE,KAAK,SACL6G,KAAK,eAnOwC1C,EAAIpE,KA/EnD,gBAiUvB,C,uCCt8BD,IA5BA,WACE,OACE,+BACE,gBACEsK,QAAQ,MACRtK,GAAG,UACHuK,MAAM,6BACNC,WAAW,+BACX5E,EAAE,MACF6E,EAAE,MACFrJ,MAAM,WACND,OAAO,YACPuJ,QAAQ,qBACRC,iBAAiB,yBACjBC,SAAS,WAXX,UAaE,wBACE,iBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,ucAMb,C,6DCdD,IAVA,YAAoC,IAAbC,EAAY,EAAZA,SACrB,OACE,+BACE,SAAC,IAAD,WACE,SAAC,IAAD,UAAQA,OAIf,C,4BCRGC,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFT,EAAG,yJACD,QAEJI,EAAQ,EAAUG,C","sources":["app/settings/NewLevel.js","app/shared/CloseIcon.js","app/shared/SharedTable.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport UserService from \"../services/user.service\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Level from \"./Level\";\nimport { alpha } from \"@mui/material/styles\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Paper from \"@mui/material/Paper\";\nimport { Form } from \"react-bootstrap\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport \"./newLevel.scss\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { styled } from \"@mui/material/styles\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/DeleteOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CancelIcon from \"@mui/icons-material/Close\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\nimport toast from \"react-hot-toast\";\nimport \"../styles/table.scss\";\nimport * as XLSX from \"xlsx\";\nimport SharedTable from \"../shared/SharedTable\";\nimport CloseIcon from \"../shared/CloseIcon\";\nfunction createData(\n  id,\n  name,\n  maxpop,\n  minpop,\n  uppervol,\n  undervol,\n  m25vol,\n  m70vol,\n  dryvol,\n  m25volnew,\n  m70volnew,\n  uppervolnew,\n  undervolnew,\n  dryvolnew,\n  country,\n  parent\n) {\n  return {\n    id,\n    name,\n    maxpop,\n    minpop,\n    uppervol,\n    undervol,\n    m25vol,\n    m70vol,\n    dryvol,\n    m25volnew,\n    m70volnew,\n    uppervolnew,\n    undervolnew,\n    dryvolnew,\n    country,\n    parent,\n  };\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  height: 300,\n  width: \"100%\",\n  \"& .MuiDataGrid-cell--editing\": {\n    backgroundColor: \"rgb(255,215,115, 0.19)\",\n    color: \"#1a3e72\",\n    \"& .MuiInputBase-root\": {\n      height: \"100%\",\n    },\n  },\n  \"& .Mui-error\": {\n    backgroundColor: `rgb(126,10,15, ${\n      theme.palette.mode === \"dark\" ? 0 : 0.1\n    })`,\n    color: theme.palette.error.main,\n  },\n}));\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"55%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"40%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst headCells = [\n  {\n    id: \"number\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Levels\",\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"name\",\n  },\n  {\n    id: \"m25vol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+25 C(cm3)\",\n  },\n  {\n    id: \"uppervol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+2 - +8 C(cm3)\",\n  },\n  {\n    id: \"undervol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-20 C(cm3)\",\n  },\n  {\n    id: \"m70vol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-70 C(cm3)\",\n  },\n  {\n    id: \"dryvol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dry store(cm3)\",\n  },\n  {\n    id: \"m25volnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+25 C(cm3)\",\n  },\n  {\n    id: \"uppervolnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+2 - +8 C(cm3)\",\n  },\n  {\n    id: \"undervolnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-20 C(cm3)\",\n  },\n  {\n    id: \"m70volnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-70 C(cm3)\",\n  },\n  {\n    id: \"dryvolnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dry store(cm3)\",\n  },\n  {\n    id: \"minpop\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Min pop(cm3)\",\n  },\n  {\n    id: \"maxpop\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Max pop(cm3)\",\n  },\n];\n\n\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            ),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: \"1 1 100%\" }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{ flex: \"1 1 100%\" }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Level list\n        </Typography>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\n\nexport default function DataTable() {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const [rows, setRows] = React.useState([]);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [dense, setDense] = React.useState(false);\n  const [isEdit, setEdit] = React.useState(false);\n  const [disable, setDisable] = React.useState(true);\n  const [showConfirm, setShowConfirm] = React.useState(false);\n  const [isFormValid, setIsFormValid] = React.useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n  const handleEdit = (i) => {\n    // If edit mode is true setEdit will\n    // set it to false and vice versa\n    setEdit(!isEdit);\n  };\n  const handleAdd = () => {\n    setRows([\n      ...rows,\n      {\n        id: rows.length + 1,\n        firstname: \"\",\n        lastname: \"\",\n        city: \"\",\n      },\n    ]);\n    setEdit(true);\n  };\n  const handleSave = () => {\n    setEdit(!isEdit);\n    setRows(rows);\n    setDisable(true);\n    if (!isFormValid) {\n      toast.error(\"Please fill the fields with right format\");\n    } else {\n      UserService.putLevels(rows)\n        .then((response) => {\n          const country = JSON.parse(localStorage.getItem(\"country\"));\n          let row = [];\n          for (let i = 0; i < country.levels; i++) {\n            row.push(\n              createData(\n                response.data[i].id,\n                response.data[i].name,\n                parseInt(response.data[i].maxpop),\n                parseInt(response.data[i].minpop),\n                response.data[i].uppervol,\n                response.data[i].undervol,\n                response.data[i].m25vol,\n                response.data[i].m70vol,\n                response.data[i].dryvol,\n                response.data[i].m25volnew,\n                response.data[i].m70volnew,\n                response.data[i].uppervolnew,\n                response.data[i].undervolnew,\n                response.data[i].dryvolnew,\n                response.data[i].country,\n                response.data[i].parent\n              )\n            );\n          }\n          setRows(row);\n        })\n        .catch((e) => {\n          // console.log(e);\n        });\n      setOpen(true);\n    }\n     setEditableRowId(null);\n     setEditFormData({});\n  };\n  const handleInputChange = (e, index) => {\n    if (e.target.name !== \"name\") {\n      if (isNaN(e.target.value)) {\n        setIsFormValid(false);\n      }\n    }\n    let number = e.target.value;\n    setDisable(false);\n    const flag = number.split(\".\").length;\n    if (flag > 1) {\n      const num = number.split(\".\")[0];\n      const floatpoint = number.split(\".\")[1].slice(0, 2);\n      number = num + \".\" + floatpoint;\n    }\n    const { name, value } = e.target;\n    const list = [...rows];\n    list[index][name] = number;\n    setRows(list);\n  };\n\n  // Showing delete confirmation to users\n  const handleConfirm = () => {\n    setShowConfirm(true);\n  };\n\n  // Handle the case of delete confirmation where\n  // user click yes delete a specific row of id:i\n  const handleRemoveClick = (i) => {\n    const list = [...rows];\n    list.splice(i, 1);\n    setRows(list);\n    setShowConfirm(false);\n  };\n\n  // Handle the case of delete confirmation\n  // where user click no\n  const handleNo = () => {\n    setShowConfirm(false);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n) => n.name);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const separator = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const levelValidator = (text) => {\n    if (text.length > 0) {\n      return true;\n    }\n  };\n  const minpopValidator = (text) => {\n    if (text.toString().length > 0) {\n      return true;\n    }\n  };\n  const maxpopValidator = (text) => {\n    if (text.toString().length > 0) {\n      return true;\n    }\n  };\n  const capacityValidator = (text) => {\n    // console.log(text)\n    const check = parseFloat(text);\n    if (check < 0) {\n      return false;\n    }\n    if (check.toString().length > 0) {\n      return true;\n    }\n    return true;\n  };\n  const [excel, setExcel] = React.useState(null);\n  const [editFormData, setEditFormData] = React.useState({});\n  const [editableRowId, setEditableRowId] = React.useState(null);\n    function handleEdit1(i) {\n      const formData = rows.find((item) => item.id === i.id);\n      setEditFormData(formData);\n      setEditableRowId(i.id);\n    }\n  const handleImport = (e) => {\n      const [file] = e.target.files;\n      const reader = new FileReader();\n      reader.onload = (evt) => {\n        const bstr = evt.target.result;\n        const wb = XLSX.read(bstr, { type: \"binary\" });\n        const wsname = wb.SheetNames[3];\n        const ws = wb.Sheets[wsname];\n        console.log(ws)\n        const data = XLSX.utils.sheet_to_json(ws);\n        console.log(data);\n        setExcel(data);\n      };\n      reader.readAsBinaryString(file);\n  };\n  const handleExcel = ()=>{ \n    let levels=[]\n    const country = JSON.parse(localStorage.getItem(\"country\"));\n    for (let i = 0; i < country.levels; i++){\n      let data=excel[i+5]\n      let level={\n        id:data['__EMPTY'],\n        uppervol:data['5']===''?0.0:data['5'].toFixed(2),\n        m25vol:data['__EMPTY_1']===''?0.0:data['__EMPTY_1'].toFixed(2),\n        undervol:data['__EMPTY_2']===''?0.0:data['__EMPTY_2'].toFixed(2),\n        dryvol:data['__EMPTY_3']===''?0.0:data['__EMPTY_3'].toFixed(2),\n        m25volnew:data['__EMPTY_4']===''?0.0:data['__EMPTY_4'].toFixed(2),\n        uppervolnew:data['__EMPTY_5']===''?0.0:data['__EMPTY_5'].toFixed(2),\n        undervolnew:data['__EMPTY_6']===''?0.0:data['__EMPTY_6'].toFixed(2),\n        m70volnew:data['__EMPTY_7']===''?0.0:data['__EMPTY_7'].toFixed(2),\n        dryvolnew:data['__EMPTY_8']===''?0.0:data['__EMPTY_8'].toFixed(2),\n        m70vol:data['Timor-Leste_1']===''?0.0:data['Timor-Leste_1'].toFixed(2)\n    }\n    levels.push(level)\n  }\n  UserService.putLevels(levels).then((response)=>{\n    toast.success(\"Levels imported successfully\")\n       let row = [];\n       for (let i = 0; i < country.levels; i++) {\n         row.push(\n           createData(\n             response.data[i].id,\n             response.data[i].name,\n             parseInt(response.data[i].maxpop),\n             parseInt(response.data[i].minpop),\n             response.data[i].uppervol,\n             response.data[i].undervol,\n             response.data[i].m25vol,\n             response.data[i].m70vol,\n             response.data[i].dryvol,\n             response.data[i].m25volnew,\n             response.data[i].m70volnew,\n             response.data[i].uppervolnew,\n             response.data[i].undervolnew,\n             response.data[i].dryvolnew,\n             response.data[i].country,\n             response.data[i].parent\n           )\n         );\n       }\n\n       setRows(row);\n\n  }).catch((err)=>{\n    toast.error(\"Levels import failed\")\n  }).finally(()=>{\n    setExcel(null)\n  }\n  )\n  console.log(levels)\n  }\n  React.useEffect(() => {\n    // get\n    UserService.getLevels()\n      .then((response) => {\n        const country = JSON.parse(localStorage.getItem(\"country\"));\n        let row = [];\n        for (let i = 0; i < country.levels; i++) {\n          row.push(\n            createData(\n              response.data[i].id,\n              response.data[i].name,\n              parseInt(response.data[i].maxpop),\n              parseInt(response.data[i].minpop),\n              response.data[i].uppervol,\n              response.data[i].undervol,\n              response.data[i].m25vol,\n              response.data[i].m70vol,\n              response.data[i].dryvol,\n              response.data[i].m25volnew,\n              response.data[i].m70volnew,\n              response.data[i].uppervolnew,\n              response.data[i].undervolnew,\n              response.data[i].dryvolnew,\n              response.data[i].country,\n              response.data[i].parent\n            )\n          );\n        }\n\n        setRows(row);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h1 className=\"page-title\"> Level Configurations </h1>\n      </div>\n      <Box sx={{ width: \"100%\" }}>\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\n          <div>\n            <div className=\"row mr-5 mt-2 mb-3 ml-5\">\n              <Typography\n                sx={{ flex: \"1 1 100%\" }}\n                variant=\"h6\"\n                id=\"tableTitle\"\n                component=\"div\"\n                className=\" mt-3\"\n              >\n                import level\n              </Typography>\n              <div className=\"col-md-12\">\n                <label>upload excel to change levels data</label>\n                <div className=\"row d-flex mb-2 \">\n                  <div className=\"col-md-3\">\n                    <input\n                      type=\"file\"\n                      className=\"form-control\"\n                      onChange={handleImport}\n                    />\n                  </div>\n                  <div className=\"col-md-3 ml-2 mt-1\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {\n                        handleExcel();\n                      }}\n                    >\n                      sumbit\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Paper>\n      </Box>\n\n      <Box sx={{ width: \"100%\" }}>\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <SharedTable>\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan={6}></TableCell>\n                <TableCell colSpan={4}>\n                  Target Population :\n                  {JSON.parse(localStorage.getItem(\"country\")).poptarget}\n                </TableCell>\n                <TableCell colSpan={6}></TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={3}></TableCell>\n                <TableCell\n                  sx={{\n                    backgroundColor: \"#82c4ed\",\n                    textAlign: \"center\",\n                    borderLeft: \"1px solid black\",\n                  }}\n                  colSpan={5}\n                >\n                  Current values\n                </TableCell>\n                <TableCell\n                  sx={{\n                    backgroundColor: \"#2f7ebf\",\n                    textAlign: \"center\",\n                    borderLeft: \"1px solid black\",\n                    borderRight: \"1px solid black\",\n                  }}\n                  colSpan={5}\n                >\n                  Planned values\n                </TableCell>\n              </TableRow>\n              <TableRow className=\"item-class-page\">\n                <TableCell colSpan={2}></TableCell>\n                {headCells.map((headCell) => (\n                  <TableCell\n                    sx={\n                      headCell.id === \"m25vol\" || headCell.id === \"m25volnew\"\n                        ? { borderLeft: \"1px solid black\" }\n                        : headCell.id === \"dryvolnew\"\n                        ? { borderRight: \"1px solid black\" }\n                        : \"\"\n                    }\n                    key={headCell.id}\n                  >\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody className=\"item-class-page\">\n              {rows.map((row, i) => (\n                <>\n                  {editableRowId !== row.id ? (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                      <TableCell colSpan={2}>\n                        <button\n                          className=\"edit-btn\"\n                          onClick={(event) => handleEdit1(row)}\n                        >\n                          <EditIcon />\n                        </button>\n                      </TableCell>\n                      <TableCell\n                        className=\"text-center\"\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.id}\n                      </TableCell>\n                      <TableCell\n                        scope=\"row\"\n                        className=\"text-center\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell\n                        sx={{\n                          borderLeft: \"1px solid black\",\n                          paddongLeft: \"2px\",\n                        }}\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.m25vol}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {row.uppervol}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {row.undervol}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {row.m70vol}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {row.dryvol}\n                      </TableCell>\n                      <TableCell\n                        sx={{ borderLeft: \"1px solid black\" }}\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.m25volnew}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {row.uppervolnew}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {row.undervolnew}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {row.m70volnew}\n                      </TableCell>\n                      <TableCell\n                        padding=\"none\"\n                        sx={{ borderRight: \"1px solid black\" }}\n                        align=\"center\"\n                      >\n                        {row.dryvolnew}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {separator(row.minpop)}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        {separator(row.maxpop)}\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                      <TableCell colSpan={2}>\n                        <button className=\"save-btn\" onClick={handleSave}>\n                          Save\n                        </button>\n                        <button\n                          className=\"close-btn\"\n                          onClick={() => setEditableRowId(null)}\n                        >\n                          <CloseIcon />\n                        </button>\n                      </TableCell>\n                      <TableCell\n                        className=\"text-center\"\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        <input\n                          required\n                          disabled\n                          value={row.id}\n                          name=\"name\"\n                          isValid={levelValidator(rows[i].name)}\n                          type=\"text\"\n                        />\n                      </TableCell>\n                      <TableCell\n                        scope=\"row\"\n                        padding=\"none\"\n                        className=\"text-center\"\n                      >\n                        <input\n                          required\n                          isValid={levelValidator(rows[i].name)}\n                          value={rows[i].name}\n                          name=\"name\"\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          type=\"text\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell\n                        sx={{ borderLeft: \"1px solid black\" }}\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].m25vol)}\n                          isInvalid={!capacityValidator(rows[i].m25vol)}\n                          value={rows[i].m25vol}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"m25vol\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n\n                        <span></span>\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].uppervol)}\n                          value={rows[i].uppervol}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"uppervol\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].undervol)}\n                          value={rows[i].undervol}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"undervol\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].m70vol)}\n                          value={rows[i].m70vol}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"m70vol\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].dryvol)}\n                          value={rows[i].dryvol}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"dryvol\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                      </TableCell>\n                      <TableCell\n                        sx={{ borderLeft: \"1px solid black\" }}\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].m25volnew)}\n                          value={rows[i].m25volnew}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"m25volnew\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].uppervolnew)}\n                          value={rows[i].uppervolnew}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"uppervolnew\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].undervolnew)}\n                          value={rows[i].undervolnew}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"undervolnew\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].m70volnew)}\n                          value={rows[i].m70volnew}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"m70volnew\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell\n                        padding=\"none\"\n                        sx={{ borderRight: \"1px solid black\" }}\n                        align=\"center\"\n                      >\n                        <input\n                          required\n                          isValid={capacityValidator(rows[i].dryvolnew)}\n                          value={rows[i].dryvolnew}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"dryvolnew\"\n                          type=\"number\"\n                          placeholder=\"0\"\n                          min=\"0\"\n                        />\n                      </TableCell>\n\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={minpopValidator(rows[i].minpop)}\n                          value={separator(rows[i].minpop)}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"minpop\"\n                          type=\"number\"\n                        />\n                        <span></span>\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"center\">\n                        <input\n                          required\n                          isValid={maxpopValidator(row.maxpop)}\n                          value={separator(row.maxpop)}\n                          onChange={(e) => {\n                            handleInputChange(e, i);\n                          }}\n                          name=\"maxpop\"\n                          type=\"number\"\n                        />\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </>\n              ))}\n            </TableBody>\n          </SharedTable>\n\n          {/* pagination */}\n        </Paper>\n      </Box>\n    </div>\n  );\n}\n","function CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n","import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"names":["createData","id","name","maxpop","minpop","uppervol","undervol","m25vol","m70vol","dryvol","m25volnew","m70volnew","uppervolnew","undervolnew","dryvolnew","country","parent","styled","Box","theme","height","width","backgroundColor","color","palette","mode","error","main","headCells","numeric","disablePadding","label","EnhancedTableToolbar","props","numSelected","Toolbar","sx","pl","sm","pr","xs","bgcolor","alpha","primary","action","activatedOpacity","Typography","flex","variant","component","DataTable","React","setOpen","rows","setRows","selected","isEdit","setEdit","setDisable","isFormValid","setIsFormValid","handleSave","UserService","then","response","JSON","parse","localStorage","getItem","row","i","levels","push","data","parseInt","catch","e","toast","setEditableRowId","setEditFormData","handleInputChange","index","target","isNaN","value","number","split","length","num","floatpoint","slice","list","separator","x","toString","replace","levelValidator","text","minpopValidator","maxpopValidator","capacityValidator","check","parseFloat","excel","setExcel","editableRowId","console","log","className","Paper","mb","type","onChange","file","files","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","readAsBinaryString","Button","onClick","level","toFixed","err","finally","handleExcel","SharedTable","TableHead","TableRow","TableCell","colSpan","poptarget","textAlign","borderLeft","borderRight","map","headCell","TableBody","hover","role","tabIndex","event","formData","find","item","handleEdit1","Edit","scope","padding","paddongLeft","align","CloseIcon","required","disabled","isValid","isInvalid","placeholder","min","version","xmlns","xmlnsXlink","y","viewBox","enableBackground","xmlSpace","fillRule","clipRule","d","children","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}