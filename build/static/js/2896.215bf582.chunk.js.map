{
  "version": 3,
  "file": "static/js/2896.215bf582.chunk.js",
  "mappings": "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",
  "sources": [
    "webpack://inventory/./src/app/dashboard/chart-card/chart/ChartDropDown.module.css?dc49",
    "app/dashboard/chart-card/chart/ChartDropDown.js",
    "webpack://inventory/./src/app/dashboard/chart-card/Facilities.module.css?220d",
    "webpack://inventory/./src/app/shared/UI/Card.module.css?f4b8",
    "app/shared/UI/Card.js",
    "app/shared/custom-hooks/use-http.js",
    "app/dashboard/dashboard-api.js",
    "app/dashboard/chart-card/Facilities.js",
    "webpack://inventory/./src/app/dashboard/chart-card/ItemCard.module.css?0e3d",
    "app/dashboard/chart-card/ItemsCard.js",
    "app/dashboard/warnings/WarningItem.js",
    "webpack://inventory/./src/app/dashboard/warnings/Warnings.module.css?e2cb",
    "app/dashboard/warnings/tables/logbook/LogBookItem.js",
    "app/dashboard/warnings/Warnings.js",
    "webpack://inventory/./src/app/dashboard/Dashbord.module.css?b05d",
    "webpack://inventory/./src/app/dashboard/tables/DashboardTables.module.css?e3d7",
    "app/dashboard/tables/sub-facilities/SubFacilitiesTableRow.js",
    "app/dashboard/tables/sub-facilities/SubFacilitiesTable.js",
    "app/dashboard/tables/level/LevelsTableRow.js",
    "app/dashboard/tables/level/LevelsTable.js",
    "app/dashboard/tables/DashboardTables.js",
    "app/dashboard/Dashboard.js",
    "app/services/dashboard.service.js"
  ],
  "sourcesContent": [
    "// extracted by mini-css-extract-plugin\nexport default {\"drop\":\"ChartDropDown_drop__3zt0I\"};",
    "import classes from \"./ChartDropDown.module.css\";\n\nconst ChartDropDown = (props) => {\n  return (\n    <div className={classes.drop}>\n      <select onChange={props.onChange}>\n        <option value=\"\">Select Item Class</option>\n\n        {props.options.map((el, i) => (\n          <option key={i} value={el.id}>\n            {el.op}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default ChartDropDown;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"facilities\":\"Facilities_facilities__joa8-\"};",
    "// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__Bhi4l\"};",
    "import React from 'react';\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n    return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n",
    "import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n",
    "import DashboardService from \"../services/dashboard.service\";\n\nexport async function getItemsAndTypes() {\n  try {\n    const res = await DashboardService.getAllDashboardItems();\n    return res.data;\n  } catch (error) {\n    throw new Error(\"Error fetching data from back-end \" + error.message);\n  }\n}\n\nexport async function getFacilities() {\n  try {\n    const res = await DashboardService.getAllFacilities();\n    return res.data;\n  } catch (error) {\n    throw new Error(\"Error fetching data from back-end \" + error.message);\n  }\n}\n\nexport async function getTablesData() {\n  try {\n    const res = await DashboardService.getAllTablesData();\n\n    return res.data;\n  } catch (error) {\n    throw new Error(\"Error fetching data from back-end \" + error.message);\n  }\n}\n",
    "import React, { useEffect, useState } from \"react\";\n\nimport ChartDropDown from \"./chart/ChartDropDown\";\nimport classes from \"./Facilities.module.css\";\nimport Card from \"../../shared/UI/Card\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\nimport { getFacilities } from \"../dashboard-api\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../../shared/Spinner\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { Trans } from \"react-i18next\";\nconst Facilities = () => {\n  const [facilities, setFacilities] = useState([]);\n  const [chartData, setChartData] = useState();\n\n  const { sendRequest, status, data, error: err } = useHttp(getFacilities);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n\n  // Handling api response\n  if (status === \"pending\") {\n    return <Spinner />;\n  }\n\n  // TODO: Remove error message at production\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  if (status === \"completed\" && facilities.length === 0) {\n    let tmp = [];\n    data.map((el, i) => {\n      tmp.push({ op: el.name, id: i, facility: el });\n    });\n    setFacilities(tmp);\n  }\n\n  const ddChangeHandler = (e) => {\n    e.preventDefault();\n    facilities.map((el) => {\n      if (el.id === +e.target.value) {\n        const definedNum = +el.facility.defined;\n        setChartData({\n          defined: definedNum.toFixed(2),\n          subFacilities: el.facility.sub_fac,\n        });\n      }\n    });\n  };\n\n  return (\n    <div className={classes.facilities}>\n      <Card>\n        <h3>\n          🏢 <Trans>Facilities</Trans>{\" \"}\n        </h3>\n        <ChartDropDown onChange={ddChangeHandler} options={facilities} />\n        <GaugeChart\n          id=\"gauge-chart6\"\n          animate={true}\n          nrOfLevels={15}\n          percent={chartData ? chartData.defined : \"\"}\n          needleColor=\"#345243\"\n          colors={[\"#EA4228\", \"#F5CD19\", \"#5BE12C\"]}\n          textColor={\"#000000\"}\n          animDelay={100}\n        />\n        {chartData && (\n          <div>\n            <span>{chartData.subFacilities}</span>\n            <p>\n              {\" \"}\n              <Trans>Subset Facilities</Trans>{\" \"}\n            </p>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Facilities;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ItemCard_item__XSGC1\"};",
    "import Card from \"../../shared/UI/Card\";\nimport ChartDropDown from \"./chart/ChartDropDown\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { getItemsAndTypes } from \"../dashboard-api\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\n\nimport classes from \"./ItemCard.module.css\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../../shared/Spinner\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { Trans } from \"react-i18next\";\n\nconst ItemsCard = () => {\n  const [itemClasses, setItemClasses] = useState([]);\n  const [items, setItems] = useState([]);\n  const [chartData, setChartData] = useState();\n\n  // api call to get items and types\n  const { sendRequest, status, data, error: err } = useHttp(getItemsAndTypes);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n\n  // Handling api response\n\n  if (status === \"pending\") {\n    return <Spinner />;\n  }\n  // TODO: Remove error message at production\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  // ----------- Feeding to app\n  // creating first dropdown available options\n  if (status === \"completed\" && itemClasses.length === 0) {\n    // Setting item classes\n    let tmp = [];\n    data.map((el, i) => {\n      tmp.push({ op: el.item_class, id: i });\n    });\n    setItemClasses(tmp);\n\n    tmp = [];\n  }\n  // after selecting first dropdown option, create second dropdown options based in first ID.\n  const itemClassChangeHandler = (e) => {\n    e.preventDefault();\n    let tmp = [];\n    const classId = e.target.value;\n\n    data.map((el, i) => {\n      if (i === +classId) {\n        el.items.map((el, j) => {\n          console.log(el);\n          tmp.push({\n            id: j,\n            classId: i,\n            op: el.item_type,\n            working: el.working,\n            notWorking: el.not_working,\n            totalItems: el.total_items,\n          });\n        });\n      }\n    });\n\n    setItems(tmp);\n  };\n  // like before, find desired result based on ID found in onChange event.\n  const itemChangeHandler = (e) => {\n    const itemId = e.target.value;\n    items.map((el) => {\n      if (el.id === +itemId) {\n        setChartData({\n          notWorking: el.notWorking,\n          working: el.working.toFixed(2),\n          totalItems: el.totalItems,\n        });\n      }\n    });\n  };\n\n  return (\n    <div className={classes.item}>\n      <Card>\n        <h3>\n          🏢 <Trans>Items</Trans>{\" \"}\n        </h3>\n        <ChartDropDown\n          onChange={itemClassChangeHandler}\n          options={itemClasses}\n        />\n        <ChartDropDown onChange={itemChangeHandler} options={items} />\n        <GaugeChart\n          className=\"pt-3\"\n          id=\"gauge-chart6\"\n          animate={true}\n          nrOfLevels={15}\n          percent={chartData ? chartData.working : \"\"}\n          needleColor=\"#345243\"\n          colors={[\"#EA4228\", \"#F5CD19\", \"#5BE12C\"]}\n          textColor={\"#000000\"}\n          animDelay={100}\n        />\n        {chartData && (\n          <div>\n            <span>{chartData.totalItems}</span>\n            <p>\n              <Trans>Items</Trans>\n            </p>\n            <p className={\"text-secondary mb-1\"} style={{ fontSize: \"13px\" }}>\n              <Trans>Working</Trans>: {chartData.working * 100}%\n            </p>\n            <p className={\"text-secondary mb-1\"} style={{ fontSize: \"13px\" }}>\n              <Trans>Not working</Trans>: {chartData.notWorking}\n            </p>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n};\nexport default ItemsCard;\n",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\n\nconst WarningItem = (props) => {\n  return (\n    <div className=\"d-flex mb-3\">\n      <div>\n        <p className=\"activity-info bg-warning\" style={{ color: \"#000000\" }}>\n          {\" \"}\n          ⚠{\" \"}\n        </p>\n      </div>\n      <div className=\"activity-details\">\n        <Link\n          className={`p-0 btn btn-link btn-fw text-muted ${\n            props.count === 0 ? \"pe-none\" : \"\"\n          } `}\n          style={{ fontSize: \"16px\", textDecorationColor: \"#777\" }}\n          to={\"dashboard/warnings-info/\" + props.param}\n        >\n          <Trans>\n            {`(${props.count})  `}\n            {props.title}\n          </Trans>\n          <label\n            className={`badge badge-danger opacity-${props.badgeOp} `}\n            style={{ fontSize: \"12px\" }}\n          >\n            <Trans>{props.badge}</Trans>\n          </label>\n          {props.maxExtended && (\n            <label\n              className={`badge badge-warning  `}\n              style={{ fontSize: \"12px\" }}\n            >\n              <Trans>{props.maxExtended} days extended</Trans>\n            </label>\n          )}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default WarningItem;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"warnings\":\"Warnings_warnings__73LHj\"};",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\n\nconst LogBookItem = () => {\n  return (\n    <div className=\"d-flex mb-3\">\n      <div>\n        <p className=\"activity-info bg-info\" style={{ color: \"#000000\" }}>\n          i\n        </p>\n      </div>\n      <div className=\"activity-details\">\n        <Link\n          className={`p-0 btn btn-link btn-fw text-muted `}\n          style={{ fontSize: \"16px\", textDecorationColor: \"#777\" }}\n          to={\"dashboard/maintenanceLog\"}\n        >\n          <Trans>Item Maintenance Logbook</Trans>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LogBookItem;\n",
    "import WarningItem from \"./WarningItem\";\nimport React from \"react\";\n\nimport classes from \"./Warnings.module.css\";\nimport { useQuery } from \"react-query\";\n\nimport dashboardService from \"../../services/dashboard.service\";\nimport LogBookItem from \"./tables/logbook/LogBookItem\";\nimport { Trans } from \"react-i18next\";\n\nconst warningsData = [\n  {\n    title: \"Maintenance services must be done in   \",\n\n    badge: \"7 Days\",\n  },\n  {\n    title: \"Maintenance services must be done in   \",\n\n    badge: \"3 Days\",\n  },\n  {\n    title: \"Maintenance  services were \",\n    badge: \"not performed on time\",\n  },\n  {\n    title: \"Maintenance  services were \",\n    badge: \"not performed on time\",\n  },\n];\n\nconst Warnings = () => {\n  const { data, isLoading: warningData } = useQuery(\n    [\"warnings\"],\n    async () => {\n      const res = await dashboardService.getAllWarningsData();\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (warningData || data.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={`card-body recent-activity ${classes.warnings}`}>\n      <h4 className=\"card-title\">\n        {\" \"}\n        <Trans>Warnings</Trans>\n      </h4>\n\n      <p className=\"card-description\">\n        <Trans>Warnings that need to be taken cared of</Trans>\n      </p>\n\n      {data && (\n        <div className=\"activities\">\n          <WarningItem\n            title={warningsData[0].title}\n            text={warningsData[0].text}\n            badge={warningsData[0].badge}\n            count={data.seven_days}\n            badgeOp={50}\n            param={\"day=7\"}\n          />\n          <WarningItem\n            title={warningsData[1].title}\n            text={warningsData[1].text}\n            badge={warningsData[1].badge}\n            count={data.three_days}\n            badgeOp={75}\n            param={\"day=3\"}\n          />\n          <WarningItem\n            title={warningsData[2].title}\n            text={warningsData[2].text}\n            badge={warningsData[2].badge}\n            count={data.extended.count}\n            maxExtended={data.extended.maxExtended}\n            badgeOp={100}\n            param={\"day=extended\"}\n          />\n          <LogBookItem />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Warnings;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"charts\":\"Dashbord_charts__aHm0k\",\"warning\":\"Dashbord_warning__DSWyr\",\"tables\":\"Dashbord_tables__B47JG\"};",
    "// extracted by mini-css-extract-plugin\nexport default {\"levels\":\"DashboardTables_levels__KWMUa\",\"sub-facilities\":\"DashboardTables_sub-facilities__YkEFi\"};",
    "import React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nconst SubFacilitiesTableRow = (props) => {\n  const updatedOn = props.updatedOn.split(\"T\")[0].replace(/-/g, \" / \");\n\n  return (\n    <tr>\n      <td key={\"E\"}> {props.num} </td>\n\n      <td key={\"F\"} className=\"py-1\">\n        {props.name}\n      </td>\n\n      <td key={\"G\"}>\n        <label className=\"badge badge-info\"> {props.level} </label>\n      </td>\n      <td key={\"Z\"} className=\"py-1\">\n        {` ${props.levelName}`}\n      </td>\n\n      <td key={\"H\"}>\n        <ProgressBar variant={props.variant} now={props.registered} />\n      </td>\n      <td key={\"J\"}> {updatedOn} </td>\n    </tr>\n  );\n};\nexport default SubFacilitiesTableRow;\n",
    "import React from \"react\";\nimport SubFacilitiesTableRow from \"./SubFacilitiesTableRow\";\nimport { Trans } from \"react-i18next\";\n\nconst SubFacilitiesTable = (props) => {\n  const generateRows = () => {\n    let rows = [];\n    for (let i = 0; i < props.data.length; i++) {\n      const variant = i % 2 === 0 ? \"success\" : \"warning\";\n\n      rows.push(\n        <SubFacilitiesTableRow\n          key={i + 1}\n          num={props.data[i].id}\n          name={props.data[i].name}\n          level={props.data[i].level_id}\n          levelName={props.data[i].level_name}\n          registered={+props.data[i].defined * 100}\n          updatedOn={props.data[i].update}\n          variant={variant}\n        />\n      );\n    }\n    return rows;\n  };\n  return (\n    <div className={\"py-2 px-2\"}>\n      <h4 className=\"card-title\">\n        {\" \"}\n        <Trans>Sub Facilities</Trans>\n      </h4>\n      <p className=\"card-description\">\n        <Trans>list of all sub facilities </Trans>\n      </p>\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>\n                <Trans>#</Trans>\n              </th>\n              <th>\n                <Trans>Facility Name</Trans>\n              </th>\n              <th>\n                <Trans>Level</Trans>\n              </th>\n              <th>\n                <Trans>Level name</Trans>\n              </th>\n              <th>\n                <Trans>Registered</Trans>\n              </th>\n              <th>\n                <Trans>Last Update</Trans>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>{generateRows()}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SubFacilitiesTable;\n",
    "import React from \"react\";\n\nconst LevelsTableRow = (props) => {\n  console.log(props._key);\n  return (\n    <tr>\n      <td key={\"A\"}>\n        <label className=\"badge badge-info\"> {props.level} </label>{\" \"}\n      </td>\n      <td key={\"B\"}>{props.levelName}</td>\n      <td key={\"C\"}>{props.facilitiesNum}</td>\n      <td key={\"D\"}>{props.subFacilitiesNum}</td>\n      <td key={\"E\"}>{props.defSubFacilitiesNum}</td>\n    </tr>\n  );\n};\n\nexport default LevelsTableRow;\n",
    "import LevelsTableRow from \"./LevelsTableRow\";\nimport React from \"react\";\nimport { Trans } from \"react-i18next\";\n\nconst LevelsTable = (props) => {\n  return (\n    <div className={\"px-2 py-5\"}>\n      <h4 className=\"card-title\"> 🏢 Facilities</h4>\n      <p className=\"card-description\"> Facilities owned separated by levels</p>\n      <div className=\"table-responsive\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>\n                <Trans>Level</Trans>\n              </th>\n              <th>\n                <Trans>Level Name</Trans>\n              </th>\n              <th>\n                <Trans>Total number of facilities</Trans>\n              </th>\n              <th>\n                <Trans>Total number of sub-facilities</Trans>\n              </th>\n              <th>\n                <Trans>Number of Defined sub-level facilities</Trans>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.data.map((item, i) => {\n              return (\n                <LevelsTableRow\n                  key={i}\n                  level={item.level_id}\n                  levelName={item.level_name}\n                  facilitiesNum={item.total}\n                  subFacilitiesNum={item.sub}\n                  defSubFacilitiesNum={item.def}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\nexport default LevelsTable;\n",
    "import React, { Fragment, useEffect, useState } from \"react\";\nimport classes from \"./DashboardTables.module.css\";\nimport SubFacilitiesTable from \"./sub-facilities/SubFacilitiesTable\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\nimport { getTablesData } from \"../dashboard-api\";\nimport LevelsTable from \"./level/LevelsTable\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../../shared/Spinner\";\n\nconst DashboardTables = () => {\n  const { sendRequest, status, data, error: err } = useHttp(getTablesData);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n  if (status === \"pending\") {\n    return <Spinner />;\n  }\n  console.log(\"error object\", err);\n  // TODO: Remove error message at production\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  if (status === \"completed\" && !dataLoaded) {\n    setDataLoaded(true);\n  }\n\n  return (\n    <Fragment>\n      <section className={classes.levels}>\n        {dataLoaded && <LevelsTable data={data.level_table} />}\n      </section>\n      <section className={classes[\"sub-facilities\"]}>\n        {dataLoaded && <SubFacilitiesTable data={data.facility_table} />}\n      </section>\n    </Fragment>\n  );\n};\n\nexport default DashboardTables;\n",
    "import React from \"react\";\n\nimport Facilities from \"./chart-card/Facilities\";\nimport ItemsCard from \"./chart-card/ItemsCard\";\nimport Warnings from \"./warnings/Warnings\";\n\nimport classes from \"./Dashbord.module.css\";\n\nimport DashboardTables from \"./tables/DashboardTables\";\n\nconst Dashboard = () => {\n  return (\n    <main>\n      <section className={classes.charts}>\n        <ItemsCard />\n        <Facilities />\n      </section>\n\n      <section className={classes.warning}>\n        <Warnings />\n      </section>\n\n      <DashboardTables />\n    </main>\n  );\n};\n\nexport default Dashboard;\n",
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://127.0.0.1:8000/dashboard\";\n\nclass DashboardService {\n  getAllDashboardItems() {\n    return ApiManager.get(API_URL + \"/item\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllFacilities() {\n    return ApiManager.get(API_URL + \"/facility\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllTablesData() {\n    return ApiManager.get(API_URL + \"/table\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getAllWarningsData() {\n    return ApiManager.get(API_URL + \"/maintenance\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getWarningsInfo(payload) {\n    return ApiManager.get(API_URL + \"/todo\" + payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenanceLog() {\n    return ApiManager.get(API_URL + \"/maintenancelog\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  postWarningsAsDone(payload) {\n    return ApiManager.post(API_URL + \"/todo\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getLogDetails(payload) {\n    console.log(API_URL + \"/maintenancelog\" + payload);\n    return ApiManager.get(API_URL + \"/maintenancelog\" + payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\nexport default new DashboardService();\n"
  ],
  "names": [
    "props",
    "className",
    "classes",
    "onChange",
    "value",
    "options",
    "map",
    "el",
    "i",
    "id",
    "op",
    "children",
    "httpReducer",
    "state",
    "action",
    "type",
    "data",
    "error",
    "status",
    "responseData",
    "errorMessage",
    "requestFunction",
    "startWithPending",
    "useReducer",
    "httpState",
    "dispatch",
    "sendRequest",
    "useCallback",
    "requestData",
    "message",
    "getItemsAndTypes",
    "DashboardService",
    "res",
    "Error",
    "getFacilities",
    "getTablesData",
    "useState",
    "facilities",
    "setFacilities",
    "chartData",
    "setChartData",
    "useHttp",
    "err",
    "useEffect",
    "Spinner",
    "toast",
    "length",
    "tmp",
    "push",
    "name",
    "facility",
    "Trans",
    "e",
    "preventDefault",
    "target",
    "definedNum",
    "defined",
    "toFixed",
    "subFacilities",
    "sub_fac",
    "animate",
    "nrOfLevels",
    "percent",
    "needleColor",
    "colors",
    "textColor",
    "animDelay",
    "itemClasses",
    "setItemClasses",
    "items",
    "setItems",
    "item_class",
    "classId",
    "j",
    "console",
    "log",
    "item_type",
    "working",
    "notWorking",
    "not_working",
    "totalItems",
    "total_items",
    "itemId",
    "style",
    "fontSize",
    "color",
    "count",
    "textDecorationColor",
    "to",
    "param",
    "title",
    "badgeOp",
    "badge",
    "maxExtended",
    "warningsData",
    "useQuery",
    "dashboardService",
    "refetchOnMount",
    "isLoading",
    "text",
    "seven_days",
    "three_days",
    "extended",
    "updatedOn",
    "split",
    "replace",
    "num",
    "level",
    "levelName",
    "ProgressBar",
    "variant",
    "now",
    "registered",
    "rows",
    "level_id",
    "level_name",
    "update",
    "generateRows",
    "_key",
    "facilitiesNum",
    "subFacilitiesNum",
    "defSubFacilitiesNum",
    "item",
    "total",
    "sub",
    "def",
    "dataLoaded",
    "setDataLoaded",
    "Fragment",
    "level_table",
    "facility_table",
    "API_URL",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "payload"
  ],
  "sourceRoot": ""
}
