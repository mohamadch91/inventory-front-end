{
  "version": 3,
  "file": "static/js/1202.a2ace2c4.chunk.js",
  "mappings": "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",
  "sources": [
    "app/services/related.service.js",
    "app/settings/ParameterDescription.js",
    "app/shared/CloseIcon.js",
    "app/shared/EditIcon.js",
    "app/shared/SharedTable.js"
  ],
  "sourcesContent": [
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8000/related/\";\n\nclass RelatedService {\n  getParameters() {\n    return ApiManager.get(API_URL + \"params\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getParameterDescriptions(id, type) {\n    return ApiManager.get(API_URL + \"params/?id=\" + id + \"&type=\" + type, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putParameters(data) {\n    return ApiManager.put(API_URL + \"params/\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemFields() {\n    return ApiManager.get(API_URL + \"item-fields\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemFields(data) {\n    // change item type\n    return ApiManager.put(API_URL + \"item-fields\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getRelatedItemType(id) {\n    const params = {};\n    if (id) {\n      params[\"id\"] = id;\n    }\n    return ApiManager.get(API_URL + \"related-item-type\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  putRelatedItemType(payload) {\n    return ApiManager.put(API_URL + \"related-item-type\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getRelatedFacility() {\n    return ApiManager.get(API_URL + \"related-facility/\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putRelatedFacility(payload) {\n    return ApiManager.put(API_URL + \"related-facility/\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new RelatedService();\n",
    "import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport CloseIcon from \"../shared/CloseIcon\";\nimport EditIcon from \"../shared/EditIcon\";\nimport SharedTable from \"../shared/SharedTable\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../shared/Spinner\";\nimport \"./itemClass.scss\";\nimport \"./itemType.scss\";\nimport \"../styles/inputs.scss\";\nimport RelatedService from \"../services/related.service\";\nimport { useParams } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\n\nfunction ParameterDescription() {\n  const [descriptions, setDescriptions] = useState([]);\n  const [paramName, setParamName] = useState(\"\");\n  const [editFormData, setEditFormData] = useState({});\n  const [addRowFormData, setAddRowFormData] = useState({\n    name: \"\",\n    order: null,\n    enabled: true,\n  });\n  const [editableRowId, setEditableRowId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { id } = useParams();\n\n  function getData(type, id) {\n    RelatedService.getParameterDescriptions(id, type)\n      .then((res) => {\n        setDescriptions(res.data[\"description\"]);\n        setParamName(res.data[\"name\"]);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n                toast.error(<Trans>There is a problem loading data</Trans>);\n\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    const params = id?.split(\"-\");\n    getData(params[0], params[1]);\n  }, [id]);\n\n  // useEffect(() => {\n  //   setAddRowFormData({\n  //     ...addRowFormData,\n  //     enabled: false,\n  //   });\n  // }, [descriptions]);\n\n  function handleEdit(i) {\n    const formData = descriptions.find((item) => item.id === i.id);\n    setEditFormData(formData);\n    setEditableRowId(i.id);\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    setEditFormData({ ...editFormData, [name]: value });\n  }\n\n  function handleChangeAdd(e) {\n    const { name, value } = e.target;\n\n    setAddRowFormData({ ...addRowFormData, [name]: value });\n  }\n\n  function handleSubmitEdit(e) {\n    e.preventDefault();\n    const isValid = Object.keys(editFormData).every((key) => {\n      return editFormData[key] !== \"\" && editFormData[key] !== null;\n    });\n    if (!isValid) {\n            toast.error(<Trans>Please fill all the fields</Trans>);\n\n    } else {\n      setIsLoading(true);\n      let formToPut = editFormData;\n      formToPut.type = id.split(\"-\")[0];\n      RelatedService.putParameters(formToPut)\n        .then((res) => {\n          const params = id.split(\"-\");\n          getData(params[0], params[1]);\n        })\n        .catch((err) => {\n                    toast.error(<Trans>There is a problem sending data</Trans>);\n\n          setIsLoading(false);\n        });\n      setEditableRowId(null);\n      setEditFormData({});\n    }\n  }\n\n  function handleSubmitNew(e) {\n    e.preventDefault();\n    const isValid = Object.keys(addRowFormData).every((key) => {\n      return addRowFormData[key] !== \"\" && addRowFormData[key] !== null;\n    });\n    if (!isValid) {\n            toast.error(<Trans>Please fill all the fields</Trans>);\n\n    } else {\n      setIsLoading(true);\n      let formToPut = (({ name, enabled, order }) => ({\n        name,\n        enabled,\n        order,\n      }))(addRowFormData);\n      formToPut.type = id.split(\"-\")[0];\n      formToPut.paramid = parseInt(id.split(\"-\")[1]);\n      RelatedService.putParameters(formToPut)\n        .then((res) => {\n          const params = id.split(\"-\");\n          getData(params[0], params[1]);\n        })\n        .catch((err) => {\n                    toast.error(<Trans>There is a problem sending data</Trans>);\n\n          setIsLoading(false);\n        });\n      setAddRowFormData({\n        ...addRowFormData,\n        name: \"\",\n        order: null,\n        enabled: false,\n      });\n    }\n  }\n\n  return (\n    <div className=\"item-class-page-param\">\n      <h2 className=\"page-title mb-3\">\n        <Trans>{id?.split(\"-\")[0]}</Trans> <Trans>Parameter Descriptions</Trans>\n      </h2>\n      <h3 className=\"mb-3 param-name\">{paramName}</h3>\n      <div className=\"add-row mt-4 mb-4\">\n        <h3>\n          <Trans>Insert parameter In this row :</Trans>\n        </h3>\n        <form onSubmit={handleSubmitNew}>\n          <div className=\"row\">\n            <div className=\"col-md-4 flex-column d-flex\">\n              <label>\n                <Trans>Parameter description</Trans>\n              </label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                onChange={handleChangeAdd}\n                value={addRowFormData?.name}\n                required\n              ></input>\n            </div>\n            <div className=\"col-md-4 flex-column d-flex\">\n              <label>\n                <Trans>Show order</Trans>\n              </label>\n              <input\n                name=\"order\"\n                type=\"number\"\n                onChange={handleChangeAdd}\n                value={addRowFormData?.order}\n                required\n              ></input>\n            </div>\n            <div className=\"col-md-4 d-flex justify-content-center align-items-center mt-3\">\n              <label>\n                <Trans>Enable</Trans>\n              </label>\n              <div class=\"form-check form-check-primary mt-3\">\n                <label className=\"form-check-label\">\n                  <input\n                    name=\"enabled\"\n                    className=\"mr-4\"\n                    type=\"checkbox\"\n                    onChange={() =>\n                      setAddRowFormData({\n                        ...addRowFormData,\n                        enabled: !addRowFormData.enabled,\n                      })\n                    }\n                    checked={addRowFormData?.enabled}\n                  ></input>\n                  <i className=\"input-helper mt-3\"></i>\n                </label>\n              </div>\n              <button className=\"save-btn\" type=\"submit\">\n                <Trans>Save</Trans>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <div>\n            <SharedTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Trans>Description</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Show order</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Enable</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Edit</Trans>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {descriptions.map((item, index) => (\n                  <>\n                    {editableRowId !== item.id ? (\n                      <TableRow>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.order}</TableCell>\n                        <TableCell>\n                          <div class=\"form-check form-check-primary mt-3\">\n                            <label className=\"form-check-label\">\n                              <input\n                                type=\"checkbox\"\n                                checked={item.enabled}\n                                disabled\n                              ></input>\n                              <i className=\"input-helper mt-3\"></i>\n                            </label>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <button\n                            className=\"edit-btn\"\n                            onClick={(event) => handleEdit(item)}\n                          >\n                            <EditIcon />\n                          </button>\n                        </TableCell>\n                      </TableRow>\n                    ) : (\n                      <TableRow>\n                        <TableCell>\n                          <input\n                            name=\"name\"\n                            type=\"text\"\n                            onChange={handleChange}\n                            value={editFormData?.name}\n                            required\n                          ></input>\n                        </TableCell>\n                        <TableCell>\n                          <input\n                            name=\"order\"\n                            type=\"number\"\n                            onChange={handleChange}\n                            value={editFormData?.order}\n                            required\n                          ></input>\n                        </TableCell>\n                        <TableCell>\n                          <div class=\"form-check form-check-primary mt-3\">\n                            <label className=\"form-check-label\">\n                              <input\n                                name=\"enabled\"\n                                type=\"checkbox\"\n                                onChange={() =>\n                                  setEditFormData({\n                                    ...editFormData,\n                                    enabled: !editFormData.enabled,\n                                  })\n                                }\n                                checked={editFormData?.enabled}\n                              ></input>\n                              <i className=\"input-helper mt-3\"></i>\n                            </label>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <button\n                            className=\"save-btn\"\n                            onClick={handleSubmitEdit}\n                          >\n                            <Trans>Save</Trans>\n                          </button>\n                          <button\n                            className=\"close-btn\"\n                            onClick={() => setEditableRowId(null)}\n                          >\n                            <CloseIcon />\n                          </button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </>\n                ))}\n              </TableBody>\n            </SharedTable>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ParameterDescription;\n",
    "/**\n * retun an svg\n *   CloseIcon\n */\nfunction CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n",
    "/**\n * retun an svg\n *   EditIcon\n */\nfunction EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        width=\"30\"\n        height=\"30\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n/**\n * @param  {DOMElement} {children}\n * shared table use in settings and all tables\n */\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"
  ],
  "names": [
    "API_URL",
    "RelatedService",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "id",
    "type",
    "data",
    "params",
    "payload",
    "useState",
    "descriptions",
    "setDescriptions",
    "paramName",
    "setParamName",
    "editFormData",
    "setEditFormData",
    "name",
    "order",
    "enabled",
    "addRowFormData",
    "setAddRowFormData",
    "editableRowId",
    "setEditableRowId",
    "isLoading",
    "setIsLoading",
    "useParams",
    "getData",
    "then",
    "res",
    "catch",
    "err",
    "toast",
    "handleChange",
    "e",
    "target",
    "value",
    "handleChangeAdd",
    "handleSubmitEdit",
    "preventDefault",
    "Object",
    "keys",
    "every",
    "key",
    "formToPut",
    "split",
    "useEffect",
    "className",
    "onSubmit",
    "paramid",
    "parseInt",
    "onChange",
    "required",
    "class",
    "checked",
    "map",
    "item",
    "index",
    "disabled",
    "onClick",
    "event",
    "i",
    "formData",
    "find",
    "handleEdit",
    "version",
    "xmlns",
    "xmlnsXlink",
    "x",
    "y",
    "width",
    "height",
    "viewBox",
    "enableBackground",
    "xmlSpace",
    "fillRule",
    "clipRule",
    "d",
    "children"
  ],
  "sourceRoot": ""
}
