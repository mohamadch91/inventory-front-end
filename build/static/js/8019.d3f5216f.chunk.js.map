{
  "version": 3,
  "file": "static/js/8019.d3f5216f.chunk.js",
  "mappings": "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",
  "sources": [
    "app/services/maintenance.service.js",
    "app/settings/MaintenanceServiceGroup.js",
    "app/shared/SharedTable.js"
  ],
  "sourcesContent": [
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"https://jorapi.invgap.org/maintanance/\";\n\nclass MaintenanceService {\n  getMaintenanceHelper() {\n    return ApiManager.get(API_URL + \"helper\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenance(item_class, item_type) {\n    const params = { item_class, item_type };\n    return ApiManager.get(API_URL, {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postMaintenance(payload) {\n    return ApiManager.post(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putMaintenance(payload) {\n    return ApiManager.put(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenanceGp(item_class, item_type) {\n    const params = { item_class, item_type };\n    return ApiManager.get(API_URL + \"gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postMaintenanceGp(payload) {\n    return ApiManager.post(API_URL + \"gp\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putMaintenanceGp(payload) {\n    return ApiManager.put(API_URL + \"gp\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenanceActive(item_class, item_type, gp) {\n    const params = { item_class, item_type, gp };\n    return ApiManager.get(API_URL + \"active\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postMaintenanceActive(payload) {\n    return ApiManager.post(API_URL + \"active\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new MaintenanceService();\n",
    "import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useState } from \"react\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../shared/Spinner\";\nimport { Form } from \"react-bootstrap\";\nimport \"../styles/table.scss\";\nimport \"../styles/inputs.scss\";\nimport { useEffect } from \"react\";\nimport MaintenanceService from \"../services/maintenance.service\";\nimport { Trans } from \"react-i18next\";\n\nfunction MaintenanceServiceGroup() {\n  const [selectedItemClassAndItemTypes, setSelectedItemClassAndItemTypes] =\n    useState();\n  const [selectedItemType, setSelectedItemType] = useState();\n  const [selectedGp, setSelectedGp] = useState();\n  const [editedFields, setEditedFields] = useState([]);\n\n  const { data: itemClassesWithItemTypes, isLoading: isItemClassesLoading } =\n    useQuery(\n      [\"active-item-classes-with-item-type\"],\n      async () => {\n        const res = await MaintenanceService.getMaintenanceHelper();\n        return res.data;\n      },\n      {\n        onSuccess(data) {\n          setSelectedItemClassAndItemTypes(data[0]);\n          setSelectedItemType(data[0].item_type[0]);\n          setSelectedGp(data[0].item_type[0].maintancegp[0]);\n        },\n      }\n    );\n\n  const {\n    data: maintenances,\n    isLoading: isMaintenancesLoading,\n    refetch: fetchMaintenance,\n  } = useQuery(\n    [\n      \"get-maintenances\",\n      selectedItemType?.id,\n      selectedItemClassAndItemTypes?.item_class.id,\n      selectedGp?.id,\n    ],\n    async () => {\n      const res = await MaintenanceService.getMaintenanceActive(\n        selectedItemClassAndItemTypes?.item_class.id,\n        selectedItemType?.id,\n        selectedGp?.id\n      );\n      return res.data;\n    },\n    { enabled: false, cacheTime: 0 }\n  );\n\n  useEffect(() => {\n    if (selectedItemType && selectedItemClassAndItemTypes && selectedGp) {\n      fetchMaintenance();\n    }\n  }, [selectedGp]);\n\n  const selectItemClassHandler = (e) => {\n    const value = +e.target.value;\n    const item = itemClassesWithItemTypes.find(\n      (item) => item.item_class.id === value\n    );\n    setSelectedItemClassAndItemTypes(item);\n    setSelectedItemType(item.item_type?.[0]);\n    setSelectedGp(item.item_type?.[0]?.maintancegp?.[0]);\n  };\n\n  const selectItemTypeHandler = (e) => {\n    const value = +e.target.value;\n    const item = selectedItemClassAndItemTypes.item_type.find(\n      (item) => item.id === value\n    );\n    setSelectedItemType(item);\n    setSelectedGp(item.maintancegp?.[0]);\n  };\n\n  const selectGpHandler = (e) => {\n    const value = +e.target.value;\n    const item = selectedItemType.maintancegp.find((item) => item.id === value);\n    setSelectedGp(item);\n  };\n\n  const onAcceptHandler = async () => {\n    const res = await MaintenanceService.postMaintenanceActive(editedFields);\n    fetchMaintenance();\n    setEditedFields([]);\n  };\n\n  if (isItemClassesLoading || isMaintenancesLoading) {\n    return <Spinner />;\n  }\n\n  console.log(selectedItemType);\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\"><Trans>Maintenance Service Group Assignment</Trans></h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-sm-12 col-lg-4\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-12\"><Trans>Item class</Trans></label>\n                  <div className=\"col-sm-12\">\n                    <Form.Control\n                      onChange={selectItemClassHandler}\n                      className=\"form-select\"\n                      as=\"select\"\n                      value={selectedItemClassAndItemTypes?.item_class.id}\n                    >\n                      {itemClassesWithItemTypes.map((itemClass) => (\n                        <option\n                          key={itemClass.item_class.id}\n                          value={itemClass.item_class.id}\n                        >\n                          {itemClass.item_class.title}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </div>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12 col-lg-4\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-12\"><Trans>Items category</Trans></label>\n                  <div className=\"col-sm-12\">\n                    <Form.Control\n                      onChange={selectItemTypeHandler}\n                      className=\"form-select\"\n                      disabled={selectedItemClassAndItemTypes === null}\n                      as=\"select\"\n                      value={selectedItemType?.id}\n                    >\n                      {selectedItemClassAndItemTypes?.item_type.map(\n                        (itemType) => (\n                          <option key={itemType.id} value={itemType.id}>\n                            {itemType.title}\n                          </option>\n                        )\n                      )}\n                    </Form.Control>\n                  </div>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12 col-lg-4\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-12\"><Trans>Maintenance group</Trans></label>\n                  <div className=\"col-sm-12\">\n                    <Form.Control\n                      onChange={selectGpHandler}\n                      className=\"form-select\"\n                      disabled={selectedItemType === null}\n                      as=\"select\"\n                      value={selectedGp?.id}\n                    >\n                      {selectedItemType?.maintancegp.map((gp) => (\n                        <option value={gp.id} key={gp.id} disabled={!gp.enable}>\n                          {gp.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </div>\n                </Form.Group>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body p-3\">\n            <div\n              className=\"row\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <div className=\"col-sm-2\">\n                <button\n                  disabled={editedFields.length === 0}\n                  className=\"btn btn-primary\"\n                  onClick={onAcceptHandler}\n                >\n                  <Trans>Save changes</Trans>\n                </button>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"mt-3 table-container\">\n                <SharedTable>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"col-sm-10\">\n                        <Trans>Service/ Maintenance items</Trans>\n                      </TableCell>\n                      <TableCell className=\"col-sm-2\"><Trans>Enable</Trans></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {maintenances?.map((field) => {\n                      return (\n                        <TableRow\n                          key={\n                            field.assigned ? field.id : field.maintance?.name\n                          }\n                        >\n                          <TableCell className=\"col-sm-10\">\n                            {field.maintance?.name}\n                          </TableCell>\n                          <TableCell className=\"col-sm-2\">\n                            <div class=\"form-check form-check-primary mt-3\">\n                              <label className=\"form-check-label\">\n                                <input\n                                  type=\"checkbox\"\n                                  defaultChecked={field.assigned}\n                                  onChange={(e) => {\n                                    const checked = e.target.checked;\n                                    const _fieldsClone = [...editedFields];\n                                    const index = _fieldsClone.findIndex(\n                                      (f) => f.id === field.id\n                                    );\n                                    if (index >= 0) {\n                                      _fieldsClone[index].enable = checked;\n                                    } else {\n                                      _fieldsClone.push({\n                                        id: field.maintance.id,\n                                        gp: selectedGp.id,\n                                        enable: checked,\n                                      });\n                                    }\n                                    setEditedFields(_fieldsClone);\n                                  }}\n                                />\n                                <i className=\"input-helper mt-3\"></i>\n                              </label>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </SharedTable>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MaintenanceServiceGroup;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n/**\n * @param  {DOMElement} {children}\n * shared table use in settings and all tables\n */\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"
  ],
  "names": [
    "API_URL",
    "MaintenanceService",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "item_class",
    "item_type",
    "params",
    "payload",
    "gp",
    "useState",
    "selectedItemClassAndItemTypes",
    "setSelectedItemClassAndItemTypes",
    "selectedItemType",
    "setSelectedItemType",
    "selectedGp",
    "setSelectedGp",
    "editedFields",
    "setEditedFields",
    "useQuery",
    "res",
    "data",
    "onSuccess",
    "maintancegp",
    "itemClassesWithItemTypes",
    "isItemClassesLoading",
    "isLoading",
    "id",
    "enabled",
    "cacheTime",
    "maintenances",
    "isMaintenancesLoading",
    "fetchMaintenance",
    "refetch",
    "useEffect",
    "onAcceptHandler",
    "console",
    "log",
    "className",
    "onChange",
    "e",
    "value",
    "target",
    "item",
    "find",
    "as",
    "map",
    "itemClass",
    "title",
    "disabled",
    "itemType",
    "enable",
    "name",
    "style",
    "display",
    "justifyContent",
    "length",
    "onClick",
    "field",
    "maintance",
    "class",
    "type",
    "defaultChecked",
    "assigned",
    "checked",
    "_fieldsClone",
    "index",
    "findIndex",
    "f",
    "push",
    "children"
  ],
  "sourceRoot": ""
}
