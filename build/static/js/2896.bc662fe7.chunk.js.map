{
  "version": 3,
  "file": "static/js/2896.bc662fe7.chunk.js",
  "mappings": "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",
  "sources": [
    "webpack://inventory/./src/app/dashboard/chart-card/chart/ChartDropDown.module.css?dc49",
    "app/dashboard/chart-card/chart/ChartDropDown.js",
    "webpack://inventory/./src/app/dashboard/chart-card/Facilities.module.css?220d",
    "webpack://inventory/./src/app/shared/UI/Card.module.css?f4b8",
    "app/shared/UI/Card.js",
    "app/dashboard/chart-card/Facilities.js",
    "app/dashboard/dashboard-api.js",
    "app/shared/custom-hooks/use-http.js",
    "webpack://inventory/./src/app/dashboard/chart-card/ItemCard.module.css?0e3d",
    "app/dashboard/chart-card/ItemsCard.js",
    "app/dashboard/warnings/WarningItem.js",
    "webpack://inventory/./src/app/dashboard/warnings/Warnings.module.css?e2cb",
    "app/dashboard/warnings/tables/logbook/LogBookItem.js",
    "app/dashboard/warnings/Warnings.js",
    "webpack://inventory/./src/app/dashboard/Dashbord.module.css?b05d",
    "webpack://inventory/./src/app/dashboard/tables/DashboardTables.module.css?e3d7",
    "app/dashboard/tables/sub-facilities/SubFacilitiesTableRow.js",
    "app/dashboard/tables/sub-facilities/SubFacilitiesTable.js",
    "app/dashboard/tables/level/LevelsTableRow.js",
    "app/dashboard/tables/level/LevelsTable.js",
    "app/dashboard/tables/DashboardTables.js",
    "app/dashboard/Dashboard.js",
    "app/services/dashboard.service.js"
  ],
  "sourcesContent": [
    "// extracted by mini-css-extract-plugin\nexport default {\"drop\":\"ChartDropDown_drop__3zt0I\"};",
    "import classes from \"./ChartDropDown.module.css\";\nimport { Translation, Trans } from \"react-i18next\";\n\nconst ChartDropDown = (props) => {\n  console.log(props)\n  return (\n    <div className={classes.drop}>\n      <select onChange={props.onChange}>\n        <option value=\"\">{props.text}</option>\n        <Translation>\n          {(t, { i18n }) => (\n            <option i18n value=\"\" selected>\n              {t(`${props.text}`)}\n            </option>\n          )}\n        </Translation>\n        {props.options.map((el, i) => (\n          <option key={i} value={el.id}>\n            {el.op}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default ChartDropDown;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"facilities\":\"Facilities_facilities__joa8-\"};",
    "// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__Bhi4l\"};",
    "import React from 'react';\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n    return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n",
    "import React, { useEffect, useState } from \"react\";\n\nimport ChartDropDown from \"./chart/ChartDropDown\";\nimport classes from \"./Facilities.module.css\";\nimport Card from \"../../shared/UI/Card\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../../shared/Spinner\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { Trans } from \"react-i18next\";\nimport DashboardService from \"../../services/dashboard.service\";\nimport { useQuery } from \"react-query\";\nconst Facilities = () => {\n  const [facilities, setFacilities] = useState([]);\n  const [chartData, setChartData] = useState();\n\n  const { data, isLoading, isFetched } = useQuery(\n    [\"charts-facilities\"],\n    async () => {\n      const res = await DashboardService.getAllFacilities();\n      \n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (!isFetched) {\n    return (\n      <div className={\"spinner-wrapper\"} style={{ position: \"relative\" }}>\n        <div className={\"donut\"} />\n      </div>\n    );\n  }\n\n  if (!isLoading && facilities.length === 0) {\n    let tmp = [];\n    data.map((el, i) => {\n      tmp.push({ op: el.name, id: i, facility: el });\n    });\n    setFacilities(tmp);\n    console.log(facilities);\n  }\n\n  const ddChangeHandler = (e) => {\n    e.preventDefault();\n    facilities.map((el) => {\n      if (el.id === +e.target.value) {\n        const definedNum = +el.facility.defined;\n        setChartData({\n          defined: definedNum.toFixed(2),\n          subFacilities: el.facility.sub_fac,\n          lower: el.facility.lower,\n        });\n      }\n    });\n  };\n\n  return (\n    <div className={classes.facilities}>\n      <Card className=\"w-50\">\n        <h3>\n          🏢 <Trans>Facilities</Trans>{\" \"}\n        </h3>\n        <ChartDropDown\n          onChange={ddChangeHandler}\n          options={facilities}\n          text=\"Select facility\"\n        />\n        <GaugeChart\n          id=\"gauge-chart6\"\n          animate={true}\n          nrOfLevels={15}\n          percent={chartData ? chartData.defined : 0}\n          needleColor=\"#345243\"\n          colors={[\"#EA4228\", \"#F5CD19\", \"#5BE12C\"]}\n          textColor={\"#000000\"}\n          animDelay={100}\n        />\n        {chartData && (\n          <>\n            <div>\n              <span>{chartData.subFacilities}</span>\n              <p>\n                {\" \"}\n                <Trans>Subset Facilities defined</Trans>{\" \"}\n              </p>\n            </div>\n            <div>\n              <span>{chartData.lower}</span>\n              <p>\n                {\" \"}\n                <Trans>Can be defined</Trans>{\" \"}\n              </p>\n              <br></br>\n            </div>\n          </>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Facilities;\n",
    "import DashboardService from \"../services/dashboard.service\";\n\nexport async function getItemsAndTypes() {\n  try {\n    const res = await DashboardService.getAllDashboardItems();\n    return res?.data;\n  } catch (error) {\n    throw new Error(\"Error fetching data from back-end \" + error.message);\n  }\n}\n\nexport async function getFacilities() {\n  try {\n    const res = await DashboardService.getAllFacilities();\n    return res?.data;\n  } catch (error) {\n    const { response } = error;\n    if (response?.status === 403) {\n      window.location.href = `/error-pages/error-403`;\n    }\n    if (response?.status === 401) {\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"country\");\n      window.location.href = `/login`;\n    }\n  }\n}\n\nexport async function getTablesData() {\n  try {\n    const res = await DashboardService.getAllTablesData();\n\n    return res.data;\n  } catch (error) {\n    const { response } = error;\n    if (response?.status === 403) {\n      window.location.href = `/error-pages/error-403`;\n    }\n    if (response?.status === 401) {\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"country\");\n      window.location.href = `/login`;\n    }\n  }\n}\n",
    "import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ItemCard_item__XSGC1\"};",
    "import Card from \"../../shared/UI/Card\";\nimport ChartDropDown from \"./chart/ChartDropDown\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { getItemsAndTypes } from \"../dashboard-api\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\n\nimport classes from \"./ItemCard.module.css\";\nimport toast from \"react-hot-toast\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { Trans } from \"react-i18next\";\n\nconst ItemsCard = () => {\n  const [itemClasses, setItemClasses] = useState([]);\n  const [items, setItems] = useState([]);\n  const [chartData, setChartData] = useState();\n\n  // api call to get items and types\n  const { sendRequest, status, data, error: err } = useHttp(getItemsAndTypes);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n\n  // Handling api response\n\n  if (status === \"pending\") {\n    return (\n      <div className={\"spinner-wrapper\"} style={{ position: \"relative\" }}>\n        <div className={\"donut\"} />\n      </div>\n    );\n  }\n  // TODO: Remove error message at production\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  // ----------- Feeding to app\n  // creating first dropdown available options\n  if (status === \"completed\" && itemClasses.length === 0) {\n    // Setting item classes\n    let tmp = [];\n    data?.map((el, i) => {\n      tmp.push({ op: el.item_class, id: i });\n    });\n    setItemClasses(tmp);\n\n    tmp = [];\n  }\n  // after selecting first dropdown option, create second dropdown options based in first ID.\n  const itemClassChangeHandler = (e) => {\n    e.preventDefault();\n    let tmp = [];\n    const classId = e.target.value;\n\n    data?.map((el, i) => {\n      if (i === +classId) {\n        el.items.map((el, j) => {\n          tmp.push({\n            id: j,\n            classId: i,\n            op: el.item_type,\n            working: el.working,\n            notWorking: el.not_working,\n            totalItems: el.total_items,\n          });\n        });\n      }\n    });\n\n    setItems(tmp);\n  };\n  // like before, find desired result based on ID found in onChange event.\n  const itemChangeHandler = (e) => {\n    const itemId = e.target.value;\n    items?.map((el) => {\n      if (el.id === +itemId) {\n        setChartData({\n          notWorking: el.notWorking,\n          working: el.working.toFixed(2),\n          totalItems: el.totalItems,\n        });\n      }\n    });\n  };\n\n  return (\n    <div className={classes?.item}>\n      <Card>\n        <h3>\n          🏢 <Trans>Items</Trans>{\" \"}\n        </h3>\n        <ChartDropDown\n          onChange={itemClassChangeHandler}\n          options={itemClasses}\n          text=\"Select item Class\"\n        />\n        <ChartDropDown\n          onChange={itemChangeHandler}\n          options={items}\n          text=\"Select item Category\"\n        />\n        <GaugeChart\n          className=\"pt-3\"\n          id=\"gauge-chart6\"\n          animate={true}\n          nrOfLevels={15}\n          percent={chartData ? chartData.working : 0}\n          needleColor=\"#345243\"\n          colors={[\"#EA4228\", \"#F5CD19\", \"#5BE12C\"]}\n          textColor={\"#000000\"}\n          animDelay={100}\n        />\n        {chartData && (\n          <div>\n            <span>{chartData?.totalItems}</span>\n            <p>\n              <Trans>Items</Trans>\n            </p>\n            <p >\n              <Trans>Working</Trans>: {chartData?.working * 100}%\n            </p>\n            <p  >\n              <Trans>Not working</Trans>: {chartData?.notWorking}\n            </p>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n};\nexport default ItemsCard;\n",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\n\nconst WarningItem = (props) => {\n  return (\n    <div className=\"d-flex mb-3\">\n      <div>\n        <p className=\"activity-info bg-warning\" style={{ color: \"#000000\" }}>\n          {\" \"}\n          ⚠{\" \"}\n        </p>\n      </div>\n      <div className=\"activity-details\">\n        <Link\n          className={`p-0 btn btn-link btn-fw text-muted ${\n            props.count === 0 ? \"pe-none\" : \"\"\n          } `}\n          style={{ fontSize: \"16px\", textDecorationColor: \"#777\" }}\n          to={\"dashboard/warnings-info/\" + props.param}\n        >\n          <Trans>\n            {`(${props.count})  `}\n            {props.title}\n          </Trans>\n          <label\n            className={`badge badge-danger opacity-${props.badgeOp} `}\n            style={{ fontSize: \"12px\" }}\n          >\n            <Trans>{props.badge}</Trans>\n          </label>\n          {props.maxExtended && (\n            <label\n              className={`badge badge-warning  `}\n              style={{ fontSize: \"12px\" }}\n            >\n              <Trans>{props.maxExtended} days extended</Trans>\n            </label>\n          )}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default WarningItem;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"warnings\":\"Warnings_warnings__73LHj\"};",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\n\nconst LogBookItem = () => {\n  return (\n    <div className=\"d-flex mb-3\">\n      <div>\n        <p className=\"activity-info bg-info\" style={{ color: \"#000000\" }}>\n          i\n        </p>\n      </div>\n      <div className=\"activity-details\">\n        <Link\n          className={`p-0 btn btn-link btn-fw text-muted `}\n          style={{ fontSize: \"16px\", textDecorationColor: \"#777\" }}\n          to={\"dashboard/maintenanceLog\"}\n        >\n          <Trans>Item Maintenance Logbook</Trans>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LogBookItem;\n",
    "import WarningItem from \"./WarningItem\";\nimport React from \"react\";\n\nimport classes from \"./Warnings.module.css\";\nimport { useQuery } from \"react-query\";\n\nimport dashboardService from \"../../services/dashboard.service\";\nimport LogBookItem from \"./tables/logbook/LogBookItem\";\nimport { Trans } from \"react-i18next\";\n\nconst warningsData = [\n  {\n    title: \"Maintenance services must be done in   \",\n\n    badge: \"7 Days\",\n  },\n  {\n    title: \"Maintenance services must be done in   \",\n\n    badge: \"3 Days\",\n  },\n  {\n    title: \"Maintenance  services were \",\n    badge: \"not performed on time\",\n  },\n  {\n    title: \"Maintenance  services were \",\n    badge: \"not performed on time\",\n  },\n];\n\nconst Warnings = () => {\n  const { data, isLoading } = useQuery(\n    [\"warnings\"],\n    async () => {\n      const res = await dashboardService.getAllWarningsData();\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (isLoading || data.length === 0) {\n    return (\n      <div className={\"spinner-wrapper\"} style={{ position: \"relative\" }}>\n        <div className={\"donut\"} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`card-body recent-activity ${classes.warnings}`}>\n      <h4 className=\"card-title\">\n        <Trans>Warnings</Trans>\n      </h4>\n\n      <p className=\"card-description\">\n        <Trans>Warnings that need to be taken cared of</Trans>\n      </p>\n\n      {data && (\n        <div className=\"activities\">\n          <WarningItem\n            title={warningsData[0].title}\n            text={warningsData[0].text}\n            badge={warningsData[0].badge}\n            count={data.seven_days}\n            badgeOp={50}\n            param={\"day=7\"}\n          />\n          <WarningItem\n            title={warningsData[1].title}\n            text={warningsData[1].text}\n            badge={warningsData[1].badge}\n            count={data.three_days}\n            badgeOp={75}\n            param={\"day=3\"}\n          />\n          <WarningItem\n            title={warningsData[2].title}\n            text={warningsData[2].text}\n            badge={warningsData[2].badge}\n            count={data.extended.count}\n            maxExtended={data.extended.maxExtended}\n            badgeOp={100}\n            param={\"day=extended\"}\n          />\n          <LogBookItem />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Warnings;\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"charts\":\"Dashbord_charts__aHm0k\",\"warning\":\"Dashbord_warning__DSWyr\",\"tables\":\"Dashbord_tables__B47JG\"};",
    "// extracted by mini-css-extract-plugin\nexport default {\"levels\":\"DashboardTables_levels__KWMUa\",\"sub-facilities\":\"DashboardTables_sub-facilities__YkEFi\"};",
    "import React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nconst SubFacilitiesTableRow = (props) => {\n  const updatedOn = props.updatedOn.split(\"T\")[0].replace(/-/g, \" / \");\n\n  return (\n    <tr>\n      <td key={\"E\"}> {props.num} </td>\n\n      <td key={\"F\"} className=\"py-1\">\n        {props.name}\n      </td>\n\n      <td key={\"G\"}>\n        <label className=\"badge badge-info\"> {props.level} </label>\n      </td>\n      <td key={\"Z\"} className=\"py-1\">\n        {` ${props.levelName}`}\n      </td>\n\n      <td key={\"H\"}>\n        <ProgressBar variant={props.variant} now={props.registered} />\n      </td>\n      <td key={\"J\"}> {updatedOn} </td>\n    </tr>\n  );\n};\nexport default SubFacilitiesTableRow;\n",
    "import React from \"react\";\nimport SubFacilitiesTableRow from \"./SubFacilitiesTableRow\";\nimport { Trans } from \"react-i18next\";\n\nconst SubFacilitiesTable = (props) => {\n  const generateRows = () => {\n    let rows = [];\n    for (let i = 0; i < props.data.length; i++) {\n      const variant = i % 2 === 0 ? \"success\" : \"warning\";\n\n      rows.push(\n        <SubFacilitiesTableRow\n          key={i + 1}\n          num={props.data[i].id}\n          name={props.data[i].name}\n          level={props.data[i].level_id}\n          levelName={props.data[i].level_name}\n          registered={+props.data[i].defined * 100}\n          updatedOn={props.data[i].update}\n          variant={variant}\n        />\n      );\n    }\n    return rows;\n  };\n  return (\n    <div className={\"py-2 px-2\"}>\n      <h4 className=\"card-title\">\n        {\" \"}\n        <Trans>Sub Facilities</Trans>\n      </h4>\n      <p className=\"card-description\">\n        <Trans>list of all sub facilities </Trans>\n      </p>\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>\n                <Trans>#</Trans>\n              </th>\n              <th>\n                <Trans>Facility Name</Trans>\n              </th>\n              <th>\n                <Trans>Levels</Trans>\n              </th>\n              <th>\n                <Trans>Level Name</Trans>\n              </th>\n              <th>\n                <Trans>Registered</Trans>\n              </th>\n              <th>\n                <Trans>Last Update</Trans>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>{generateRows()}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SubFacilitiesTable;\n",
    "import React from \"react\";\n\nconst LevelsTableRow = (props) => {\n  return (\n    <tr>\n      <td key={\"A\"}>\n        <label className=\"badge badge-info\"> {props.level} </label>{\" \"}\n      </td>\n      <td key={\"B\"}>{props.levelName}</td>\n      <td key={\"C\"}>{props.facilitiesNum}</td>\n      <td key={\"D\"}>{props.subFacilitiesNum}</td>\n      <td key={\"E\"}>{props.defSubFacilitiesNum}</td>\n    </tr>\n  );\n};\n\nexport default LevelsTableRow;\n",
    "import LevelsTableRow from \"./LevelsTableRow\";\nimport React from \"react\";\nimport { Trans } from \"react-i18next\";\n\nconst LevelsTable = (props) => {\n  return (\n    <div className={\"px-2 py-5\"}>\n      <h4 className=\"card-title\"> 🏢 <Trans>Facilities</Trans></h4>\n      <p className=\"card-description\"> <Trans>Facilities owned separated by levels</Trans></p>\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>\n                <Trans>Levels</Trans>\n              </th>\n              <th>\n                <Trans>Level Name</Trans>\n              </th>\n              <th>\n                <Trans>Total number of facilities</Trans>\n              </th>\n              <th>\n                <Trans>Total number of sub-facilities</Trans>\n              </th>\n              <th>\n                <Trans>Number of Defined sub-level facilities</Trans>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.data.map((item, i) => {\n              return (\n                <LevelsTableRow\n                  key={i}\n                  level={item.level_id}\n                  levelName={item.level_name}\n                  facilitiesNum={item.total}\n                  subFacilitiesNum={item.sub}\n                  defSubFacilitiesNum={item.def}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\nexport default LevelsTable;\n",
    "import React, { Fragment, useEffect, useState } from \"react\";\nimport classes from \"./DashboardTables.module.css\";\nimport SubFacilitiesTable from \"./sub-facilities/SubFacilitiesTable\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\nimport { getTablesData } from \"../dashboard-api\";\nimport LevelsTable from \"./level/LevelsTable\";\nimport toast from \"react-hot-toast\";\n\nconst DashboardTables = () => {\n  const { sendRequest, status, data, error: err } = useHttp(getTablesData);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n  if (status === \"pending\") {\n    return (\n      <div className={\"spinner-wrapper\"} style={{ position: \"relative\" }}>\n        <div className={\"donut\"} />\n      </div>\n    );\n  }\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  if (status === \"completed\" && !dataLoaded) {\n    setDataLoaded(true);\n  }\n\n  return (\n    <Fragment>\n      <section className={classes.levels}>\n        {dataLoaded && <LevelsTable data={data.level_table} />}\n      </section>\n      <section className={classes[\"sub-facilities\"]}>\n        {dataLoaded && <SubFacilitiesTable data={data.facility_table} />}\n      </section>\n    </Fragment>\n  );\n};\n\nexport default DashboardTables;\n",
    "import React from \"react\";\n\nimport Facilities from \"./chart-card/Facilities\";\nimport ItemsCard from \"./chart-card/ItemsCard\";\nimport Warnings from \"./warnings/Warnings\";\n\nimport classes from \"./Dashbord.module.css\";\n\nimport DashboardTables from \"./tables/DashboardTables\";\n\nconst Dashboard = () => {\n  return (\n    <main>\n      <section className={classes.charts}>\n        <ItemsCard />\n        <Facilities />\n      </section>\n\n      <section className={classes.warning}>\n        <Warnings />\n      </section>\n\n      <DashboardTables />\n    </main>\n  );\n};\n\nexport default Dashboard;\n",
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://127.0.0.1:8000/dashboard\";\n\nclass DashboardService {\n  getAllDashboardItems() {\n    return ApiManager.get(API_URL + \"/item\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllFacilities() {\n    return ApiManager.get(API_URL + \"/facility\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllTablesData() {\n    return ApiManager.get(API_URL + \"/table\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getAllWarningsData() {\n    return ApiManager.get(API_URL + \"/maintenance\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getWarningsInfo(payload) {\n    return ApiManager.get(API_URL + \"/todo\" + payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenanceLog() {\n    return ApiManager.get(API_URL + \"/maintenancelog\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  postWarningsAsDone(payload) {\n    return ApiManager.post(API_URL + \"/todo\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getLogDetails(payload) {\n    return ApiManager.get(API_URL + \"/maintenancelog\" + payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\nexport default new DashboardService();\n"
  ],
  "names": [
    "props",
    "console",
    "log",
    "className",
    "classes",
    "onChange",
    "value",
    "text",
    "Translation",
    "t",
    "i18n",
    "selected",
    "options",
    "map",
    "el",
    "i",
    "id",
    "op",
    "children",
    "useState",
    "facilities",
    "setFacilities",
    "chartData",
    "setChartData",
    "useQuery",
    "DashboardService",
    "res",
    "data",
    "refetchOnMount",
    "isLoading",
    "isFetched",
    "style",
    "position",
    "length",
    "tmp",
    "push",
    "name",
    "facility",
    "Trans",
    "e",
    "preventDefault",
    "target",
    "definedNum",
    "defined",
    "toFixed",
    "subFacilities",
    "sub_fac",
    "lower",
    "animate",
    "nrOfLevels",
    "percent",
    "needleColor",
    "colors",
    "textColor",
    "animDelay",
    "getItemsAndTypes",
    "Error",
    "message",
    "getTablesData",
    "response",
    "status",
    "window",
    "location",
    "href",
    "localStorage",
    "removeItem",
    "httpReducer",
    "state",
    "action",
    "type",
    "error",
    "responseData",
    "errorMessage",
    "requestFunction",
    "startWithPending",
    "useReducer",
    "httpState",
    "dispatch",
    "sendRequest",
    "useCallback",
    "requestData",
    "itemClasses",
    "setItemClasses",
    "items",
    "setItems",
    "useHttp",
    "err",
    "useEffect",
    "toast",
    "item_class",
    "classId",
    "j",
    "item_type",
    "working",
    "notWorking",
    "not_working",
    "totalItems",
    "total_items",
    "itemId",
    "color",
    "count",
    "fontSize",
    "textDecorationColor",
    "to",
    "param",
    "title",
    "badgeOp",
    "badge",
    "maxExtended",
    "warningsData",
    "dashboardService",
    "seven_days",
    "three_days",
    "extended",
    "updatedOn",
    "split",
    "replace",
    "num",
    "level",
    "levelName",
    "ProgressBar",
    "variant",
    "now",
    "registered",
    "rows",
    "level_id",
    "level_name",
    "update",
    "generateRows",
    "facilitiesNum",
    "subFacilitiesNum",
    "defSubFacilitiesNum",
    "item",
    "total",
    "sub",
    "def",
    "dataLoaded",
    "setDataLoaded",
    "Fragment",
    "level_table",
    "facility_table",
    "API_URL",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "payload"
  ],
  "sourceRoot": ""
}
