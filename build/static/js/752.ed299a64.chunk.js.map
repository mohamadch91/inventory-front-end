{
  "version": 3,
  "file": "static/js/752.ed299a64.chunk.js",
  "mappings": "qKAGMA,EAAU,iCAEVC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA8EH,OA9EGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MACJ,WACE,OAAOC,IAAAA,IAAUF,EAAU,YAAa,CACtCG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,qCACD,WACE,OAAOH,IAAAA,IAAUF,EAAU,eAAgB,CACzCG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,6BACD,SAAaC,GAEX,OAAOJ,IAAAA,IAAUF,EAAU,YAAaM,EAAM,CAC5CH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,6BACD,WACE,OAAOH,IAAAA,IAAUF,EAAU,WAAY,CACrCG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,6BACD,SAAaC,GAEX,OAAOJ,IAAAA,KAAWF,EAAU,WAAYM,EAAM,CAC5CH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,6BACD,SAAaC,GAEX,OAAOJ,IAAAA,IAAUF,EAAU,WAAYM,EAAM,CAC3CH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,2CACD,SAA2BE,GACzB,OAAOL,IAAAA,IAAUF,EAAU,kBAAoBO,EAAY,CACzDJ,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,+CACD,SAA+BG,GAC7B,IAAMC,EAAS,CAAC,EAIhB,OAHID,IACFC,EAAM,GAASD,GAEVN,IAAAA,IAAUF,EAAU,cAAe,CACxCG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,MAC1BI,OAAAA,GAEH,iCACD,SAAiBC,GACf,IAAMD,EAAS,CAAC,EAIhB,OAHIC,IACFD,EAAM,MAAYC,GAEbR,IAAAA,IAAUF,EAAU,gBAAiB,CAC1CG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,MAC1BI,OAAAA,GAEH,mCACD,SAAmBE,GACjB,OAAOT,IAAAA,IAAUF,EAAU,gBAAiBW,EAAS,CACnDR,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,iCACD,SAAiBO,GACf,OAAOV,IAAAA,IAAUF,EAAU,mBAAqBY,EAAI,CAClDT,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,iCACD,SAAiBC,GACf,OAAOJ,IAAAA,KAAWF,EAAU,eAAgBM,EAAM,CAChDH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,gCACD,SAAgBC,GACd,OAAOJ,IAAAA,IAAUF,EAAU,eAAgBM,EAAM,CAC/CH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,OA9EGJ,GAiFN,QAAmBA,C,mPC4QnB,UAnVA,WACE,OAA0CY,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA4CJ,EAAAA,EAAAA,UAAS,CACnDK,SAAU,GACVC,MAAO,KACPC,QAAQ,IAHV,eAAOC,EAAP,KAAuBC,EAAvB,KAKA,GAA0CT,EAAAA,EAAAA,UAAS,MAAnD,eAAOU,EAAP,KAAsBC,EAAtB,KACA,GAAkCX,EAAAA,EAAAA,WAAS,GAA3C,eAAOY,EAAP,KAAkBC,EAAlB,KACA,GAAsCb,EAAAA,EAAAA,UAAS,IAA/C,eAAOc,EAAP,KAAoBC,EAApB,KACA,GAAkDf,EAAAA,EAAAA,UAAS,MAA3D,eAAOgB,EAAP,KAA0BC,EAA1B,KAiBA,SAASC,EAAiBnB,GACxBoB,EAAAA,EAAAA,iBAA8BpB,GAC3BqB,MAAK,SAACC,GACLnB,EAAiBmB,EAAI5B,KAAK,GAAG6B,cAC7BT,GAAa,EACd,IACAU,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAY,mCACZZ,GAAa,EACd,GACJ,CAqBD,SAASa,EAAiBC,GACxB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd1B,GAAgB,kBAAKD,GAAN,cAAqB0B,EAAOC,IAC5C,CAED,SAASC,EAAgBJ,GACvB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdrB,GAAkB,kBAAKD,GAAN,cAAuBqB,EAAOC,IAChD,CAED,SAASE,EAAiBL,GAKxB,GAJAA,EAAEM,iBACcC,OAAOC,KAAKhC,GAAciC,OAAM,SAACC,GAC/C,MAA6B,KAAtBlC,EAAakC,IAAqC,OAAtBlC,EAAakC,EACjD,IAGM,CACLxB,GAAa,GACb,IAAIyB,EAAYnC,EAChBgB,EAAAA,EAAAA,gBAA6BmB,GAC1BlB,MAAK,SAACC,GACLH,EAAiBF,EAClB,IACAO,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAY,mCACZZ,GAAa,EACd,IACHF,EAAiB,MACjBP,EAAgB,CAAC,EAClB,MAdCqB,EAAAA,GAAAA,MAAY,6BAef,CAsCD,OA1FAc,EAAAA,EAAAA,YAAU,WA1BRpB,EAAAA,EAAAA,uBACGC,MAAK,SAACC,GACL,IAAM5B,EAAO4B,EAAI5B,KACjBsB,EAAetB,GACfwB,EAAqBxB,EAAK,GAAGM,IAC7Bc,GAAa,GACbK,EAAiBzB,EAAK,GAAGM,GAC1B,IACAwB,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAY,mCACZZ,GAAa,EACd,GAiBJ,GAAE,KAEH0B,EAAAA,EAAAA,YAAU,WACU,IAAD,EAAbzB,GACFL,GAAkB,kBACbD,GADY,IAEfgC,UAAS,UAAE1B,EAAY,UAAd,aAAE,EAAgBf,KAGhC,GAAE,CAACe,KAgFF,iBAAK2B,UAAU,kBAAf,WACE,eAAIA,UAAU,kBAAd,yCACC7B,GACC,SAAC,IAAD,KAEA,iCACE,iBAAK6B,UAAU,gBAAf,WACE,gBAAKA,UAAU,qCAAf,UACE,0CAEF,gBAAKA,UAAU,mBAAf,UACE,mBACEZ,KAAK,YACLa,SAAU,SAACf,GACTV,EAAqBU,EAAEC,OAAOE,OAC9BZ,EAAiBS,EAAEC,OAAOE,MAC3B,EACDA,MAAOd,EANT,SAQGF,EAAY6B,KAAI,SAACC,EAAWC,GAAZ,OACf,mBAEEf,MAAOc,EAAU7C,GAFnB,SAKG6C,EAAUE,OAJNF,EAAU7C,GAFF,YAYvB,0BACE,UAAC,IAAD,YACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,2BACA,SAAC,IAAD,0BACA,SAAC,IAAD,0BACA,SAAC,IAAD,sBACA,SAAC,IAAD,yBAGJ,SAAC,IAAD,UACGE,GACCA,EAAc0C,KAAI,SAACI,EAAMF,GAAP,MAjDP9C,EAiDO,OAChB,8BACGW,IAAkBqC,EAAKhD,IACtB,UAAC,IAAD,YACE,SAAC,IAAD,UAAYgD,EAAK1C,YACjB,SAAC,IAAD,kBAtDGN,EAuDkBgD,EAAKP,UAD1B,EArDf1B,EAAYkC,MAAK,SAACD,GAAD,OAAUA,EAAKhD,KAAOA,CAAtB,WAqDF,aACG,EAAmC+C,SAEtC,SAAC,IAAD,UAAYC,EAAKzC,SACjB,SAAC,IAAD,WACE,kBACE2C,KAAK,WACLC,QAASH,EAAKxC,OACd4C,UAAQ,OAGZ,SAAC,IAAD,WACE,mBACEV,UAAU,WACVW,QAAS,SAACC,GAAD,OA7IrC,SAAoBC,GAClB,IAAMC,EAAWtD,EAAc+C,MAAK,SAACD,GAAD,OAAUA,EAAKhD,KAAOuD,EAAEvD,EAAxB,IACpCK,EAAgBmD,GAChB5C,EAAiB2C,EAAEvD,GACpB,CAyI+CyD,CAAWT,EAAtB,EAFX,UAIE,SAAC,IAAD,YAKN,UAAC,IAAD,YACE,SAAC,IAAD,WACE,kBACElB,KAAK,WACLoB,KAAK,OACLP,SAAUhB,EACVI,MAAK,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAcE,cAGzB,SAAC,IAAD,WACE,mBACEwB,KAAK,YACLa,SAAUhB,EACVI,MAAK,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAcqC,UAHvB,SAKG1B,EAAY6B,KAAI,SAACC,EAAWC,GAAZ,OACf,mBAEEf,MAAOc,EAAU7C,GACjB0D,SAAUV,EAAKP,YAAcI,EAAU7C,GAHzC,SAKG6C,EAAUE,OAJNF,EAAU7C,GAFF,SAWrB,SAAC,IAAD,WACE,kBACE8B,KAAK,QACLoB,KAAK,SACLP,SAAUhB,EACVI,MAAK,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAcG,MACrBoD,UAAQ,OAGZ,SAAC,IAAD,WACE,kBACE7B,KAAK,SACLoB,KAAK,WACLP,SAAU,kBACRtC,GAAgB,kBACXD,GADU,IAEbI,QAASJ,EAAaI,SAHhB,EAMV2C,QAAO,OAAE/C,QAAF,IAAEA,OAAF,EAAEA,EAAcI,YAG3B,UAAC,IAAD,YACE,mBACEkC,UAAU,WACVW,QAASpB,EAFX,mBAMA,mBACES,UAAU,YACVW,QAAS,kBAAMzC,EAAiB,KAAvB,EAFX,UAIE,SAAC,IAAD,aArFM,YA+F1B,gBAAK8B,UAAU,oBAAf,UACE,kBAAMkB,SAjLhB,SAAyBhC,GAEvB,IAOoB,EAJpB,GAJAA,EAAEM,iBACcC,OAAOC,KAAK3B,GAAgB4B,OAAM,SAACC,GACjD,MAA+B,KAAxB7B,EAAe6B,IAAuC,OAAxB7B,EAAe6B,EACrD,IAGM,CACLxB,GAAa,GACb,IAAI+C,EAA2D,CAC7DvD,UADgB,EAKdG,GALiBH,SAEnBE,OAFgB,EAAaA,OAG7BD,MAHgB,EAAqBA,MAIrCkC,UAJgB,EAA4BA,WAM9CrB,EAAAA,EAAAA,iBAA8ByC,GAC3BxC,MAAK,SAACC,GACLH,EAAiBF,EAClB,IACAO,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAY,mCACZZ,GAAa,EACd,IACHJ,GAAkB,kBACbD,GADY,IAEfH,SAAU,GACVC,MAAO,KACPC,QAAQ,IAEX,MAvBCkB,EAAAA,GAAAA,MAAY,6BAwBf,EAmJS,WACE,eAAIgB,UAAU,YAAd,kCACA,iBAAKA,UAAU,MAAf,WACE,iBAAKA,UAAU,8BAAf,WACE,sDACA,kBACEZ,KAAK,WACLoB,KAAK,OACLP,SAAUX,EACVD,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAgBH,SACvBqD,UAAQ,QAGZ,iBAAKjB,UAAU,8BAAf,WACE,2CACA,mBACEZ,KAAK,YACLa,SAAUX,EACVD,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAgBgC,UAHzB,SAKG1B,EAAY6B,KAAI,SAACI,EAAMF,GAAP,OACf,mBAEEf,MAAOiB,EAAKhD,GACZ0D,SAAoB,IAAVZ,EAHZ,SAKGE,EAAKD,OAJDC,EAAKhD,GAFG,UAWrB,iBAAK0C,UAAU,8BAAf,WACE,2CACA,kBACEZ,KAAK,QACLoB,KAAK,SACLP,SAAUX,EACVD,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAgBF,MACvBoD,UAAQ,QAGZ,iBAAKjB,UAAU,4DAAf,WACE,uCACA,kBACEZ,KAAK,SACLY,UAAU,OACVQ,KAAK,WACLP,SAAU,kBACRjC,GAAkB,kBACbD,GADY,IAEfD,QAASC,EAAeD,SAHlB,EAMV2C,QAAO,OAAE1C,QAAF,IAAEA,OAAF,EAAEA,EAAgBD,UAE3B,mBAAQkC,UAAU,WAAWQ,KAAK,SAAlC,kCAWjB,C,uCCpUD,IA5BA,WACE,OACE,+BACE,gBACEY,QAAQ,MACR9D,GAAG,UACH+D,MAAM,6BACNC,WAAW,+BACXC,EAAE,MACFC,EAAE,MACFC,MAAM,WACNC,OAAO,YACPC,QAAQ,qBACRC,iBAAiB,yBACjBC,SAAS,WAXX,UAaE,wBACE,iBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,ucAMb,C,uCCND,IApBA,WACE,OACE,+BACE,gBACEZ,QAAQ,MACRC,MAAM,6BACNM,QAAQ,cACRL,WAAW,+BACX,oBAAkB,kBALpB,UAOE,wBACE,wBACE,iBAAMU,EAAE,oaAMnB,C,6DCND,IAVA,YAAoC,IAAbC,EAAY,EAAZA,SACrB,OACE,+BACE,SAAC,IAAD,WACE,SAAC,IAAD,UAAQA,OAIf,C",
  "sources": [
    "app/services/items.service.js",
    "app/settings/Manufacturer.js",
    "app/shared/CloseIcon.js",
    "app/shared/EditIcon.js",
    "app/shared/SharedTable.js"
  ],
  "sourcesContent": [
    "import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://127.0.0.1:8000/items/\";\n\nclass ItemService {\n  getItemClasses() {\n    return axios.get(API_URL + \"itemClass\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getActiveItemClasses() {\n    return axios.get(API_URL + \"class-helper\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemClass(data) {\n    // change item class\n    return axios.put(API_URL + \"itemClass\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemTypes() {\n    return axios.get(API_URL + \"itemType\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postItemType(data) {\n    // add item category\n    return axios.post(API_URL + \"itemType\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemTypes(data) {\n    // change item category\n    return axios.put(API_URL + \"itemType\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemClassesOfAnItemType(itemTypeId) {\n    return axios.get(API_URL + \"itembyclass?id=\" + itemTypeId, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getActiveItemClassesWithFields(itemClassId) {\n    const params = {};\n    if (itemClassId) {\n      params[\"id\"] = itemClassId;\n    }\n    return axios.get(API_URL + \"itembyclass\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemTinLevels(level) {\n    const params = {};\n    if (level) {\n      params[\"level\"] = level;\n    }\n    return axios.get(API_URL + \"itemTinLevels\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  putItemTypeInClass(payload) {\n    return axios.put(API_URL + \"itemTinLevels\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getManufacturers(id) {\n    return axios.get(API_URL + \"manufacturer?id=\" + id, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postManufacturer(data) {\n    return axios.post(API_URL + \"manufacturer\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putManufacturer(data) {\n    return axios.put(API_URL + \"manufacturer\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ItemService();\n",
    "import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport CloseIcon from \"../shared/CloseIcon\";\nimport EditIcon from \"../shared/EditIcon\";\nimport SharedTable from \"../shared/SharedTable\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../shared/Spinner\";\nimport \"../styles/table.scss\";\nimport \"../styles/inputs.scss\";\nimport \"../styles/hr.scss\";\nimport \"./itemClass.scss\";\nimport \"./itemType.scss\";\n\nimport ItemsService from \"../services/items.service\";\n\nfunction Manufacturer() {\n  const [manufacturers, setManufacturers] = useState([]);\n  const [editFormData, setEditFormData] = useState({});\n  const [addRowFormData, setAddRowFormData] = useState({\n    describe: \"\",\n    order: null,\n    active: false,\n  });\n  const [editableRowId, setEditableRowId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [itemClasses, setItemClasses] = useState([]);\n  const [selectedItemClass, setSelectedItemClass] = useState(null);\n\n  function getItemClasses() {\n    ItemsService.getActiveItemClasses()\n      .then((res) => {\n        const data = res.data;\n        setItemClasses(data);\n        setSelectedItemClass(data[0].id);\n        setIsLoading(false);\n        getManufacturers(data[0].id);\n      })\n      .catch((err) => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  function getManufacturers(id) {\n    ItemsService.getManufacturers(id)\n      .then((res) => {\n        setManufacturers(res.data[0].manufacturer);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getItemClasses();\n  }, []);\n\n  useEffect(() => {\n    if (itemClasses) {\n      setAddRowFormData({\n        ...addRowFormData,\n        itemclass: itemClasses[0]?.id,\n      });\n    }\n  }, [itemClasses]);\n\n  function handleEdit(i) {\n    const formData = manufacturers.find((item) => item.id === i.id);\n    setEditFormData(formData);\n    setEditableRowId(i.id);\n  }\n\n  function handleChangeEdit(e) {\n    const { name, value } = e.target;\n\n    setEditFormData({ ...editFormData, [name]: value });\n  }\n\n  function handleChangeAdd(e) {\n    const { name, value } = e.target;\n\n    setAddRowFormData({ ...addRowFormData, [name]: value });\n  }\n\n  function handleSubmitEdit(e) {\n    e.preventDefault();\n    const isValid = Object.keys(editFormData).every((key) => {\n      return editFormData[key] !== \"\" && editFormData[key] !== null;\n    });\n    if (!isValid) {\n      toast.error(\"Please fill all the fields\");\n    } else {\n      setIsLoading(true);\n      let formToPut = editFormData;\n      ItemsService.putManufacturer(formToPut)\n        .then((res) => {\n          getManufacturers(selectedItemClass);\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending data\");\n          setIsLoading(false);\n        });\n      setEditableRowId(null);\n      setEditFormData({});\n    }\n  }\n\n  function handleSubmitNew(e) {\n    e.preventDefault();\n    const isValid = Object.keys(addRowFormData).every((key) => {\n      return addRowFormData[key] !== \"\" && addRowFormData[key] !== null;\n    });\n    if (!isValid) {\n      toast.error(\"Please fill all the fields\");\n    } else {\n      setIsLoading(true);\n      let formToPost = (({ describe, active, order, itemclass }) => ({\n        describe,\n        active,\n        order,\n        itemclass,\n      }))(addRowFormData);\n      ItemsService.postManufacturer(formToPost)\n        .then((res) => {\n          getManufacturers(selectedItemClass);\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending data\");\n          setIsLoading(false);\n        });\n      setAddRowFormData({\n        ...addRowFormData,\n        describe: \"\",\n        order: null,\n        active: false,\n      });\n    }\n  }\n\n  function findItemClassById(id) {\n    return itemClasses.find((item) => item.id === id);\n  }\n\n  return (\n    <div className=\"item-class-page\">\n      <h3 className=\"page-title mb-3\">Manufacturers by Item class</h3>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <div className=\"row mb-4 mt-4\">\n            <div className=\"col-md-2 d-flex align-items-center\">\n              <h4>Item class</h4>\n            </div>\n            <div className=\"col-md-10 d-flex\">\n              <select\n                name=\"itemclass\"\n                onChange={(e) => {\n                  setSelectedItemClass(e.target.value);\n                  getManufacturers(e.target.value);\n                }}\n                value={selectedItemClass}\n              >\n                {itemClasses.map((itemClass, index) => (\n                  <option\n                    key={itemClass.id}\n                    value={itemClass.id}\n                    //   selected={}\n                  >\n                    {itemClass.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div>\n            <SharedTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Item class</TableCell>\n                  <TableCell>Show order</TableCell>\n                  <TableCell>Enable</TableCell>\n                  <TableCell>Edit</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {manufacturers &&\n                  manufacturers.map((item, index) => (\n                    <>\n                      {editableRowId !== item.id ? (\n                        <TableRow>\n                          <TableCell>{item.describe}</TableCell>\n                          <TableCell>\n                            {findItemClassById(item.itemclass)?.title}\n                          </TableCell>\n                          <TableCell>{item.order}</TableCell>\n                          <TableCell>\n                            <input\n                              type=\"checkbox\"\n                              checked={item.active}\n                              disabled\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <button\n                              className=\"edit-btn\"\n                              onClick={(event) => handleEdit(item)}\n                            >\n                              <EditIcon />\n                            </button>\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        <TableRow>\n                          <TableCell>\n                            <input\n                              name=\"describe\"\n                              type=\"text\"\n                              onChange={handleChangeEdit}\n                              value={editFormData?.describe}\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <select\n                              name=\"itemclass\"\n                              onChange={handleChangeEdit}\n                              value={editFormData?.itemclass}\n                            >\n                              {itemClasses.map((itemClass, index) => (\n                                <option\n                                  key={itemClass.id}\n                                  value={itemClass.id}\n                                  selected={item.itemclass === itemClass.id}\n                                >\n                                  {itemClass.title}\n                                </option>\n                              ))}\n                            </select>\n                          </TableCell>\n                          <TableCell>\n                            <input\n                              name=\"order\"\n                              type=\"number\"\n                              onChange={handleChangeEdit}\n                              value={editFormData?.order}\n                              required\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <input\n                              name=\"active\"\n                              type=\"checkbox\"\n                              onChange={() =>\n                                setEditFormData({\n                                  ...editFormData,\n                                  active: !editFormData.active,\n                                })\n                              }\n                              checked={editFormData?.active}\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <button\n                              className=\"save-btn\"\n                              onClick={handleSubmitEdit}\n                            >\n                              Save\n                            </button>\n                            <button\n                              className=\"close-btn\"\n                              onClick={() => setEditableRowId(null)}\n                            >\n                              <CloseIcon />\n                            </button>\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </>\n                  ))}\n              </TableBody>\n            </SharedTable>\n          </div>\n          <div className=\"add-row mt-4 mb-4\">\n            <form onSubmit={handleSubmitNew}>\n              <h3 className=\"mb-3 mt-3\">Insert Manufacturer</h3>\n              <div className=\"row\">\n                <div className=\"col-md-3 flex-column d-flex\">\n                  <label>Parameter description</label>\n                  <input\n                    name=\"describe\"\n                    type=\"text\"\n                    onChange={handleChangeAdd}\n                    value={addRowFormData?.describe}\n                    required\n                  ></input>\n                </div>\n                <div className=\"col-md-3 flex-column d-flex\">\n                  <label>Item class</label>\n                  <select\n                    name=\"itemclass\"\n                    onChange={handleChangeAdd}\n                    value={addRowFormData?.itemclass}\n                  >\n                    {itemClasses.map((item, index) => (\n                      <option\n                        key={item.id}\n                        value={item.id}\n                        selected={index === 0}\n                      >\n                        {item.title}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"col-md-3 flex-column d-flex\">\n                  <label>Show order</label>\n                  <input\n                    name=\"order\"\n                    type=\"number\"\n                    onChange={handleChangeAdd}\n                    value={addRowFormData?.order}\n                    required\n                  ></input>\n                </div>\n                <div className=\"col-md-3 d-flex justify-content-center align-items-center\">\n                  <label>Active</label>\n                  <input\n                    name=\"active\"\n                    className=\"mr-4\"\n                    type=\"checkbox\"\n                    onChange={() =>\n                      setAddRowFormData({\n                        ...addRowFormData,\n                        active: !addRowFormData.active,\n                      })\n                    }\n                    checked={addRowFormData?.active}\n                  ></input>\n                  <button className=\"save-btn\" type=\"submit\">\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Manufacturer;\n",
    "function CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n",
    "function EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <g>\n          <g>\n            <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n          </g>\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"
  ],
  "names": [
    "API_URL",
    "ItemService",
    "axios",
    "headers",
    "Authorization",
    "authHeader",
    "data",
    "itemTypeId",
    "itemClassId",
    "params",
    "level",
    "payload",
    "id",
    "useState",
    "manufacturers",
    "setManufacturers",
    "editFormData",
    "setEditFormData",
    "describe",
    "order",
    "active",
    "addRowFormData",
    "setAddRowFormData",
    "editableRowId",
    "setEditableRowId",
    "isLoading",
    "setIsLoading",
    "itemClasses",
    "setItemClasses",
    "selectedItemClass",
    "setSelectedItemClass",
    "getManufacturers",
    "ItemsService",
    "then",
    "res",
    "manufacturer",
    "catch",
    "err",
    "toast",
    "handleChangeEdit",
    "e",
    "target",
    "name",
    "value",
    "handleChangeAdd",
    "handleSubmitEdit",
    "preventDefault",
    "Object",
    "keys",
    "every",
    "key",
    "formToPut",
    "useEffect",
    "itemclass",
    "className",
    "onChange",
    "map",
    "itemClass",
    "index",
    "title",
    "item",
    "find",
    "type",
    "checked",
    "disabled",
    "onClick",
    "event",
    "i",
    "formData",
    "handleEdit",
    "selected",
    "required",
    "onSubmit",
    "formToPost",
    "version",
    "xmlns",
    "xmlnsXlink",
    "x",
    "y",
    "width",
    "height",
    "viewBox",
    "enableBackground",
    "xmlSpace",
    "fillRule",
    "clipRule",
    "d",
    "children"
  ],
  "sourceRoot": ""
}
