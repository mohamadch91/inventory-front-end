{"version":3,"file":"static/js/8654.5a00f021.chunk.js","mappings":"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","sources":["app/constants/help.js","app/settings/ManageHelp.js"],"sourcesContent":["export const languages = {\n  en: \"English\",\n  fr: \"Français\",\n  ar: \"العربية\",\n  fa: \"فارسی\",\n  es: \"Español\",\n  ru: \"Русский\",\n};\n\nexport const pages = {\n  dashboard: \"Dashboard\",\n  facilities: \"Facilities\",\n  hr: \"Human Resources\",\n  user: \"User\",\n  message: \"Message\",\n  reports: \"Reports\",\n  settings: \"Settings\",\n  \"about-iga\": \"About-IGA\",\n};\n","import { Form } from \"react-bootstrap\";\nimport HelpService from \"../services/help.service\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../shared/Spinner\";\nimport { useState } from \"react\";\nimport { languages, pages } from \"../constants/help\";\nimport API_URL from \"../services/APIURL\";\n\nfunction MangeHelp() {\n  const [selectedLang, setSelectedLang] = useState(\"en\");\n  const [selectedPage, setSelectedPage] = useState(\"dashboard\");\n  const [helpFile, setHelpFile] = useState(null);\n\n  const {\n    data: helpData,\n    isLoading: isLoading,\n    refetch: refetchHelp,\n  } = useQuery([\"help\", selectedLang, selectedPage], async () => {\n    const res = await HelpService.getHelpContent(selectedLang, selectedPage);\n    return res.data.length > 0 ? res.data[0] : {};\n  });\n\n  const onSaveHandler = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"lang\", selectedLang);\n    formData.append(\"page\", selectedPage);\n    formData.append(\"abr\", helpFile);\n    if (helpData.id) {\n      formData.append(\"id\", helpData.id);\n    }\n    const res = await (helpData.id\n      ? HelpService.putHelpContent(formData)\n      : HelpService.postHelpContent(formData));\n    refetchHelp();\n  };\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">Manage help</h3>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\"mt-3\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-lg-5\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-12\">Language</label>\n                    <div className=\"col-sm-12\">\n                      <Form.Control\n                        onChange={(e) => setSelectedLang(e.target.value)}\n                        className=\"form-select\"\n                        as=\"select\"\n                        value={selectedLang}\n                      >\n                        {Object.keys(languages).map((lang) => (\n                          <option value={lang} id={lang}>\n                            {languages[lang]}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </div>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-5\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-12\">Page</label>\n                    <div className=\"col-sm-12\">\n                      <Form.Control\n                        onChange={(e) => setSelectedPage(e.target.value)}\n                        className=\"form-select\"\n                        as=\"select\"\n                        value={selectedPage}\n                      >\n                        {Object.keys(pages).map((page) => (\n                          <option key={page} value={page}>\n                            {pages[page]}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </div>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-2\">\n                  <button\n                    className=\"btn btn-primary w-100 mt-4\"\n                    onClick={refetchHelp}\n                  >\n                    Filter\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card mt-3\">\n            <div className=\"card-body pb-3\">\n              <form onSubmit={onSaveHandler}>\n                <div className=\"row\">\n                  <input\n                    type=\"file\"\n                    onChange={(e) => {\n                      e.persist();\n                      const value = e.target.files[0];\n                      setHelpFile(value);\n                    }}\n                  />\n                </div>\n                <div className=\"row\">\n                  <button\n                    className=\"btn btn-primary mt-3\"\n                    style={{ marginLeft: \"auto\", width: \"72px\" }}\n                    type=\"submit\"\n                  >\n                    Save\n                  </button>\n                  {helpData?.abr && (\n                    <a\n                      href={API_URL + helpData.abr}\n                      download\n                      style={{ width: \"fit-content\" }}\n                    >\n                      <button\n                        className=\"btn btn-success mt-3 ml-2\"\n                        type=\"button\"\n                      >\n                        Download Help\n                      </button>\n                    </a>\n                  )}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MangeHelp;\n"],"names":["languages","en","fr","ar","fa","es","ru","pages","dashboard","facilities","hr","user","message","reports","settings","useState","selectedLang","setSelectedLang","selectedPage","setSelectedPage","helpFile","setHelpFile","useQuery","HelpService","res","data","length","helpData","isLoading","refetchHelp","refetch","onSaveHandler","e","preventDefault","formData","FormData","append","id","className","Spinner","Form","onChange","target","value","as","Object","keys","map","lang","page","onClick","onSubmit","type","persist","files","style","marginLeft","width","abr","href","API_URL","download"],"sourceRoot":""}