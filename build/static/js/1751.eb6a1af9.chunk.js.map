{
  "version": 3,
  "file": "static/js/1751.eb6a1af9.chunk.js",
  "mappings": "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",
  "sources": [
    "app/reports/FacilitySegmentationReport.js",
    "app/services/report.service.js",
    "app/shared/SharedTable.js",
    "../node_modules/react-i18next/dist/es/Translation.js"
  ],
  "sourcesContent": [
    "import React, { useState } from \"react\";\nimport { Translation, Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport { Form } from \"react-bootstrap\";\nimport ReportService from \"../services/report.service\";\nimport \"./form.scss\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\nimport { toast } from \"react-hot-toast\";\n\nconst defaultValues = {\n  name: \"\",\n  code: \"\",\n  level: \"-1\",\n  type: \"-1\",\n  power: \"-1\",\n  func: \"-1\",\n  gfrom: \"\",\n  gto: \"\",\n  underfrom: \"\",\n  underto: \"\",\n};\n\nfunction FacilitySegmentationReport() {\n  const [filterValues, setFilterValues] = useState(defaultValues);\n\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n\n  const { data: facSegHelper, isLoading: isFacSegHelperLoading } = useQuery(\n    [\"fac-seg-helper\"],\n    async () => {\n      const res = await ReportService.getFacSeg({ help: true });\n      return res.data;\n    }\n  );\n\n  const {\n    data: reports,\n    isLoading: isReportsLoading,\n    refetch: fetchReports,\n  } = useQuery(\n    [\"fac-seg-report\"],\n    async () => {\n      const params = {\n        help: false,\n      };\n      for (const key in filterValues) {\n        const filter = filterValues[key];\n        if (filter.length > 0) {\n          params[key] = filter;\n        }\n      }\n      const res = await ReportService.getFacSeg(params);\n        if (res.data.length === 0) {\n                   toast.error(<Trans>No data found</Trans>);\n\n        }\n      return res.data;\n    },\n    {\n      refetchOnMount: false,\n      enabled: false,\n    }\n  );\n    const printFilterValues = () => {\n    let filter = \"\";\n    for (const key in filterValues) {\n      const value = filterValues[key];\n      if (value.length > 0 && value !== \"-1\") {\n        if (key === \"power\") {\n          // find power whith value=id\n          const power = facSegHelper.power.find(\n            (p) => p.id === parseInt(value)\n          );\n          filter += `Power source: ${power.name}, `;\n        } else if (key === \"func\") {\n          // find func whith value=id\n          console.log(value);\n          if (value === \"true\") {\n            filter += `Function: Working, `;\n          } else {\n            filter += `Function: Not working, `;\n          }\n        } else if (key === \"type\") {\n          // find type whith value=id\n          const type = facSegHelper.type.find((t) => t.id === parseInt(value));\n          filter += `Type: ${type.name}, `;\n        } else if (key === \"level\") {\n          // find level whith value=id\n          const level = facSegHelper.level.find(\n            (l) => l.id === parseInt(value)\n          );\n          filter += `Level: ${level.id} - ${level.name} , `;\n        } else if (key === \"gfrom\") {\n          filter += `General population from: ${value}, `;\n        } else if (key === \"gto\") {\n          filter += `General population to: ${value}, `;\n        } else if (key === \"underfrom\") {\n          filter += `Under 1 population from: ${value}, `;\n        } else if (key === \"underto\") {\n          filter += `Under 1 population to: ${value}, `;\n        } else {\n          filter += `${key}=${value} , `;\n        }\n      }\n    }\n    return filter;\n  };\n  if (isFacSegHelperLoading || isReportsLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Facility segmentation</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                fetchReports();\n              }}\n            >\n              <h4>\n                <Trans>Filter</Trans>\n              </h4>\n              <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Facility Name</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          name: value,\n                        }));\n                      }}\n                      value={filterValues.name}\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Code</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          code: value,\n                        }));\n                      }}\n                      value={filterValues.code}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Level</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          level: value,\n                        }));\n                      }}\n                      value={filterValues.level}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {facSegHelper?.level.map((lev) => (\n                        <option key={lev.id} value={lev.id}>\n                          {`${lev.id} - ${lev.name}`}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Type</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          type: value,\n                        }));\n                      }}\n                      value={filterValues.type}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {facSegHelper?.type.map((ty) => (\n                        <option key={ty.id} value={ty.id}>\n                          {ty.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Power source</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          power: value,\n                        }));\n                      }}\n                      value={filterValues.power}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {facSegHelper?.power.map((pow) => (\n                        <option key={pow.id} value={pow.id}>\n                          {pow.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Functioning Status</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          func: value,\n                        }));\n                      }}\n                      value={filterValues.func}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      <option value={true}>Working</option>\n                      <option value={false}>Not working</option>\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-2\">\n                      <Trans>General population</Trans>:\n                    </label>\n                    <label className=\"label col-sm-1\">\n                      <Trans>from</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          gfrom: value,\n                        }));\n                      }}\n                      value={filterValues.gfrom}\n                    />\n                    <label className=\"label col-sm-1\">\n                      <Trans>to</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          gto: value,\n                        }));\n                      }}\n                      value={filterValues.gto}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-2\">\n                      <Trans>Under-1 populations</Trans>:\n                    </label>\n                    <label className=\"label col-sm-1\">\n                      <Trans>from</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          underfrom: value,\n                        }));\n                      }}\n                      value={filterValues.underfrom}\n                    />\n                    <label className=\"label col-sm-1\">\n                      <Trans>to</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          underto: value,\n                        }));\n                      }}\n                      value={filterValues.underto}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-2\">\n                  <button type=\"submit\" className=\"btn fs-5 btn-primary\">\n                    <Trans>Reports</Trans>\n                  </button>\n                </div>\n                <div className=\"col-sm-2\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary fs-5\"\n                    onClick={() => {\n                      setFilterValues(defaultValues);\n                      window.location.reload();\n                    }}\n                  >\n                    <Trans>Clear Filter</Trans>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <h4>\n              <Trans>Report</Trans>: <Trans>Facility segmentation</Trans> (\n              {country?.country})\n            </h4>\n            <h6>\n              <Trans>Filter</Trans> : {\"\"} {printFilterValues()}\n            </h6>\n\n            <h6>\n              <Trans>Date</Trans>: {new Date().toISOString().split(\"T\")[0]}\n            </h6>\n            <div className=\"mt-3 table-container\">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Facility Name</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Facility parent</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>Level</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Code</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>Type</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>Power</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>Owner</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Functioning Status</Trans>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell className=\"col-sm-2\">\n                          {report.name ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-2\">\n                          {report.parent ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.level ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-2\">\n                          {report.code ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.type ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.power ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.owner ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-2\">\n                          {report.func ? \"working\" : \"not working\"}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FacilitySegmentationReport;\n",
    "import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"https://api.invgap.org/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  savegaps(payload, saved) {\n    return ApiManager.post(API_URL + \"gapsave?condition=\" + payload, saved, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n",
    "import { Table, TableContainer } from \"@mui/material\";\n/**\n * @param  {DOMElement} {children}\n * shared table use in settings and all tables\n */\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n",
    "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ns\", \"children\"];\nimport { useTranslation } from './useTranslation';\nexport function Translation(props) {\n  var ns = props.ns,\n      children = props.children,\n      options = _objectWithoutProperties(props, _excluded);\n\n  var _useTranslation = useTranslation(ns, options),\n      _useTranslation2 = _slicedToArray(_useTranslation, 3),\n      t = _useTranslation2[0],\n      i18n = _useTranslation2[1],\n      ready = _useTranslation2[2];\n\n  return children(t, {\n    i18n: i18n,\n    lng: i18n.language\n  }, ready);\n}"
  ],
  "names": [
    "defaultValues",
    "name",
    "code",
    "level",
    "type",
    "power",
    "func",
    "gfrom",
    "gto",
    "underfrom",
    "underto",
    "useState",
    "filterValues",
    "setFilterValues",
    "country",
    "JSON",
    "parse",
    "localStorage",
    "getItem",
    "useQuery",
    "ReportService",
    "help",
    "res",
    "data",
    "facSegHelper",
    "isFacSegHelperLoading",
    "isLoading",
    "key",
    "params",
    "filter",
    "length",
    "toast",
    "refetchOnMount",
    "enabled",
    "reports",
    "isReportsLoading",
    "fetchReports",
    "refetch",
    "className",
    "onSubmit",
    "e",
    "preventDefault",
    "onChange",
    "value",
    "target",
    "preValues",
    "as",
    "t",
    "i18n",
    "selected",
    "map",
    "lev",
    "id",
    "ty",
    "pow",
    "onClick",
    "window",
    "location",
    "reload",
    "find",
    "p",
    "parseInt",
    "console",
    "log",
    "l",
    "printFilterValues",
    "Date",
    "toISOString",
    "split",
    "report",
    "index",
    "parent",
    "owner",
    "API_URL",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "degree",
    "payload",
    "saved",
    "children",
    "_excluded",
    "Translation",
    "props",
    "ns",
    "options",
    "_objectWithoutProperties",
    "_useTranslation",
    "useTranslation",
    "_useTranslation2",
    "_slicedToArray",
    "ready",
    "lng",
    "language"
  ],
  "sourceRoot": ""
}
