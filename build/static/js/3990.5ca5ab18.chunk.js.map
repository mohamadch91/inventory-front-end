{
  "version": 3,
  "file": "static/js/3990.5ca5ab18.chunk.js",
  "mappings": "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",
  "sources": [
    "app/components/DynamicInput.js",
    "app/shared/LeftArrowIcon.js",
    "app/shared/RightArrowIcon.js",
    "app/components/StepOperations.js",
    "app/helpers/related-field.js",
    "app/helpers/related-field-req.js",
    "app/facilities/Facility.js",
    "app/helpers/separator.js",
    "app/helpers/validation-checker.js",
    "app/services/facilities.service.js",
    "../node_modules/react-i18next/dist/es/Translation.js"
  ],
  "sourcesContent": [
    "import { Form } from \"react-bootstrap\";\nimport { separator as thousandSeparator } from \"../helpers/separator\";\nimport { components } from \"react-select\";\nimport { default as ReactSelect } from \"react-select\";\nimport { Translation, Trans } from \"react-i18next\";\nimport i18n from \"../../i18n\";\n\nimport { useState } from \"react\";\nlet numericKeys = \"0123456789.:\";\nconst num1 = \"0123456789\";\nconst Option = (props) => {\n  return (\n    <div>\n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          checked={props.isSelected}\n          onChange={() => null}\n        />{\" \"}\n        <label>\n          <Trans>{props.label}</Trans>\n        </label>\n      </components.Option>\n    </div>\n  );\n};\n\nconst DynamicInput = (props) => {\n  const { field, onChangeHandler, defaultValue, separator } = props;\n  const [selected, setSelected] = useState([]);\n  if (field.type === \"select\") {\n    if (field.stateName !== \"other_services\"){\n      return (\n        <Form.Control\n          onChange={(e) => onChangeHandler(e.target.value, field)}\n          // defaultValue={defaultValue}\n          className=\"form-control form-select\"\n          multiple={field.stateName === \"other_services\" ? true : false}\n          as=\"select\"\n          disabled={field.active ? !field.active : field.disabled}\n          id={`field-${field.id}`}\n        >\n          <Translation>\n            {(t, { i18n }) => (\n              <option i18n value=\"\" selected>\n                {t(\"Please select\")}\n              </option>\n            )}\n          </Translation>\n          {field.params.map((param) => (\n            <option\n              disabled={\n                param.enabled\n                  ? !param.enabled\n                  : param.active\n                  ? !param.active\n                  : !param.enable\n              }\n              value={param.id}\n              selected={parseInt(defaultValue) === param.id ? true : false}\n            >\n              {param.name || param.describe}\n            </option>\n          ))}\n        </Form.Control>\n      );}\n    else {\n      const options=[]\n      let selecteda=[]\n      console.log(selecteda)\n      for (let i = 0; i < field.params.length; i++) {\n        let disabled = field.params[i].enabled\n          ? !field.params[i].enabled\n          : field.params[i].active\n          ? !field.params[i].active\n          : !field.params[i].enable;\n        let selecteds =\n          defaultValue !== undefined &&\n          defaultValue !== null &&\n          defaultValue.includes(field.params[i].id)\n            ? true\n            : false;\n        if(!disabled){\n        options.push({\n          label: field.params[i].name || field.params[i].describe,\n          value: field.params[i].id,\n        });\n        }\n        if(selecteds){\n          selecteda.push({\n            label: field.params[i].name || field.params[i].describe,\n            value: field.params[i].id,\n          });\n\n        }\n      }\n      \n      \n\n      \n       \n  return (\n    <ReactSelect\n      options={options}\n      isMulti\n      closeMenuOnSelect={false}\n      hideSelectedOptions={false}\n      components={{\n        Option,\n      }}\n      onChange={(e) => {\n        console.log(e)\n        let x = [];\n        let y = \"\";\n        if(e!==null){\n        for (let i = 0; i < e.length; i++) {\n          x.push(e[i].value);\n          y+=e[i].value\n        }\n        setSelected(e)\n        selecteda=e\n        onChangeHandler(y, field);\n      }\n      else{\n        onChangeHandler(\"\", field);\n        setSelected([])\n        selecteda=[]\n      }\n      }}\n      allowSelectAll={true}\n      value={selected.length>0?selected:selecteda}\n    />\n  );}\n\n    \n  }\n\n  if (field.type === \"bool\") {\n    return (\n      <>\n        <Form.Control\n          onChange={(e) => onChangeHandler(e.target.value === \"true\", field)}\n          // defaultValue={defaultValue}\n          className=\"form-control\"\n          as=\"select\"\n          disabled={field.active ? !field.active : field.disabled}\n          id={`field-${field.id}`}\n        >\n          <Translation>\n            {(t, { i18n }) => (\n              <option\n                i18n\n                value=\"\"\n                selected={\n                  defaultValue === null || defaultValue === undefined\n                    ? true\n                    : false\n                }\n                disabled\n              >\n                {t(\"Please select\")}\n              </option>\n            )}\n          </Translation>\n         \n          <option\n            selected={\n              defaultValue !== null && defaultValue !== undefined\n                ? defaultValue\n                : false\n            }\n            value={true}\n          >\n            Yes\n          </option>\n          <option\n            selected={\n              defaultValue !== null && defaultValue !== undefined\n                ? !defaultValue\n                : false\n            }\n            value={false}\n          >\n            No\n          </option>\n        </Form.Control>\n      </>\n    );\n  }\n  if(i18n.language!=\"en\"){\n    numericKeys = \"0123456789,:\";\n  }\n  const validation = field.validation?.[0];\n  return (\n    <Form.Control\n      onKeyPress={(e) => {\n        e.persist();\n        if (field.type === \"number\") {\n          if (validation && validation?.float) {\n            if (numericKeys.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          } else if (validation && validation?.float === false) {\n            if (num1.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          }\n        }\n        onChangeHandler(e.target.value, field);\n      }}\n      lang=\"en-US\"\n      onChange={(e) => onChangeHandler(e.target.value, field)}\n      value={defaultValue}\n      className=\"form-control\"\n      id={`field-${field.id}`}\n      disabled={field.active ? !field.active : field.disabled}\n      min={validation && validation?.min !== -1 ? validation.min : undefined}\n      max={validation && validation?.max !== -1 ? validation.max : undefined}\n      step={\n        validation && validation?.float\n          ? Math.pow(0.1, validation.floating).toFixed(validation.floating)\n          : undefined\n      }\n      maxLength={\n        validation && validation?.digits !== -1 ? validation.digits : undefined\n      }\n      onBlur={(e) => {\n        e.persist();\n        if (separator) {\n          const formatted = thousandSeparator(e.target.value);\n          onChangeHandler(formatted, field);\n        }\n      }}\n    />\n  );\n};\n\nexport default DynamicInput;\n",
    "function LeftArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 400 400\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M382.688,182.686H59.116l77.209-77.214c6.764-6.76,6.764-17.726,0-24.485c-6.764-6.764-17.73-6.764-24.484,0L5.073,187.757\n\t\tc-6.764,6.76-6.764,17.727,0,24.485l106.768,106.775c3.381,3.383,7.812,5.072,12.242,5.072c4.43,0,8.861-1.689,12.242-5.072\n\t\tc6.764-6.76,6.764-17.726,0-24.484l-77.209-77.218h323.572c9.562,0,17.316-7.753,17.316-17.315\n\t\tC400.004,190.438,392.251,182.686,382.688,182.686z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default LeftArrowIcon;\n",
    "function RightArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 1024 1024\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M754.752 480H160a32 32 0 100 64h594.752L521.344 777.344a32 32 0 0045.312 45.312l288-288a32 32 0 000-45.312l-288-288a32 32 0 10-45.312 45.312L754.752 480z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default RightArrowIcon;\n",
    "import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { Trans } from \"react-i18next\";\nimport LeftArrowIcon from \"../shared/LeftArrowIcon\";\nimport RightArrowIcon from \"../shared/RightArrowIcon\";\n\nfunction StepOperations(props) {\n  const {\n    activeStep,\n    handleBack,\n    handleNext,\n    stepsLength,\n    isNextDisabled,\n    id,\n  } = props;\n  return (\n    <div className=\"row mt-2\">\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          disabled={activeStep === 0}\n          onClick={handleBack}\n          sx={{ mr: 1 }}\n          type=\"button\"\n        >\n          <LeftArrowIcon sx={{ mr: 2 }} />\n          <Trans>Back</Trans>\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        <>\n          {id !== \"new\" && (\n            <>\n              <button className=\"btn btn-primary w-25 \">SAVE ALL</button>\n              <Button\n                disabled={isNextDisabled}\n                onClick={handleNext}\n                type=\"button\"\n                sx={{ mr: 1 }}\n              >\n                <Trans>Next</Trans>\n                <RightArrowIcon />\n              </Button>\n            </>\n          )}\n          {id === \"new\" && activeStep !== stepsLength && (\n            <Button\n              disabled={isNextDisabled}\n              onClick={handleNext}\n              type=\"button\"\n              sx={{ mr: 1 }}\n            >\n              <Trans>Next</Trans>\n              <RightArrowIcon />\n            </Button>\n          )}\n          {id === \"new\" && activeStep === stepsLength && (\n            <button className=\"btn btn-primary w-25 \">SAVE ALL</button>\n          )}\n        </>\n      </Box>\n    </div>\n  );\n}\n\nexport default StepOperations;\n",
    "export const relatedFields = {\n  is_suitable: [\"is_suitable_reason\"],\n  haveimmservice: [\n    \"typeimmservice\",\n    \"numimmperweek\",\n    \"coverageX1\",\n    \"coverageX2\",\n    \"coverageX3\",\n    \"coverageX4\",\n    \"individualsX1\",\n    \"individualsX2\",\n    \"individualsX3\",\n    \"individualsX4\",\n  ],\n  other_service: [\"other_services\"],\n};\n\nexport const isRelatedFieldOk = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      console.log(fieldsValue[key]);\n      if (fieldsValue[key] !== undefined && fieldsValue[key] !== null) {\n        if (key === \"is_suitable\") {\n          return !fieldsValue[key];\n        }\n        return fieldsValue[key];\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n",
    "export const relatedFields = {\n  is_suitable: [\"is_suitable_reason\"],\n  haveimmservice: [\n    \"typeimmservice\",\n    \"numimmperweek\",\n    \"coverageX1\",\n    \"coverageX2\",\n    \"coverageX3\",\n    \"coverageX4\",\n    \"individualsX1\",\n    \"individualsX2\",\n    \"individualsX3\",\n    \"individualsX4\",\n  ],\n  other_service: [\"other_services\"],\n};\n\nexport const isRelatedFieldOkReq = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      console.log(fieldsValue[key]);\n       if (fieldsValue[key] !== undefined && fieldsValue[key] !== null) {\n      if (key === \"is_suitable\") {\n        return fieldsValue[key];\n      }\n      return !fieldsValue[key];\n    }\n    else{\n      return true;\n    }\n  }\n  }\n  return false;\n};\n",
    "import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport FacilitiesService from \"../services/facilities.service\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Spinner from \"../shared/Spinner\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { Form } from \"react-bootstrap\";\nimport DynamicInput from \"../components/DynamicInput\";\nimport {\n  hasValidationError,\n  timeValidationError,\n} from \"../helpers/validation-checker\";\nimport { isRelatedFieldOk, relatedFields } from \"../helpers/related-field\";\nimport { isRelatedFieldOkReq } from \"../helpers/related-field-req\";\n\nimport Map from \"../settings/Map\";\nimport { Trans } from \"react-i18next\";\nimport { separator } from \"../helpers/separator\";\nimport StepOperations from \"../components/StepOperations\";\nimport { useEffect } from \"react\";\nimport {\n  MapContainer,\n  useMap,\n  TileLayer,\n  Marker,\n  Popup,\n  useMapEvents,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\n// import tileLayer from '../util/tileLayer';\n// import \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet.css\";\nconst parentFacilityField = {\n  id: \"parent-facility\",\n  type: \"text\",\n  active: false,\n  disabled: true,\n  stateName: \"parentName\",\n};\nconst center = [52.22977, 21.01178];\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\nfunction LocationMarker() {\n  const [position, setPosition] = useState(null);\n  const map = useMapEvents({\n    click() {\n      map.locate();\n      map.invalidateSize();\n    },\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  });\n\n  return position === null ? null : <></>;\n}\nconst GetCoordinates = (props) => {\n  const map = useMap();\n  const handleClick = (e) => {\n           window.handleMapClick(e);\n\n  };\n\n  useEffect(() => {\n    if (!map) return;\n    const info = L.DomUtil.create(\"div\", \"legend\");\n\n    const positon = L.Control.extend({\n      options: {\n        position: \"bottomleft\",\n      },\n\n      onAdd: function () {\n        info.textContent = \"Click on map too add location\";\n        return info;\n      },\n    });\n    map.on(\"load\", (e) => {\n      console.log(\"salam\");\n    });\n    map.on(\"click\", (e) => {\n      window.navigator.geolocation.getCurrentPosition((pos)=> {\n        const { latitude, longitude } = pos.coords;\n        const data={\n          latlang:{\n          lat:latitude,\n          lng:longitude\n        }}\n        handleClick(data)\n      }, console.log);\n      info.textContent = e.latlng;\n      console.log(e)\n      handleClick(e);\n    });\n\n    map.addControl(new positon());\n  }, [map]);\n\n  return null;\n};\nfunction Facility() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [fieldsValue, setFieldValue] = useState({});\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [levels, setLevels] = useState([]);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const params = new URLSearchParams(history.location.search);\n  const pid = params.get(\"pid\");\nconst [map, setMap] = useState(null);\nconst [Current, sercurrent] = useState([]);\nconst [x1, setx1] = useState(\n  null\n);\nconst [x2, setx2] = useState(\n  null\n);\n\n\n  const { isLoading: isFacilityDefaultLoading } = useQuery(\n    [\"facility-default-value\", id],\n    async () => {\n      const defaultData = {\n        code: \"Unique code generated by system\",\n        updated_at: new Date().toISOString().split(\"T\")[0],\n      };\n\n      if (id === \"new\") {\n            setx1(\n              JSON.parse(localStorage.getItem(\"country\")) === null\n                ? 35\n                : JSON.parse(localStorage.getItem(\"country\"))[\n                    \"mainlocation\"\n                  ] === undefined\n                ? 35\n                : JSON.parse(localStorage.getItem(\"country\"))\n                    [\"mainlocation\"]?.split(\"(\")[1]\n                    ?.split(\",\")[0]\n            );\n            setx2(\n              JSON.parse(localStorage.getItem(\"country\")) === null\n                ? 51\n                : JSON.parse(localStorage.getItem(\"country\"))[\n                    \"mainlocation\"\n                  ] === undefined\n                ? 51\n                : JSON.parse(localStorage.getItem(\"country\"))\n                    [\"mainlocation\"]?.split(\",\")[1]\n                    ?.split(\")\")[0]\n            );\n        return defaultData;\n      }\n      const params={\n        id:id\n      }\n      const res = await FacilitiesService.getFacilities(params);\n      const result = { ...res.data, defaultData };\n      result[\"populationnumber\"] = separator(result[\"populationnumber\"]);\n      result[\"loverlevelfac\"] = separator(result[\"loverlevelfac\"]);\n      result[\"childrennumber\"] = separator(result[\"childrennumber\"]);\n      const gps = result[\"gpsCordinate\"];\n      if (gps) {\n        let x11=gps.split(\"(\")[1]?.split(\",\")[0];\n        let x22=gps.split(\",\")[1]?.split(\")\")[0];\n        setx1(x11);\n        setx2(x22);\n        setMap([x11, x22]);\n\n      }\n      else{\n        setx1(\n          JSON.parse(localStorage.getItem(\"country\")) === null\n            ? 35\n            : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] ===\n              undefined\n            ? 35\n            : JSON.parse(localStorage.getItem(\"country\"))\n                [\"mainlocation\"]?.split(\"(\")[1]\n                ?.split(\",\")[0]\n        );\n        setx2(\n          JSON.parse(localStorage.getItem(\"country\")) === null\n            ? 51\n            : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] ===\n              undefined\n            ? 51\n            : JSON.parse(localStorage.getItem(\"country\"))\n                [\"mainlocation\"]?.split(\",\")[1]\n                ?.split(\")\")[0]\n        );\n      }\n      return result;\n    },\n    {\n      refetchOnMount: true,\n      onSuccess(data) {\n        console.log(data)\n        setFieldValue(data);\n      },\n    }\n  );\n\n  const { data: facilityFields, isLoading: isFacilitiesFields } = useQuery(\n    [\"facility-fields\"],\n    async () => {\n      const params = {};\n      params[\"id\"] = id;\n      if (pid) {\n        params[\"parent\"] = pid;\n      }\n      const res = await FacilitiesService.getFacilityFields(params);\n      const result = {};\n      if (res.data) {\n        for (const field of res.data.related) {\n          if (field.stateName === \"name\") {\n            continue;\n          }\n          const fieldTopicInResult = result[field.topic] ?? [];\n          fieldTopicInResult.push(field);\n          result[field.topic] = fieldTopicInResult;\n        }\n        const firstTopic = Object.keys(result)[0];\n        //static fields\n        setLevels(\n          res.data.levels.map((level) => ({\n            id: level.id,\n            name: `${level.id} - ${level.name}`,\n            order: 1,\n            enabled: true,\n            paramid: level.id,\n            minpop: level.minpop,\n            maxpop: level.maxpop,\n          }))\n        );\n\n        result[firstTopic].unshift({\n          id: \"code\",\n          name: \"Facility code:\",\n          topic: firstTopic,\n          type: \"text\",\n          active: false,\n          disabled: true,\n          required: false,\n          stateName: \"code\",\n          params: [],\n        });\n\n        setFieldValue((perFieldsValue) => ({\n          ...perFieldsValue,\n          completerstaffname:\n            perFieldsValue?.completerstaffname ?? res.data.user.username,\n          parentName: res.data.facility.name,\n        }));\n      }\n      return result;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (isFacilityDefaultLoading || isFacilitiesFields) {\n    return <Spinner />;\n  }\n\n  const facilityNameField = {\n    id: \"name\",\n    type: \"text\",\n    active: activeStep === 0,\n    required: true,\n    disabled: activeStep !== 0,\n    stateName: \"name\",\n  };\n\n  const levelField = {\n    id: \"level\",\n    type: \"select\",\n    active: activeStep === 0 && id === \"new\",\n    required: true,\n    disabled: activeStep !== 0 || id != \"new\",\n    stateName: \"level\",\n    params: levels,\n  };\n\n  const hasRequiredErrors = () => {\n    const _fieldErrors = { ...fieldErrors };\n    const currentStepFields = [...Object.values(facilityFields)[activeStep]];\n    if (activeStep === 0) {\n      currentStepFields.push(levelField);\n      currentStepFields.push(facilityNameField);\n    }\n    currentStepFields.forEach((field) => {\n      if (\n        field.required &&\n        !fieldsValue[field.stateName] &&\n        !isRelatedFieldOkReq(field.stateName, fieldsValue)\n      ) {\n        if(field.type===\"bool\"){\n          if(fieldsValue[field.stateName]===undefined || fieldsValue[field.stateName]===null){\n          _fieldErrors[field.stateName] = \"this field is required!\";\n          }\n        }\n        else{\n        _fieldErrors[field.stateName] = \"this field is required!\";\n      }}\n    });\n    for (const key in relatedFields) {\n      const fields = relatedFields[key];\n      console.log(typeof fieldsValue[key]);\n      if (key === \"is_suitable\"){\n      \n        if(fieldsValue[key]===true){\n         fields.forEach((field) => {\n             console.log(field);\n           delete _fieldErrors[field];\n         });\n        }\n      }\n      else{\n        if (fieldsValue[key] === false) {\n          fields.forEach((field) => {\n            console.log(field)\n            delete _fieldErrors[field];\n          });\n        }\n    }}\n    setFieldErrors(_fieldErrors);\n    return Object.keys(_fieldErrors).length > 0;\n  };\n\n  const handleNext = () => {\n    if (!hasRequiredErrors()) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const onChangeHandler = (value, field) => {\n    const validation = field.validation?.[0];\n    if (\n      (JSON.parse(localStorage.getItem(\"country\"))[\"poptarget\"] ===\n        \"General population\" &&\n        field.stateName === \"populationnumber\") \n    ) {\n      validation.min = +selectedLevel?.minpop;\n      validation.max = +selectedLevel?.maxpop;\n    }\n    if (\n      JSON.parse(localStorage.getItem(\"country\"))[\"poptarget\"] ===\n        \"Under-1 Population\" &&\n      field.stateName === \"childrennumber\"\n    ) {\n      validation.min = +selectedLevel?.minpop;\n      validation.max = +selectedLevel?.maxpop;\n    }\n    \n    let validationErr;\n    if (field.name?.includes(\"hh:mm\")) {\n      validationErr = timeValidationError(value);\n    } else {\n      validationErr = hasValidationError(value, validation);\n    }\n    const cloneFieldsValue = { ...fieldsValue };\n    cloneFieldsValue[field.stateName] = value;\n    if (field.stateName === \"level\") {\n      cloneFieldsValue[field.stateName] = parseInt(value);\n    }\n    setFieldValue(cloneFieldsValue);\n    //check validation and required\n    const _fieldErrors = { ...fieldErrors };\n    if (validationErr) {\n      _fieldErrors[field.stateName] = validationErr;\n    } else {\n      delete _fieldErrors[field.stateName];\n    }\n    for (const key in relatedFields) {\n      const fields = relatedFields[key];\n      if (fieldsValue[key] === true) {\n        fields.forEach((field) => {\n          delete _fieldErrors[field];\n        });\n      }\n    }\n    setFieldErrors(_fieldErrors);\n  };\n\n  const onSaveHandler = async (e) => {\n    e.preventDefault();\n    if (hasRequiredErrors()) {\n      return;\n    }\n    const _fieldsValue = { ...fieldsValue };\n    for (const key in relatedFields) {\n      const fields = relatedFields[key];\n      if( key === \"is_suitable\"){\n        if (fieldsValue[key] === true) {\n        fields.forEach((field) => {\n          delete _fieldsValue[field];\n        });\n      }\n    }\n    else{\n      if (fieldsValue[key] === false) {\n        fields.forEach((field) => {\n          delete _fieldsValue[field];\n        });\n      }}\n    }\n    if (_fieldsValue[\"childrennumber\"]) {\n      const _value = _fieldsValue[\"childrennumber\"].replaceAll(\" \", \"\");\n      _fieldsValue[\"childrennumber\"] = +_value;\n    }\n    if (_fieldsValue[\"populationnumber\"]) {\n      const _value = _fieldsValue[\"populationnumber\"].replaceAll(\" \", \"\");\n      _fieldsValue[\"populationnumber\"] = +_value;\n    }\n    if (_fieldsValue[\"loverlevelfac\"]) {\n      const _value = _fieldsValue[\"loverlevelfac\"].replaceAll(\" \", \"\");\n      _fieldsValue[\"loverlevelfac\"] = +_value;\n    }\n    // for in _fieldsValue\n    for (const key in _fieldsValue) {\n      if (_fieldsValue[key] === \"\") {\n        delete _fieldsValue[key];\n      }\n     if (typeof _fieldsValue[key] === \"string\") {\n       // find this field\n       const field = Object.values(facilityFields)\n         .flat()\n         .find((field) => field.stateName === key);\n       if (field.type === \"number\") {\n         _fieldsValue[key] = parseFloat(_fieldsValue[key].replace(\",\", \".\"));\n       }\n     }\n    }\n    const res = await (id === \"new\"\n      ? FacilitiesService.postFacility(_fieldsValue)\n      : FacilitiesService.putFacility(_fieldsValue));\n    history.push(`/facilities/list`);\n  };\n\n  const handleMapClick = async (e) => {\n    setMap(e.latlng);\n    const cloneFieldsValue = { ...fieldsValue };\n    let str=\"LatLng(\"+e.latlng.lat+\",\"+e.latlng.lng+\")\";\n    cloneFieldsValue[\"gpsCordinate\"] = str;\n    setFieldValue(cloneFieldsValue);\n  };\nwindow.handleMapClick = handleMapClick;\n\n  const selectedLevel = levels[fieldsValue[\"level\"] - 2];\n  return (\n    <form onSubmit={onSaveHandler}>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Facility information</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row pb-4\" style={{ overflow: \"auto\" }}>\n              <Stepper activeStep={activeStep}>\n                {Object.keys(facilityFields).map((topic, index) => {\n                  return (\n                    <Step key={topic}>\n                      <StepLabel style={{ width: \"max-content\" }}>\n                        {topic}\n                      </StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n            </div>\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              id={id}\n              stepsLength={Object.keys(facilityFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row \">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Parent facility:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={parentFacilityField}\n                    defaultValue={fieldsValue[\"parentName\"]}\n                  />\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row\">\n              <Form.Group className=\"row mb-0 mt-3\">\n                <label\n                  className={`col-sm-4 text-right control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Facility name:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={facilityNameField}\n                    defaultValue={fieldsValue[\"name\"]}\n                    onChangeHandler={onChangeHandler}\n                  />\n                </div>\n                {fieldErrors[\"name\"] && (\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\"></div>\n                    <div className=\"col-sm-8\">\n                      <p className=\"my-1 ml-2 text-danger\">\n                        {fieldErrors[\"name\"]}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </Form.Group>\n            </div>\n\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Level:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={levelField}\n                    defaultValue={fieldsValue[\"level\"]}\n                    onChangeHandler={onChangeHandler}\n                  />\n                </div>\n                {fieldErrors[\"level\"] && (\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\"></div>\n                    <div className=\"col-sm-8\">\n                      <p className=\"my-1 ml-2 text-danger\">\n                        {fieldErrors[\"level\"]}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </Form.Group>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {Object.values(facilityFields)[activeStep]?.map((field) => {\n              if (!isRelatedFieldOk(field.stateName, fieldsValue)) {\n                return null;\n              }\n\n              const hasRequiredError = !!fieldErrors[field.stateName];\n              return (\n                <Form.Group className=\"row mb-0\" key={field.name}>\n                  <label\n                    className={`col-sm-4  ${\n                      field.required ? \"control-label\" : \"\"\n                    }`}\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      alignItems: \"center\",\n                      lineHeight: \"1.4\",\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {field.name}\n                  </label>\n                  <div className=\"col-sm-8\">\n                    {field.stateName === \"gpsCordinate\" ? (\n                      <div className=\"map  \">\n                        <div className=\"mb-2\">\n                          <Form.Control\n                            type=\"text\"\n                            disabled\n                            value={fieldsValue[field.stateName]}\n                          />\n                        </div>\n                        <div className=\"map\">\n                          {Current !== null && x1 && x2 && (\n                            <MapContainer\n                              center={[x1, x2]}\n                              zoom={10}\n                              scrollWheelZoom={true}\n                              style={{\n                                width: \"100%\",\n                                height: \"450px\",\n                                zIndex: \"1\",\n                              }}\n\n                              //   onClick={this.handlemapclick}\n                            >\n                              <TileLayer\n                                {...{\n                                  url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                                  width: 500,\n                                }}\n                              />\n\n                              <GetCoordinates\n                                change={handleMapClick}\n                                fields={fieldsValue}\n                                setFields={setFieldValue}\n                                map={map}\n                                setMap={setMap}\n                              />\n                              <>\n                                {map && (\n                                  <Marker position={map} draggable={true}>\n                                    <Popup position={map}>\n                                      Current location:{\" \"}\n                                      <pre>{JSON.stringify(map, null, 2)}</pre>\n                                    </Popup>\n                                  </Marker>\n                                )}\n                              </>\n                              <LocationMarker />\n                            </MapContainer>\n                          )}\n                        </div>\n                      </div>\n                    ) : (\n                      <DynamicInput\n                        field={field}\n                        onChangeHandler={onChangeHandler}\n                        defaultValue={fieldsValue[field.stateName]}\n                        separator={\n                          field.stateName === \"childrennumber\" ||\n                          field.stateName === \"loverlevelfac\" ||\n                          field.stateName === \"populationnumber\"\n                        }\n                      />\n                    )}\n                    <br />\n                    {JSON.parse(localStorage.getItem(\"country\"))[\n                      \"poptarget\"\n                    ] === \"General population\" &&\n                      field.stateName === \"populationnumber\" &&\n                      selectedLevel && (\n                        <p>\n                          range: {separator(selectedLevel?.minpop)} -{\" \"}\n                          {separator(selectedLevel?.maxpop)}\n                        </p>\n                      )}\n                    {JSON.parse(localStorage.getItem(\"country\"))[\n                      \"poptarget\"\n                    ] === \"Under-1 Population\" &&\n                      field.stateName === \"childrennumber\" &&\n                      selectedLevel && (\n                        <p>\n                          range: {separator(selectedLevel?.minpop)} -{\" \"}\n                          {separator(selectedLevel?.maxpop)}\n                        </p>\n                      )}\n                  </div>\n                  {hasRequiredError && (\n                    <div className=\"row\">\n                      <div className=\"col-sm-4\"></div>\n                      <div className=\"col-sm-8\">\n                        <p className=\"my-1 ml-2 text-danger\">\n                          <Trans>{fieldErrors[field.stateName]}</Trans>\n                        </p>\n                      </div>\n                    </div>\n                  )}\n                  <hr className=\"my-3\" />\n                </Form.Group>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3 mb-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-2\">\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              id={id}\n              stepsLength={Object.keys(facilityFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Facility;\n",
    "\nexport const separator = (x) => {\n  if (x === undefined || x === null || x===\"\") {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n",
    "import { separator } from \"../helpers/separator\";\n\nexport const hasValidationError = (value, validation) => {\n  if (typeof value !== \"string\" && typeof value !== \"number\") return false;\n\n  const _value = value.replaceAll(\" \", \"\");\n  if (validation === undefined || !_value) return false;\n  if (validation.min !== -1 && validation.min > _value) {\n    return `value must greater than ${separator(validation.min)}`;\n  }\n  if (validation.max !== -1 && validation.max < _value) {\n    return `value must less than ${separator(validation.max)}`;\n  }\n console.log(_value.split(\".\"));\n  if (\n    validation.float &&\n    _value.includes(\".\") &&\n    (_value).split(\".\")[1].length > validation.floating\n  ) {\n   \n    return `value must has ${validation.floating} decimals`;\n  }\n  // if (\n  //   validation.digits !== -1 &&\n  //   _value\n  //     .toString()\n  //     .replaceAll(\",\", \"\")\n  //     .replaceAll(\".\", \"\")\n  //     .replaceAll(\":\", \"\").length >\n  //     validation.digits + (validation.floating > 0 ? validation.floating : 0)\n  // ) {\n  //   return `value must be ${validation.digits} digits`;\n  // }\n  return false;\n};\n\nexport const timeValidationError = (value) => {\n  const isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(\n    value\n  );\n\n  if (isValid) {\n    return false;\n  }\n  return \"value must be in (hh:mm) format!\";\n};\n",
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\nimport axios from \"axios\";\n\nconst API_URL = \"http://127.0.0.1:8000/facilities/\";\n\nclass FacilitiesService {\n  getFacilities(params) {\n    return ApiManager.get(API_URL, {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacilities(id) {\n    const params = { id };\n    return ApiManager.get(API_URL + \"parent\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  // deleteFacility(id) {\n  //   return ApiManager.delete(API_URL, {\n  //     headers: { Authorization: authHeader() },\n  //     data: { id },\n  //   });\n  // }\n  getFacilityFields(params) {\n    return ApiManager.get(API_URL + \"facility-field\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacilityFields1(params) {\n    return ApiManager.get(API_URL + \"print\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postFacility(payload) {\n    return ApiManager.post(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putFacility(payload) {\n    return ApiManager.put(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  importFacilities(payload) {\n    return ApiManager.post(\n      \"http://127.0.0.1:8000/facilities/\" + \"import\",\n      payload,\n      {\n        headers: { Authorization: authHeader() },\n      }\n    );\n  }\n  deletefacilityparam() {\n    return ApiManager.get(API_URL + \"delete\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteFacility(payload) {\n    return ApiManager.post(API_URL + \"delete\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new FacilitiesService();\n",
    "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ns\", \"children\"];\nimport { useTranslation } from './useTranslation';\nexport function Translation(props) {\n  var ns = props.ns,\n      children = props.children,\n      options = _objectWithoutProperties(props, _excluded);\n\n  var _useTranslation = useTranslation(ns, options),\n      _useTranslation2 = _slicedToArray(_useTranslation, 3),\n      t = _useTranslation2[0],\n      i18n = _useTranslation2[1],\n      ready = _useTranslation2[2];\n\n  return children(t, {\n    i18n: i18n,\n    lng: i18n.language\n  }, ready);\n}"
  ],
  "names": [
    "numericKeys",
    "Option",
    "props",
    "type",
    "checked",
    "isSelected",
    "onChange",
    "label",
    "field",
    "onChangeHandler",
    "defaultValue",
    "separator",
    "useState",
    "selected",
    "setSelected",
    "stateName",
    "e",
    "target",
    "value",
    "className",
    "multiple",
    "as",
    "disabled",
    "active",
    "id",
    "t",
    "i18n",
    "params",
    "map",
    "param",
    "enabled",
    "enable",
    "parseInt",
    "name",
    "describe",
    "options",
    "selecteda",
    "console",
    "log",
    "i",
    "length",
    "selecteds",
    "undefined",
    "includes",
    "push",
    "isMulti",
    "closeMenuOnSelect",
    "hideSelectedOptions",
    "components",
    "x",
    "y",
    "allowSelectAll",
    "validation",
    "onKeyPress",
    "persist",
    "float",
    "indexOf",
    "key",
    "preventDefault",
    "lang",
    "min",
    "max",
    "step",
    "Math",
    "pow",
    "floating",
    "toFixed",
    "maxLength",
    "digits",
    "onBlur",
    "formatted",
    "thousandSeparator",
    "version",
    "width",
    "height",
    "viewBox",
    "fill",
    "d",
    "activeStep",
    "handleBack",
    "handleNext",
    "stepsLength",
    "isNextDisabled",
    "Box",
    "sx",
    "display",
    "flexDirection",
    "pt",
    "Button",
    "color",
    "onClick",
    "mr",
    "Trans",
    "flex",
    "relatedFields",
    "is_suitable",
    "haveimmservice",
    "other_service",
    "parentFacilityField",
    "LocationMarker",
    "position",
    "setPosition",
    "useMapEvents",
    "click",
    "locate",
    "invalidateSize",
    "locationfound",
    "latlng",
    "flyTo",
    "getZoom",
    "L",
    "iconRetinaUrl",
    "require",
    "iconUrl",
    "shadowUrl",
    "GetCoordinates",
    "useMap",
    "handleClick",
    "window",
    "handleMapClick",
    "useEffect",
    "info",
    "positon",
    "onAdd",
    "textContent",
    "on",
    "navigator",
    "geolocation",
    "getCurrentPosition",
    "pos",
    "coords",
    "latitude",
    "longitude",
    "latlang",
    "lat",
    "lng",
    "addControl",
    "setActiveStep",
    "fieldsValue",
    "setFieldValue",
    "fieldErrors",
    "setFieldErrors",
    "levels",
    "setLevels",
    "useParams",
    "history",
    "useHistory",
    "pid",
    "URLSearchParams",
    "location",
    "search",
    "get",
    "setMap",
    "Current",
    "x1",
    "setx1",
    "x2",
    "setx2",
    "useQuery",
    "defaultData",
    "code",
    "updated_at",
    "Date",
    "toISOString",
    "split",
    "JSON",
    "parse",
    "localStorage",
    "getItem",
    "FacilitiesService",
    "res",
    "result",
    "data",
    "gps",
    "x11",
    "x22",
    "refetchOnMount",
    "onSuccess",
    "isFacilityDefaultLoading",
    "isLoading",
    "related",
    "fieldTopicInResult",
    "topic",
    "firstTopic",
    "Object",
    "keys",
    "level",
    "order",
    "paramid",
    "minpop",
    "maxpop",
    "unshift",
    "required",
    "perFieldsValue",
    "completerstaffname",
    "user",
    "username",
    "parentName",
    "facility",
    "facilityFields",
    "isFacilitiesFields",
    "Spinner",
    "facilityNameField",
    "levelField",
    "hasRequiredErrors",
    "_fieldErrors",
    "currentStepFields",
    "values",
    "forEach",
    "currentFieldStateName",
    "isRelatedFieldOkReq",
    "fields",
    "prevActiveStep",
    "validationErr",
    "selectedLevel",
    "timeValidationError",
    "hasValidationError",
    "cloneFieldsValue",
    "onSaveHandler",
    "_fieldsValue",
    "_value",
    "replaceAll",
    "flat",
    "find",
    "parseFloat",
    "replace",
    "str",
    "onSubmit",
    "style",
    "overflow",
    "Stepper",
    "index",
    "Step",
    "StepLabel",
    "StepOperations",
    "Form",
    "justifyContent",
    "alignItems",
    "lineHeight",
    "textAlign",
    "DynamicInput",
    "isRelatedFieldOk",
    "hasRequiredError",
    "MapContainer",
    "center",
    "zoom",
    "scrollWheelZoom",
    "zIndex",
    "TileLayer",
    "url",
    "change",
    "setFields",
    "Marker",
    "draggable",
    "Popup",
    "stringify",
    "n",
    "sep",
    "reverse",
    "text",
    "join",
    "rx",
    "toString",
    "test",
    "API_URL",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "payload",
    "_excluded",
    "Translation",
    "ns",
    "children",
    "_objectWithoutProperties",
    "_useTranslation",
    "useTranslation",
    "_useTranslation2",
    "_slicedToArray",
    "ready",
    "language"
  ],
  "sourceRoot": ""
}
