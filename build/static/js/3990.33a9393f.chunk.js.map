{"version":3,"file":"static/js/3990.33a9393f.chunk.js","mappings":"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","sources":["app/components/DynamicInput.js","app/shared/LeftArrowIcon.js","app/shared/RightArrowIcon.js","app/components/StepOperations.js","app/helpers/related-field.js","app/helpers/related-field-req.js","app/facilities/Facility.js","app/helpers/separator.js","app/helpers/validation-checker.js","app/services/facilities.service.js"],"sourcesContent":["import { Form } from \"react-bootstrap\";\nimport { separator as thousandSeparator } from \"../helpers/separator\";\n\nconst numericKeys = \"0123456789.:\";\nconst num1 = \"0123456789\";\nconst DynamicInput = (props) => {\n  const { field, onChangeHandler, defaultValue, separator } = props;\n  if (field.type === \"select\") {\n    return (\n      <Form.Control\n        onChange={(e) => onChangeHandler(e.target.value, field)}\n        defaultValue={defaultValue}\n        className=\"form-control\"\n        multiple={field.stateName === \"other_services\" ? true : false}\n        as=\"select\"\n        disabled={field.active ? !field.active : field.disabled}\n        id={`field-${field.id}`}\n      >\n        <option value=\"\" selected disabled>\n          Please select\n        </option>\n        {field.params.map((param) => (\n          <option\n            disabled={\n              param.enabled\n                ? !param.enabled\n                : param.active\n                ? !param.active\n                : !param.enable\n            }\n            value={param.id}\n          >\n            {param.name || param.describe}\n          </option>\n        ))}\n      </Form.Control>\n    );\n  }\n\n  if (field.type === \"bool\") {\n   \n    return (\n      <>\n        <Form.Control\n          onChange={(e) => onChangeHandler(e.target.value==='true', field)}\n          defaultValue={defaultValue}\n          className=\"form-control\"\n          as=\"select\"\n          disabled={field.active ? !field.active : field.disabled}\n          id={`field-${field.id}`}\n        >\n          <option  selected disabled>\n            Please select\n          </option>\n          <option value={true}  >\n            Yes\n          </option>\n          <option value={false}  >\n            No\n          </option>\n        </Form.Control>\n      </>\n    );\n  }\n\n  const validation = field.validation?.[0];\n  return (\n    <Form.Control\n      onKeyPress={(e) => {\n        e.persist();\n        if (field.type === \"number\") {\n          if (validation && validation?.float) {\n            if (numericKeys.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          } else if (validation && validation?.float === false) {\n            if (num1.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          }\n        }\n        onChangeHandler(e.target.value, field);\n      }}\n      onChange={(e) => onChangeHandler(e.target.value, field)}\n      value={defaultValue}\n      className=\"form-control\"\n      id={`field-${field.id}`}\n      disabled={field.active ? !field.active : field.disabled}\n      min={validation && validation?.min !== -1 ? validation.min : undefined}\n      max={validation && validation?.max !== -1 ? validation.max : undefined}\n      step={\n        validation && validation?.float\n          ? Math.pow(0.1, validation.floating).toFixed(validation.floating)\n          : undefined\n      }\n      maxLength={\n        validation && validation?.digits !== -1 ? validation.digits : undefined\n      }\n      onBlur={(e) => {\n        e.persist();\n        if (separator) {\n          const formatted = thousandSeparator(e.target.value);\n          onChangeHandler(formatted, field);\n        }\n      }}\n    />\n  );\n};\n\nexport default DynamicInput;\n","function LeftArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 400 400\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M382.688,182.686H59.116l77.209-77.214c6.764-6.76,6.764-17.726,0-24.485c-6.764-6.764-17.73-6.764-24.484,0L5.073,187.757\n\t\tc-6.764,6.76-6.764,17.727,0,24.485l106.768,106.775c3.381,3.383,7.812,5.072,12.242,5.072c4.43,0,8.861-1.689,12.242-5.072\n\t\tc6.764-6.76,6.764-17.726,0-24.484l-77.209-77.218h323.572c9.562,0,17.316-7.753,17.316-17.315\n\t\tC400.004,190.438,392.251,182.686,382.688,182.686z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default LeftArrowIcon;\n","function RightArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 1024 1024\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M754.752 480H160a32 32 0 100 64h594.752L521.344 777.344a32 32 0 0045.312 45.312l288-288a32 32 0 000-45.312l-288-288a32 32 0 10-45.312 45.312L754.752 480z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default RightArrowIcon;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { Trans } from \"react-i18next\";\nimport LeftArrowIcon from \"../shared/LeftArrowIcon\";\nimport RightArrowIcon from \"../shared/RightArrowIcon\";\n\nfunction StepOperations(props) {\n  const { activeStep, handleBack, handleNext, stepsLength, isNextDisabled } =\n    props;\n  return (\n    <div className=\"row mt-2\">\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          disabled={activeStep === 0}\n          onClick={handleBack}\n          sx={{ mr: 1 }}\n          type=\"button\"\n        >\n          <LeftArrowIcon sx={{ mr: 2 }} />\n          <Trans>Back</Trans>\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        {activeStep === stepsLength ? (\n          <button className=\"btn btn-primary \">Save</button>\n        ) : (\n          <Button\n            disabled={isNextDisabled}\n            onClick={handleNext}\n            type=\"button\"\n            sx={{ mr: 1 }}\n          >\n            <Trans>Next</Trans>\n            <RightArrowIcon />\n          </Button>\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default StepOperations;\n","export const relatedFields = {\n  is_suitable: [\"is_suitable_reason\"],\n  haveimmservice: [\n    \"typeimmservice\",\n    \"numimmperweek\",\n    \"coverageX1\",\n    \"coverageX2\",\n    \"coverageX3\",\n    \"coverageX4\",\n    \"individualsX1\",\n    \"individualsX2\",\n    \"individualsX3\",\n    \"individualsX4\",\n  ],\n  other_service: [\"other_services\"],\n};\n\nexport const isRelatedFieldOk = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      if(key===\"is_suitable\"){\n        return !fieldsValue[key]\n      }\n      return fieldsValue[key];\n    }\n  }\n  return true;\n};\n","export const relatedFields = {\n  is_suitable: [\"is_suitable_reason\"],\n  haveimmservice: [\n    \"typeimmservice\",\n    \"numimmperweek\",\n    \"coverageX1\",\n    \"coverageX2\",\n    \"coverageX3\",\n    \"coverageX4\",\n    \"individualsX1\",\n    \"individualsX2\",\n    \"individualsX3\",\n    \"individualsX4\",\n  ],\n  other_service: [\"other_services\"],\n};\n\nexport const isRelatedFieldOkReq = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      if (key === \"is_suitable\") {\n        return fieldsValue[key];\n      }\n      return !fieldsValue[key];\n    }\n  }\n  return false;\n};\n","import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport FacilitiesService from \"../services/facilities.service\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Spinner from \"../shared/Spinner\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { Form } from \"react-bootstrap\";\nimport DynamicInput from \"../components/DynamicInput\";\nimport {\n  hasValidationError,\n  timeValidationError,\n} from \"../helpers/validation-checker\";\nimport { isRelatedFieldOk, relatedFields } from \"../helpers/related-field\";\nimport { isRelatedFieldOkReq } from \"../helpers/related-field-req\";\n\nimport Map from \"../settings/Map\";\nimport { Trans } from \"react-i18next\";\nimport { separator } from \"../helpers/separator\";\nimport StepOperations from \"../components/StepOperations\";\nimport { useEffect } from \"react\";\nimport {\n  MapContainer,\n  useMap,\n  TileLayer,\n  Marker,\n  Popup,\n  useMapEvents,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\n// import tileLayer from '../util/tileLayer';\n// import \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet.css\";\nconst parentFacilityField = {\n  id: \"parent-facility\",\n  type: \"text\",\n  active: false,\n  disabled: true,\n  stateName: \"parentName\",\n};\nconst center = [52.22977, 21.01178];\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\nfunction LocationMarker() {\n  const [position, setPosition] = useState(null);\n  const map = useMapEvents({\n    click() {\n      map.locate();\n      map.invalidateSize();\n    },\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  });\n\n  return position === null ? null : <></>;\n}\nconst GetCoordinates = (props) => {\n  const map = useMap();\n  const handleClick = (e) => {\n           window.handleMapClick(e);\n\n  };\n\n  useEffect(() => {\n    if (!map) return;\n    const info = L.DomUtil.create(\"div\", \"legend\");\n\n    const positon = L.Control.extend({\n      options: {\n        position: \"bottomleft\",\n      },\n\n      onAdd: function () {\n        info.textContent = \"Click on map too add location\";\n        return info;\n      },\n    });\n    map.on(\"load\", (e) => {\n      console.log(\"salam\");\n    });\n    map.on(\"click\", (e) => {\n      window.navigator.geolocation.getCurrentPosition(console.log, console.log);\n        info.textContent = e.latlng;\n      handleClick(e);\n    });\n\n    map.addControl(new positon());\n  }, [map]);\n\n  return null;\n};\nfunction Facility() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [fieldsValue, setFieldValue] = useState({});\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [levels, setLevels] = useState([]);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const params = new URLSearchParams(history.location.search);\n  const pid = params.get(\"pid\");\nconst [map, setMap] = useState(null);\nconst [Current, sercurrent] = useState([]);\nconst [x1, setx1] = useState(\n  JSON.parse(localStorage.getItem(\"country\")) === null\n    ? 35\n    : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] === undefined\n    ? 35\n    : JSON.parse(localStorage.getItem(\"country\"))\n        [\"mainlocation\"]?.split(\"(\")[1]\n        ?.split(\",\")[0]\n);\nconst [x2, setx2] = useState(\n  JSON.parse(localStorage.getItem(\"country\")) === null\n    ? 51\n    : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] === undefined\n    ? 51\n    : JSON.parse(localStorage.getItem(\"country\"))\n        [\"mainlocation\"]?.split(\",\")[1]\n        ?.split(\")\")[0]\n);\n\n\n  const { isLoading: isFacilityDefaultLoading } = useQuery(\n    [\"facility-default-value\", id],\n    async () => {\n      const defaultData = {\n        code: \"Unique code generated by system\",\n        updated_at: new Date().toISOString().split(\"T\")[0],\n      };\n\n      if (id === \"new\") {\n        return defaultData;\n      }\n\n      const res = await FacilitiesService.getFacilities(id);\n      const result = { ...res.data, defaultData };\n      result[\"populationnumber\"] = separator(result[\"populationnumber\"]);\n      result[\"loverlevelfac\"] = separator(result[\"loverlevelfac\"]);\n      result[\"childrennumber\"] = separator(result[\"childrennumber\"]);\n      return result;\n    },\n    {\n      refetchOnMount: true,\n      onSuccess(data) {\n        setFieldValue(data);\n      },\n    }\n  );\n\n  const { data: facilityFields, isLoading: isFacilitiesFields } = useQuery(\n    [\"facility-fields\"],\n    async () => {\n      const params = {};\n      params[\"id\"] = id;\n      if (pid) {\n        params[\"parent\"] = pid;\n      }\n      const res = await FacilitiesService.getFacilityFields(params);\n      const result = {};\n      if (res.data) {\n        for (const field of res.data.related) {\n          if (field.stateName === \"name\") {\n            continue;\n          }\n          const fieldTopicInResult = result[field.topic] ?? [];\n          fieldTopicInResult.push(field);\n          result[field.topic] = fieldTopicInResult;\n        }\n        const firstTopic = Object.keys(result)[0];\n        //static fields\n        setLevels(\n          res.data.levels.map((level) => ({\n            id: level.id,\n            name: `${level.id} - ${level.name}`,\n            order: 1,\n            enabled: true,\n            paramid: level.id,\n            minpop: level.minpop,\n            maxpop: level.maxpop,\n          }))\n        );\n\n        result[firstTopic].unshift({\n          id: \"code\",\n          name: \"Facility code:\",\n          topic: firstTopic,\n          type: \"text\",\n          active: false,\n          disabled: true,\n          required: false,\n          stateName: \"code\",\n          params: [],\n        });\n\n        setFieldValue((perFieldsValue) => ({\n          ...perFieldsValue,\n          completerstaffname:\n            perFieldsValue?.completerstaffname ?? res.data.user.id,\n          parentName: res.data.facility.name,\n        }));\n      }\n      return result;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (isFacilityDefaultLoading || isFacilitiesFields) {\n    return <Spinner />;\n  }\n\n  const facilityNameField = {\n    id: \"name\",\n    type: \"text\",\n    active: activeStep === 0,\n    required: true,\n    disabled: activeStep !== 0,\n    stateName: \"name\",\n  };\n\n  const levelField = {\n    id: \"level\",\n    type: \"select\",\n    active: activeStep === 0,\n    required: true,\n    disabled: activeStep !== 0,\n    stateName: \"level\",\n    params: levels,\n  };\n\n  const hasRequiredErrors = () => {\n    const _fieldErrors = { ...fieldErrors };\n    const currentStepFields = [...Object.values(facilityFields)[activeStep]];\n    if (activeStep === 0) {\n      currentStepFields.push(levelField);\n      currentStepFields.push(facilityNameField);\n    }\n    currentStepFields.forEach((field) => {\n      if (\n        field.required &&\n        !fieldsValue[field.stateName] &&\n        !isRelatedFieldOkReq(field.stateName, fieldsValue)\n      ) {\n        if(field.type===\"bool\"){\n          if(fieldsValue[field.stateName]===undefined){\n          _fieldErrors[field.stateName] = \"this field is required!\";\n          }\n        }\n        else{\n        _fieldErrors[field.stateName] = \"this field is required!\";\n      }}\n    });\n    for (const key in relatedFields) {\n      const fields = relatedFields[key];\n      console.log(typeof fieldsValue[key]);\n      if (key === \"is_suitable\"){\n      \n        if(fieldsValue[key]===true){\n         fields.forEach((field) => {\n             console.log(field);\n           delete _fieldErrors[field];\n         });\n        }\n      }\n      else{\n        if (fieldsValue[key] === false) {\n          fields.forEach((field) => {\n            console.log(field)\n            delete _fieldErrors[field];\n          });\n        }\n    }}\n    setFieldErrors(_fieldErrors);\n    return Object.keys(_fieldErrors).length > 0;\n  };\n\n  const handleNext = () => {\n    if (!hasRequiredErrors()) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const onChangeHandler = (value, field) => {\n    const validation = field.validation?.[0];\n    if (\n      (JSON.parse(localStorage.getItem(\"country\"))[\"poptarget\"] ===\n        \"General population\" &&\n        field.stateName === \"populationnumber\") \n    ) {\n      validation.min = +selectedLevel?.minpop;\n      validation.max = +selectedLevel?.maxpop;\n    }\n    if (\n      JSON.parse(localStorage.getItem(\"country\"))[\"poptarget\"] ===\n        \"Under-1 Population\" &&\n      field.stateName === \"childrennumber\"\n    ) {\n      validation.min = +selectedLevel?.minpop;\n      validation.max = +selectedLevel?.maxpop;\n    }\n    \n    let validationErr;\n    if (field.name?.includes(\"hh:mm\")) {\n      validationErr = timeValidationError(value);\n    } else {\n      validationErr = hasValidationError(value, validation);\n    }\n    const cloneFieldsValue = { ...fieldsValue };\n    cloneFieldsValue[field.stateName] = value;\n    if (field.stateName === \"level\") {\n      cloneFieldsValue[field.stateName] = parseInt(value);\n    }\n    setFieldValue(cloneFieldsValue);\n    //check validation and required\n    const _fieldErrors = { ...fieldErrors };\n    if (validationErr) {\n      _fieldErrors[field.stateName] = validationErr;\n    } else {\n      delete _fieldErrors[field.stateName];\n    }\n    for (const key in relatedFields) {\n      const fields = relatedFields[key];\n      if (fieldsValue[key] === true) {\n        fields.forEach((field) => {\n          delete _fieldErrors[field];\n        });\n      }\n    }\n    setFieldErrors(_fieldErrors);\n  };\n\n  const onSaveHandler = async (e) => {\n    e.preventDefault();\n    if (hasRequiredErrors()) {\n      return;\n    }\n    const _fieldsValue = { ...fieldsValue };\n    for (const key in relatedFields) {\n      const fields = relatedFields[key];\n      if (fieldsValue[key] === false) {\n        fields.forEach((field) => {\n          delete _fieldsValue[field];\n        });\n      }\n    }\n    if (_fieldsValue[\"childrennumber\"]) {\n      const _value = _fieldsValue[\"childrennumber\"].replaceAll(\" \", \"\");\n      _fieldsValue[\"childrennumber\"] = +_value;\n    }\n    if (_fieldsValue[\"populationnumber\"]) {\n      const _value = _fieldsValue[\"populationnumber\"].replaceAll(\" \", \"\");\n      _fieldsValue[\"populationnumber\"] = +_value;\n    }\n    if (_fieldsValue[\"loverlevelfac\"]) {\n      const _value = _fieldsValue[\"loverlevelfac\"].replaceAll(\" \", \"\");\n      _fieldsValue[\"loverlevelfac\"] = +_value;\n    }\n    // for in _fieldsValue\n    for (const key in _fieldsValue) {\n      if (_fieldsValue[key] === \"\") {\n        delete _fieldsValue[key];\n      }\n    }\n    const res = await (id === \"new\"\n      ? FacilitiesService.postFacility(_fieldsValue)\n      : FacilitiesService.putFacility(_fieldsValue));\n  };\n\n  const handleMapClick = async (e) => {\n    setMap(e.latlng);\n    const cloneFieldsValue = { ...fieldsValue };\n    let str=\"LatLng(\"+e.latlng.lat+\",\"+e.latlng.lng+\")\";\n    cloneFieldsValue[\"gpsCordinate\"] = str;\n    setFieldValue(cloneFieldsValue);\n  };\nwindow.handleMapClick = handleMapClick;\n\n  const selectedLevel = levels[fieldsValue[\"level\"] - 2];\n  return (\n    <form onSubmit={onSaveHandler}>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Facility information</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row pb-4\" style={{ overflow: \"auto\" }}>\n              <Stepper activeStep={activeStep}>\n                {Object.keys(facilityFields).map((topic, index) => {\n                  return (\n                    <Step key={topic}>\n                      <StepLabel style={{ width: \"max-content\" }}>\n                        {topic}\n                      </StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n            </div>\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              stepsLength={Object.keys(facilityFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Facility name:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={facilityNameField}\n                    defaultValue={fieldsValue[\"name\"]}\n                    onChangeHandler={onChangeHandler}\n                  />\n                </div>\n                {fieldErrors[\"name\"] && (\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\"></div>\n                    <div className=\"col-sm-8\">\n                      <p className=\"my-1 ml-2 text-danger\">\n                        {fieldErrors[\"name\"]}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Parent facility:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={parentFacilityField}\n                    defaultValue={fieldsValue[\"parentName\"]}\n                  />\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Level:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={levelField}\n                    defaultValue={fieldsValue[\"level\"]}\n                    onChangeHandler={onChangeHandler}\n                  />\n                </div>\n                {fieldErrors[\"level\"] && (\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\"></div>\n                    <div className=\"col-sm-8\">\n                      <p className=\"my-1 ml-2 text-danger\">\n                        {fieldErrors[\"level\"]}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </Form.Group>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {Object.values(facilityFields)[activeStep]?.map((field) => {\n              if (!isRelatedFieldOk(field.stateName, fieldsValue)) {\n                return null;\n              }\n            \n              const hasRequiredError = !!fieldErrors[field.stateName];\n              return (\n                <Form.Group className=\"row mb-0\" key={field.name}>\n                  <label\n                    className={`col-sm-4  ${\n                      field.required ? \"control-label\" : \"\"\n                    }`}\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      alignItems: \"center\",\n                      lineHeight: \"1.4\",\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {field.name}\n                  </label>\n                  <div className=\"col-sm-8\">\n                    {field.stateName === \"gpsCordinate\" ? (\n                      <div className=\"map  \">\n                        <div className=\"mb-2\">\n                          <Form.Control\n                            type=\"text\"\n                            disabled\n                            value={fieldsValue[field.stateName]}\n                          />\n                        </div>\n                        <div className=\"map\">\n                          {Current !== null && x1 && x2 && (\n                            <MapContainer\n                              center={[x1, x2]}\n                              zoom={10}\n                              scrollWheelZoom={true}\n                              style={{\n                                width: \"100%\",\n                                height: \"450px\",\n                                zIndex: \"1\",\n                              }}\n\n                              //   onClick={this.handlemapclick}\n                            >\n                              <TileLayer\n                                {...{\n                                  url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                                  width: 500,\n                                }}\n                              />\n\n                              <GetCoordinates\n                                change={handleMapClick}\n                                fields={fieldsValue}\n                                setFields={setFieldValue}\n                                map={map}\n                                setMap={setMap}\n                              />\n                              <>\n                                {map && (\n                                  <Marker position={map} draggable={true}>\n                                    <Popup position={map}>\n                                      Current location:{\" \"}\n                                      <pre>{JSON.stringify(map, null, 2)}</pre>\n                                    </Popup>\n                                  </Marker>\n                                )}\n                              </>\n                              <LocationMarker />\n                            </MapContainer>\n                          )}\n                        </div>\n                      </div>\n                    ) : (\n                      <DynamicInput\n                        field={field}\n                        onChangeHandler={onChangeHandler}\n                        defaultValue={fieldsValue[field.stateName]}\n                        separator={\n                          field.stateName === \"childrennumber\" ||\n                          field.stateName === \"loverlevelfac\" ||\n                          field.stateName === \"populationnumber\"\n                        }\n                      />\n                    )}\n                    <br />\n                    {JSON.parse(localStorage.getItem(\"country\"))[\n                      \"poptarget\"\n                    ] === \"General population\" &&\n                      field.stateName === \"populationnumber\" &&\n                      selectedLevel && (\n                        <p>\n                          range: {separator(selectedLevel?.minpop)} -{\" \"}\n                          {separator(selectedLevel?.maxpop)}\n                        </p>\n                      )}\n                    {JSON.parse(\n                      localStorage.getItem(\"country\"))[\"poptarget\"] ===\n                        \"Under-1 Population\"\n                     &&\n                      field.stateName === \"childrennumber\" &&\n                      selectedLevel && (\n                        <p>\n                          range: {separator(selectedLevel?.minpop)} -{\" \"}\n                          {separator(selectedLevel?.maxpop)}\n                        </p>\n                      )}\n                  </div>\n                  {hasRequiredError && (\n                    <div className=\"row\">\n                      <div className=\"col-sm-4\"></div>\n                      <div className=\"col-sm-8\">\n                        <p className=\"my-1 ml-2 text-danger\">\n                          {fieldErrors[field.stateName]}\n                        </p>\n                      </div>\n                    </div>\n                  )}\n                  <hr className=\"my-3\" />\n                </Form.Group>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3 mb-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-2\">\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              stepsLength={Object.keys(facilityFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Facility;\n","export const separator = (x) => {\n  if (x === undefined || x === null || x===\"\") {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n","import { separator } from \"../helpers/separator\";\n\nexport const hasValidationError = (value, validation) => {\n  if (typeof value !== \"string\" && typeof value !== \"number\") return false;\n\n  const _value = value.replaceAll(\" \", \"\");\n  if (validation === undefined || !_value) return false;\n  if (validation.min !== -1 && validation.min > _value) {\n    return `value must greater than ${separator(validation.min)}`;\n  }\n  if (validation.max !== -1 && validation.max < _value) {\n    return `value must less than ${separator(validation.max)}`;\n  }\n console.log(_value.split(\".\"));\n  if (\n    validation.float &&\n    _value.includes(\".\") &&\n    (_value).split(\".\")[1].length > validation.floating\n  ) {\n   \n    return `value must has ${validation.floating} decimals`;\n  }\n  // if (\n  //   validation.digits !== -1 &&\n  //   _value\n  //     .toString()\n  //     .replaceAll(\",\", \"\")\n  //     .replaceAll(\".\", \"\")\n  //     .replaceAll(\":\", \"\").length >\n  //     validation.digits + (validation.floating > 0 ? validation.floating : 0)\n  // ) {\n  //   return `value must be ${validation.digits} digits`;\n  // }\n  return false;\n};\n\nexport const timeValidationError = (value) => {\n  const isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(\n    value\n  );\n\n  if (isValid) {\n    return false;\n  }\n  return \"value must be in (hh:mm) format!\";\n};\n","import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\nimport axios from \"axios\";\n\nconst API_URL = \"https://inventory.runflare.run/facilities/\";\n\nclass FacilitiesService {\n  getFacilities(id, deleted) {\n    const params = {};\n    if (id) {\n      params.id = id;\n    }\n    if (deleted) {\n      params.deleted = deleted;\n    }\n    return ApiManager.get(API_URL, {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacilities(id) {\n    const params = { id };\n    return ApiManager.get(API_URL + \"parent\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  // deleteFacility(id) {\n  //   return ApiManager.delete(API_URL, {\n  //     headers: { Authorization: authHeader() },\n  //     data: { id },\n  //   });\n  // }\n  getFacilityFields(params) {\n    return ApiManager.get(API_URL + \"facility-field\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacilityFields1(params) {\n    return ApiManager.get(API_URL + \"print\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postFacility(payload) {\n    return ApiManager.post(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putFacility(payload) {\n    return ApiManager.put(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  importFacilities(payload) {\n    return ApiManager.post(\n      \"https://inventory.runflare.run/facilities/\" + \"import\",\n      payload,\n      {\n        headers: { Authorization: authHeader() },\n      }\n    );\n  }\n  deletefacilityparam() {\n    return ApiManager.get(API_URL + \"delete\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteFacility(payload) {\n    return ApiManager.post(API_URL + \"delete\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new FacilitiesService();\n"],"names":["props","field","onChangeHandler","defaultValue","separator","type","onChange","e","target","value","className","multiple","stateName","as","disabled","active","id","selected","params","map","param","enabled","enable","name","describe","validation","onKeyPress","persist","float","indexOf","key","preventDefault","min","undefined","max","step","Math","pow","floating","toFixed","maxLength","digits","onBlur","formatted","thousandSeparator","version","x","y","width","height","viewBox","fill","d","activeStep","handleBack","handleNext","stepsLength","isNextDisabled","Box","sx","display","flexDirection","pt","Button","color","onClick","mr","Trans","flex","relatedFields","is_suitable","haveimmservice","other_service","parentFacilityField","LocationMarker","useState","position","setPosition","useMapEvents","click","locate","invalidateSize","locationfound","latlng","flyTo","getZoom","L","iconRetinaUrl","require","iconUrl","shadowUrl","GetCoordinates","useMap","useEffect","info","positon","options","onAdd","textContent","on","console","log","window","navigator","geolocation","getCurrentPosition","handleMapClick","handleClick","addControl","setActiveStep","fieldsValue","setFieldValue","fieldErrors","setFieldErrors","levels","setLevels","useParams","history","useHistory","pid","URLSearchParams","location","search","get","setMap","Current","JSON","parse","localStorage","getItem","split","x1","x2","isFacilityDefaultLoading","useQuery","defaultData","code","updated_at","Date","toISOString","FacilitiesService","res","result","data","refetchOnMount","onSuccess","isLoading","related","fieldTopicInResult","topic","push","firstTopic","Object","keys","level","order","paramid","minpop","maxpop","unshift","required","perFieldsValue","completerstaffname","user","parentName","facility","facilityFields","isFacilitiesFields","Spinner","facilityNameField","levelField","hasRequiredErrors","_fieldErrors","currentStepFields","values","forEach","currentFieldStateName","isRelatedFieldOkReq","fields","length","prevActiveStep","validationErr","selectedLevel","includes","timeValidationError","hasValidationError","cloneFieldsValue","parseInt","onSaveHandler","_fieldsValue","_value","replaceAll","str","lat","lng","onSubmit","style","overflow","Stepper","index","Step","StepLabel","StepOperations","Form","justifyContent","alignItems","lineHeight","textAlign","DynamicInput","isRelatedFieldOk","hasRequiredError","MapContainer","center","zoom","scrollWheelZoom","zIndex","TileLayer","url","change","setFields","Marker","draggable","Popup","stringify","n","sep","reverse","text","join","rx","toString","replace","test","API_URL","deleted","ApiManager","headers","Authorization","authHeader","payload"],"sourceRoot":""}