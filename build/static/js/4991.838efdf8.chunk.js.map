{"version":3,"file":"static/js/4991.838efdf8.chunk.js","mappings":"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","sources":["app/components/DynamicInput.js","app/shared/LeftArrowIcon.js","app/shared/RightArrowIcon.js","app/components/StepOperations.js","app/helpers/separator.js","app/helpers/validation-checker.js","app/constants/item.js","app/helpers/related-tem.js","app/helpers/related-tem-req.js","app/items/Item.js"],"sourcesContent":["import { Form } from \"react-bootstrap\";\nimport { separator as thousandSeparator } from \"../helpers/separator\";\n\nconst numericKeys = \"0123456789.:\";\nconst num1 = \"0123456789\";\nconst DynamicInput = (props) => {\n  const { field, onChangeHandler, defaultValue, separator } = props;\n  if (field.type === \"select\") {\n    console.log(defaultValue)\n    return (\n      <Form.Control\n        onChange={(e) => onChangeHandler(e.target.value, field)}\n        // defaultValue={defaultValue}\n        className=\"form-control\"\n        multiple={field.stateName === \"other_services\" ? true : false}\n        as=\"select\"\n        disabled={field.active ? !field.active : field.disabled}\n        id={`field-${field.id}`}\n      >\n        <option value=\"\"  >\n          Please select\n        </option>\n        {field.params.map((param) => (\n        \n          <option\n            disabled={\n              param.enabled\n                ? !param.enabled\n                : param.active\n                ? !param.active\n                : !param.enable\n            }\n            value={param.id}\n            selected={parseInt(defaultValue) === param.id ? true : false}\n          >\n            {param.name || param.describe}\n          </option>\n        ))}\n      </Form.Control>\n    );\n  }\n\n  if (field.type === \"bool\") {\n    return (\n      <>\n        <Form.Control\n          onChange={(e) => onChangeHandler(e.target.value === \"true\", field)}\n          // defaultValue={defaultValue}\n          className=\"form-control\"\n          as=\"select\"\n          disabled={field.active ? !field.active : field.disabled}\n          id={`field-${field.id}`}\n        >\n          <option\n            selected={(defaultValue === null || defaultValue === undefined) ?true : false}\n            disabled\n          >\n            Please select\n          </option>\n          <option\n            selected={\n              (defaultValue !== null && defaultValue !== undefined)\n                ? defaultValue\n                : false\n            }\n            value={true}\n          >\n            Yes\n          </option>\n          <option\n            selected={\n              (defaultValue !== null && defaultValue !== undefined)\n                ? !defaultValue\n                : false\n            }\n            value={false}\n          >\n            No\n          </option>\n        </Form.Control>\n      </>\n    );\n  }\n\n  const validation = field.validation?.[0];\n  return (\n    <Form.Control\n      onKeyPress={(e) => {\n        e.persist();\n        if (field.type === \"number\") {\n          if (validation && validation?.float) {\n            if (numericKeys.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          } else if (validation && validation?.float === false) {\n            if (num1.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          }\n        }\n        onChangeHandler(e.target.value, field);\n      }}\n      onChange={(e) => onChangeHandler(e.target.value, field)}\n      value={defaultValue}\n      className=\"form-control\"\n      id={`field-${field.id}`}\n      disabled={field.active ? !field.active : field.disabled}\n      min={validation && validation?.min !== -1 ? validation.min : undefined}\n      max={validation && validation?.max !== -1 ? validation.max : undefined}\n      step={\n        validation && validation?.float\n          ? Math.pow(0.1, validation.floating).toFixed(validation.floating)\n          : undefined\n      }\n      maxLength={\n        validation && validation?.digits !== -1 ? validation.digits : undefined\n      }\n      onBlur={(e) => {\n        e.persist();\n        if (separator) {\n          const formatted = thousandSeparator(e.target.value);\n          onChangeHandler(formatted, field);\n        }\n      }}\n    />\n  );\n};\n\nexport default DynamicInput;\n","function LeftArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 400 400\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M382.688,182.686H59.116l77.209-77.214c6.764-6.76,6.764-17.726,0-24.485c-6.764-6.764-17.73-6.764-24.484,0L5.073,187.757\n\t\tc-6.764,6.76-6.764,17.727,0,24.485l106.768,106.775c3.381,3.383,7.812,5.072,12.242,5.072c4.43,0,8.861-1.689,12.242-5.072\n\t\tc6.764-6.76,6.764-17.726,0-24.484l-77.209-77.218h323.572c9.562,0,17.316-7.753,17.316-17.315\n\t\tC400.004,190.438,392.251,182.686,382.688,182.686z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default LeftArrowIcon;\n","function RightArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 1024 1024\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M754.752 480H160a32 32 0 100 64h594.752L521.344 777.344a32 32 0 0045.312 45.312l288-288a32 32 0 000-45.312l-288-288a32 32 0 10-45.312 45.312L754.752 480z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default RightArrowIcon;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { Trans } from \"react-i18next\";\nimport LeftArrowIcon from \"../shared/LeftArrowIcon\";\nimport RightArrowIcon from \"../shared/RightArrowIcon\";\n\nfunction StepOperations(props) {\n  const { activeStep, handleBack, handleNext, stepsLength, isNextDisabled } =\n    props;\n  return (\n    <div className=\"row mt-2\">\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          disabled={activeStep === 0}\n          onClick={handleBack}\n          sx={{ mr: 1 }}\n          type=\"button\"\n        >\n          <LeftArrowIcon sx={{ mr: 2 }} />\n          <Trans>Back</Trans>\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        {activeStep === stepsLength ? (\n          <button className=\"btn btn-primary \">Save</button>\n        ) : (\n          <Button\n            disabled={isNextDisabled}\n            onClick={handleNext}\n            type=\"button\"\n            sx={{ mr: 1 }}\n          >\n            <Trans>Next</Trans>\n            <RightArrowIcon />\n          </Button>\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default StepOperations;\n","export const separator = (x) => {\n  if (x === undefined || x === null || x===\"\") {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n","import { separator } from \"../helpers/separator\";\n\nexport const hasValidationError = (value, validation) => {\n  if (typeof value !== \"string\" && typeof value !== \"number\") return false;\n\n  const _value = value.replaceAll(\" \", \"\");\n  if (validation === undefined || !_value) return false;\n  if (validation.min !== -1 && validation.min > _value) {\n    return `value must greater than ${separator(validation.min)}`;\n  }\n  if (validation.max !== -1 && validation.max < _value) {\n    return `value must less than ${separator(validation.max)}`;\n  }\n console.log(_value.split(\".\"));\n  if (\n    validation.float &&\n    _value.includes(\".\") &&\n    (_value).split(\".\")[1].length > validation.floating\n  ) {\n   \n    return `value must has ${validation.floating} decimals`;\n  }\n  // if (\n  //   validation.digits !== -1 &&\n  //   _value\n  //     .toString()\n  //     .replaceAll(\",\", \"\")\n  //     .replaceAll(\".\", \"\")\n  //     .replaceAll(\":\", \"\").length >\n  //     validation.digits + (validation.floating > 0 ? validation.floating : 0)\n  // ) {\n  //   return `value must be ${validation.digits} digits`;\n  // }\n  return false;\n};\n\nexport const timeValidationError = (value) => {\n  const isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(\n    value\n  );\n\n  if (isValid) {\n    return false;\n  }\n  return \"value must be in (hh:mm) format!\";\n};\n","export const fromPQSFields = [\n  {\n    id: \"PQSPISCode\",\n    name: \"PQS/PIS Code:\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISCode\",\n    params: [],\n  },\n  {\n    id: \"PQSPISType\",\n    name: \"PQS/PIS-Type:\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISType\",\n    params: [],\n  },\n  {\n    id: \"PQSPISManufacturer\",\n    name: \"PQS/PIS-Manufacturer\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISManufacturer\",\n    params: [],\n  },\n\n  {\n    id: \"PQSPISRefrigerantGas\",\n    name: \"PQS/PIS-Refrigerant gas\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISRefrigerantGas\",\n    params: [],\n  },\n];\n","export const relatedFields = {\n  IsItFunctioning: [\"ReasonsForNotFunctioning\", \"NotInUseSince\"],\n};\n\nexport const isRelatedFieldOk = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      console.log(fieldsValue[key]);\n      if (fieldsValue[key]!==undefined) {return !fieldsValue[key];}\n      else{\n        return false;\n      }\n    }\n  }\n  return true;\n};\n","export const relatedFields = {\n  IsItFunctioning: [\"ReasonsForNotFunctioning\", \"NotInUseSince\"],\n};\n\nexport const isRelatedFieldOkReq = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      if (fieldsValue[key] !== undefined) {return fieldsValue[key];}\n      else{\n        return false;\n      }\n    }\n  }\n  return false;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Spinner from \"../shared/Spinner\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { Form } from \"react-bootstrap\";\nimport ItemService from \"../services/item.service\";\nimport DynamicInput from \"../components/DynamicInput\";\nimport { fromPQSFields } from \"../constants/item\";\nimport { hasValidationError } from \"../helpers/validation-checker\";\nimport { Trans } from \"react-i18next\";\nimport Select from \"react-select\";\nimport StepOperations from \"../components/StepOperations\";\nimport { isRelatedFieldOk, relatedFields } from \"../helpers/related-tem\";\nimport { isRelatedFieldOkReq } from \"../helpers/related-tem-req\";\n\n\nconst facilityField = {\n  id: \"facility\",\n  type: \"text\",\n  active: false,\n  disabled: true,\n  state: \"facility\",\n  name: \"\",\n};\n\nfunction Item() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [fieldsValue, setFieldValue] = useState({});\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [selectedItemClass, setSelectedItemClass] = useState(null);\n  const [selectedItemType, setSelectedItemType] = useState(null);\n  const [isFromPQS, setIsFromPQS] = useState(false);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const params = new URLSearchParams(history.location.search);\n  const parent = params.get(\"parent\");\n\n  const { isLoading: isItemDefaultLoading } = useQuery(\n    [\"item-default-value\", id],\n    async () => {\n      const defaultData = {\n        code: \"Unique code generated by IGA\",\n      };\n\n      if (id === \"new\") return defaultData;\n\n      const res = await ItemService.getItems(id);\n      return { ...res.data[0]};\n    },\n    {\n      onSuccess(data) {\n        setFieldValue((preValues) => ({\n          ...data,\n          ...preValues,\n        }));\n      },\n    }\n  );\n\n  const { data: itemClassesAndTypes, isLoading: isItemClassesAndTypesLoading } =\n    useQuery(\n      [\"item-classes-and-types\"],\n      async () => {\n        const res = await ItemService.getItemClassesAndTypes(parent);\n        setFieldValue((preValues) => ({\n          ...preValues,\n          facility: res.data.facility,\n        }));\n        return res.data.data.filter((item) => item.item_type.length > 0);\n      },\n      {\n        refetchOnMount: true,\n        onSuccess(data) {\n          setSelectedItemClass(data[0]);\n          setSelectedItemType(data[0]?.item_type?.[0]);\n        },\n      }\n    );\n\n  const { data: pqsData, isLoading: isPqsLoading } = useQuery(\n    [\"pqs\", selectedItemType?.id],\n    async () => {\n      const res = await ItemService.getPQS(selectedItemType?.id);\n      return res?.data?.map((item) => ({\n        label: item.pqsnumber ?? item.pqscode,\n        value: item,\n      }));\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  const {\n    data: itemFields,\n    isLoading: isItemsFieldsLoading,\n    isIdle: isItemsFieldsIdle,\n    refetch: refetchItemFields,\n  } = useQuery(\n    [\n      \"item-fields\",\n      selectedItemClass?.item_class.id,\n      selectedItemType?.id,\n      parent,\n    ],\n    async () => {\n      console.log(selectedItemType);\n      const res = await ItemService.getItemFields(\n        selectedItemClass.item_class.id,\n        selectedItemType.id,\n        parent\n      );\n      const result = {};\n      if (res.data.fields) {\n        for (const field of res.data.fields) {\n          const fieldTopicInResult = result[field.field.topic] ?? [];\n          fieldTopicInResult.push(field.field);\n          result[field.field.topic] = fieldTopicInResult;\n        }\n        const firstTopic = Object.keys(result)[0] ?? \"Type\";\n        if (result[firstTopic] === undefined) {\n          result[firstTopic] = [];\n        }\n        //static fields\n        result[firstTopic].unshift({\n          id: \"code\",\n          name: \"Item code:\",\n          topic: firstTopic,\n          type: \"text\",\n          active: false,\n          disabled: true,\n          required: false,\n          state: \"code\",\n          params: [],\n        });\n      }\n      return result;\n    },\n    {\n      enabled: !!selectedItemType,\n    }\n  );\n\n  useEffect(() => {\n    if (selectedItemType) refetchItemFields();\n  }, [selectedItemType]);\n\n  const hasRequiredErrors = () => {\n    const _fieldErrors = { ...fieldErrors };\n    const currentStepFields = Object.values(itemFields)[activeStep];\n    currentStepFields.forEach((field) => {\n      console.log(field)\n      if (\n        field.required &&\n        !fieldsValue[field.state] &&\n        !isRelatedFieldOkReq(field.state, fieldsValue)\n      ) {\n        if (field.type === \"bool\") {\n          if ( fieldsValue[field.state] === undefined) {\n            _fieldErrors[field.state] = \"this field is required!\";\n          }\n        } else {\n          console.log(\"salaaam\");\n          _fieldErrors[field.state] = \"this field is required!\";\n        }\n      }\n    });\n     for (const key in relatedFields) {\n       const fields = relatedFields[key];\n        console.log(fieldsValue[key]);\n         if (fieldsValue[key] === true) {\n           fields.forEach((field) => {\n             delete _fieldErrors[field];\n           });\n         }\n       \n     }\n     console.log(_fieldErrors);\n    setFieldErrors(_fieldErrors);\n    return Object.keys(_fieldErrors).length > 0;\n  };\n\n  const handleNext = () => {\n    if (!hasRequiredErrors()) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const onChangeHandler = async (value, field) => {\n    const validationErr = hasValidationError(value, field.validation?.[0]);\n    const cloneFieldsValue = { ...fieldsValue };\n    cloneFieldsValue[field.state] = value;\n    setFieldValue(cloneFieldsValue);\n    //check validation and required\n    const _fieldErrors = { ...fieldErrors };\n    if (validationErr) {\n      _fieldErrors[field.state] = validationErr;\n    } else {\n      delete _fieldErrors[field.state];\n    }\n     for (const key in relatedFields) {\n       const fields = relatedFields[key];\n       console.log(fieldsValue[key]);\n         fields.forEach((field) => {\n           delete _fieldErrors[field];\n         });\n     }\n     console.log(_fieldErrors);\n    setFieldErrors(_fieldErrors);\n  };\n\n  const onSaveHandler = async (e) => {\n    e.preventDefault();\n    if (hasRequiredErrors()) {\n      return;\n    }\n    const _fieldsValue = { ...fieldsValue };\n     for (const key in relatedFields) {\n       const fields = relatedFields[key];\n       if (fieldsValue[key] === false) {\n         fields.forEach((field) => {\n           delete _fieldsValue[field];\n         });\n       }\n     }\n    if (!isFromPQS) {\n      for (const key in fieldsValue) {\n        if (fromPQSFields.find((pqsField) => pqsField.state === key)) {\n          delete _fieldsValue[key];\n        }\n      }\n    }\n    _fieldsValue[\"item_class\"] = selectedItemClass.item_class.id;\n    _fieldsValue[\"item_type\"] = selectedItemType.id;\n    _fieldsValue[\"facility\"] = _fieldsValue[\"facility\"].id;\n    console.log(_fieldsValue[\"facility\"].id);\n    // remove empty items\n    for (const key in _fieldsValue) {\n      if (_fieldsValue[key] === \"\") {\n        delete _fieldsValue[key];\n      }\n    }\n    const res = await (id === \"new\"\n      ? ItemService.postItem(_fieldsValue)\n      : ItemService.putItem(_fieldsValue));\n    history.push(`/items/list`);\n    setFieldValue(_fieldsValue);\n  };\n\n  const selectItemClassHandler = async (e) => {\n    console.log(e.target.value)\n    console.log(itemClassesAndTypes);\n    setSelectedItemClass(itemClassesAndTypes[e.target.value]);\n    setSelectedItemType(itemClassesAndTypes[e.target.value].item_type[0]);\n    \n  };\n\n  const selectItemTypeHandler = (e) => {\n    setSelectedItemType(selectedItemClass.item_type[e.target.value]);\n  };\n\n  const onIsFromPQSChange = () => {\n    setIsFromPQS((preChecked) => !preChecked);\n  };\n\n  const selectPQSHandler = () => {\n    const value = pqsData.find(\n      (pqs) => pqs.label === fieldsValue[\"PQSPISCode\"]\n    )?.value;\n    if (value === undefined) {\n      //TODO: show a correct massage to user\n      return;\n    }\n\n    const cloneFieldsValue = { ...fieldsValue };\n    console.log(pqsData);\n\n    const selectedPqs = pqsData.find((pqs) => pqs?.value?.id === value?.id).value;\n    console.log(selectedPqs);\n    if(selectedPqs.ptype==3){\n      cloneFieldsValue[\"PQSPISManufacturer\"] = selectedPqs.make;\n      cloneFieldsValue[\"PQSPISRefrigerantGas\"] = selectedPqs.refrigerant;\n      cloneFieldsValue[\"PQSPISType\"] = selectedPqs.model;\n      cloneFieldsValue[\"PQSPISTemperatureWorkingZone\"] =\n        selectedPqs.refrigerant;\n      cloneFieldsValue[\"NetVaccineStorageCapacity\"] =\n        selectedPqs.refrigeratorcapacity;\n      cloneFieldsValue[\"FreezerNetCapacity\"] = selectedPqs.freezercapacity;\n      cloneFieldsValue[\"Height\"] = selectedPqs.h;\n      cloneFieldsValue[\"Width\"] = selectedPqs.w;\n      cloneFieldsValue[\"Length\"] = selectedPqs.l;\n\n\n      \n\n    }\n    else{\n      cloneFieldsValue[\"PQSPISType\"] = selectedPqs.type;\n      cloneFieldsValue[\"PQSPISManufacturer\"] = selectedPqs.manufacturer;\n      cloneFieldsValue[\"PQSPISRefrigerantGas\"] =\"--\";\n      cloneFieldsValue[\"PQSPISTemperatureWorkingZone\"] = \"--\"\n      cloneFieldsValue[\"NetVaccineStorageCapacity\"] =\n        selectedPqs.vaccinenetstoragecapacity;\n      cloneFieldsValue[\"CoolantPackNominalCapacity\"] =\n        selectedPqs.coolantpacknominalcapacity;\n      cloneFieldsValue[\"NumberOfCoolantPacksRequired\"] =\n        selectedPqs.numbercoolantpacks;\n      cloneFieldsValue[\"ExternalSize\"] = selectedPqs.externalvolume;\n\n\n    }\n\n    setFieldValue(cloneFieldsValue);\n  };\n\n  if (\n    isItemDefaultLoading ||\n    isItemClassesAndTypesLoading ||\n    isItemsFieldsLoading ||\n    isItemsFieldsIdle ||\n    isPqsLoading\n  ) {\n    return <Spinner />;\n  }\n\n  return (\n    <form onSubmit={onSaveHandler}>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Item information</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row pb-4\" style={{ overflow: \"auto\" }}>\n              <Stepper activeStep={activeStep}>\n                {Object.keys(itemFields).map((topic) => {\n                  return (\n                    <Step key={topic}>\n                      <StepLabel style={{ width: \"max-content\" }}>\n                        {topic}\n                      </StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n            </div>\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              stepsLength={Object.keys(itemFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Facility Name:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={facilityField}\n                    defaultValue={fieldsValue[\"facility\"]?.name}\n                  />\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-left control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Trans>Item class</Trans>\n                </label>\n                <div className=\"col-sm-8\">\n                  <Form.Control\n                    onChange={selectItemClassHandler}\n                    className=\"form-select\"\n                    as=\"select\"\n                    value={itemClassesAndTypes?.findIndex(\n                      (i) =>\n                        i?.item_class.id === selectedItemClass?.item_class.id\n                    )}\n                    disabled={activeStep !== 0 || id !== \"new\"}\n                  >\n                    {itemClassesAndTypes.map((itemClass, index) => (\n                      <option value={index}>\n                        {itemClass.item_class.title}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Trans>Item Category</Trans>\n                </label>\n                <div className=\"col-sm-8\">\n                  <Form.Control\n                    onChange={selectItemTypeHandler}\n                    className=\"form-select\"\n                    as=\"select\"\n                    value={selectedItemClass?.item_type.findIndex(\n                      (i) => i?.id === selectedItemType?.id\n                    )}\n                    disabled={activeStep !== 0 || id !== \"new\"}\n                  >\n                    {selectedItemClass?.item_type.map((itemType, index) => (\n                      <option value={index}>{itemType.title}</option>\n                    ))}\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {activeStep === 0 && (\n              <>\n                {selectedItemType.havepqs && (\n                  <>\n                    <div className=\"row\">\n                      <Form.Group className=\"row mb-0\">\n                        <label\n                          className={`col-sm-4 text-right`}\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"flex-end\",\n                            alignItems: \"center\",\n                            lineHeight: \"1.4\",\n                            textAlign: \"right\",\n                          }}\n                        >\n                          <Trans>Is this item from PQS/PIS list?</Trans>\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            name=\"is-from-pqs\"\n                            type=\"checkbox\"\n                            onChange={onIsFromPQSChange}\n                            checked={isFromPQS}\n                          />\n                        </div>\n                        <hr className=\"my-3\" />\n                      </Form.Group>\n                    </div>\n                    {isFromPQS &&\n                      fromPQSFields.map((pqsField) => (\n                        <div className=\"row\" key={pqsField.name}>\n                          <Form.Group className=\"row mb-0\">\n                            <label\n                              className={`col-sm-4 text-right ${\n                                pqsField.required ? \"control-label\" : \"\"\n                              }`}\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                                alignItems: \"center\",\n                                lineHeight: \"1.4\",\n                                textAlign: \"right\",\n                              }}\n                            >\n                              {pqsField.name}\n                            </label>\n\n                            <div\n                              className={`${\n                                pqsField.state === \"PQSPISCode\"\n                                  ? \"col-sm-7\"\n                                  : \"col-sm-8\"\n                              }`}\n                            >\n                              {pqsData && pqsField.state === \"PQSPISCode\" ? (\n                                <Select\n                                  options={pqsData}\n                                  onChange={(e) => {\n                                    onChangeHandler(e.label, pqsField);\n                                  }}\n                                  value={{\n                                    label: fieldsValue[\"PQSPISCode\"],\n                                    value: pqsData.find(\n                                      (pqs) =>\n                                        pqs.label === fieldsValue[\"PQSPISCode\"]\n                                    )?.value,\n                                  }}\n                                  onBlur={(e) => {\n                                    const value = e.target.value;\n                                    if (value.length > 0) {\n                                      onChangeHandler(value, pqsField);\n                                    }\n                                  }}\n                                />\n                              ) : (\n                                // <DynamicInput\n                                //   field={{\n                                //     ...pqsField,\n                                //     type: \"select\",\n                                //     params: pqsData,\n                                //   }}\n                                //   onChangeHandler={(value, field) => {\n                                //     onChangeHandler(value, field);\n                                //     selectPQSHandler(value);\n                                //   }}\n                                //   defaultValue={fieldsValue[pqsField.state]}\n                                // />\n                                <DynamicInput\n                                  field={pqsField}\n                                  onChangeHandler={onChangeHandler}\n                                  defaultValue={fieldsValue[pqsField.state]}\n                                />\n                              )}\n                            </div>\n                            {pqsField.state === \"PQSPISCode\" && (\n                              <div className=\"col-sm-1\">\n                                <button\n                                  className=\"btn btn-primary w-100 h-100\"\n                                  onClick={selectPQSHandler}\n                                  type=\"button\"\n                                >\n                                  <Trans>Load</Trans>\n                                </button>\n                              </div>\n                            )}\n                            <hr className=\"my-3\" />\n                          </Form.Group>\n                        </div>\n                      ))}\n                  </>\n                )}\n              </>\n            )}\n            {Object.values(itemFields)[activeStep]?.map((field) => {\n               if (!isRelatedFieldOk(field.state, fieldsValue)) {\n                 return null;\n               }\n              const hasRequiredError = !!fieldErrors[field.state];\n              return (\n                <div className=\"row\" key={field.name}>\n                  <Form.Group className=\"row mb-0\">\n                    <label\n                      className={`col-sm-4 text-right ${\n                        field.required ? \"control-label\" : \"\"\n                      }`}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                        alignItems: \"center\",\n                        lineHeight: \"1.4\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {field.name}\n                    </label>\n                    <div className=\"col-sm-8\">\n                      <DynamicInput\n                        field={field}\n                        onChangeHandler={onChangeHandler}\n                        defaultValue={fieldsValue[field.state]}\n                      />\n                    </div>\n                    {hasRequiredError && (\n                      <div className=\"row\">\n                        <div className=\"col-sm-4\"></div>\n                        <div className=\"col-sm-8\">\n                          <p className=\"my-1 ml-2 text-danger\">\n                            {fieldErrors[field.state]}\n                          </p>\n                        </div>\n                      </div>\n                    )}\n                    <hr className=\"my-3\" />\n                  </Form.Group>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              stepsLength={Object.keys(itemFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Item;\n"],"names":["props","field","onChangeHandler","defaultValue","separator","type","console","log","onChange","e","target","value","className","multiple","stateName","as","disabled","active","id","params","map","param","enabled","enable","selected","parseInt","name","describe","undefined","validation","onKeyPress","persist","float","indexOf","key","preventDefault","min","max","step","Math","pow","floating","toFixed","maxLength","digits","onBlur","formatted","thousandSeparator","version","x","y","width","height","viewBox","fill","d","activeStep","handleBack","handleNext","stepsLength","isNextDisabled","Box","sx","display","flexDirection","pt","Button","color","onClick","mr","Trans","flex","n","sep","reverse","text","split","join","rx","toString","replace","hasValidationError","_value","replaceAll","includes","length","timeValidationError","test","fromPQSFields","topic","required","state","relatedFields","IsItFunctioning","facilityField","useState","setActiveStep","fieldsValue","setFieldValue","fieldErrors","setFieldErrors","selectedItemClass","setSelectedItemClass","selectedItemType","setSelectedItemType","isFromPQS","setIsFromPQS","useParams","history","useHistory","parent","URLSearchParams","location","search","get","isItemDefaultLoading","useQuery","defaultData","code","ItemService","res","data","onSuccess","preValues","isLoading","facility","filter","item","item_type","refetchOnMount","itemClassesAndTypes","isItemClassesAndTypesLoading","label","pqsnumber","pqscode","pqsData","isPqsLoading","item_class","result","fields","fieldTopicInResult","push","firstTopic","Object","keys","unshift","itemFields","isItemsFieldsLoading","isItemsFieldsIdle","isIdle","refetchItemFields","refetch","useEffect","hasRequiredErrors","_fieldErrors","currentStepFields","values","forEach","currentFieldStateName","isRelatedFieldOkReq","prevActiveStep","validationErr","cloneFieldsValue","onSaveHandler","_fieldsValue","find","pqsField","selectItemClassHandler","selectPQSHandler","pqs","selectedPqs","ptype","make","refrigerant","model","refrigeratorcapacity","freezercapacity","h","w","l","manufacturer","vaccinenetstoragecapacity","coolantpacknominalcapacity","numbercoolantpacks","externalvolume","Spinner","onSubmit","style","overflow","Stepper","Step","StepLabel","StepOperations","Form","justifyContent","alignItems","lineHeight","textAlign","DynamicInput","findIndex","i","itemClass","index","title","itemType","havepqs","preChecked","checked","options","isRelatedFieldOk","hasRequiredError"],"sourceRoot":""}