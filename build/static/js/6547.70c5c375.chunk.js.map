{
  "version": 3,
  "file": "static/js/6547.70c5c375.chunk.js",
  "mappings": "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",
  "sources": [
    "app/message/messageList.js",
    "app/services/hr.service.js",
    "app/shared/EditIcon.js",
    "app/shared/SharedTable.js",
    "../node_modules/react-i18next/dist/es/Translation.js"
  ],
  "sourcesContent": [
    "import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useEffect, useState } from \"react\";\nimport EditIcon from \"../shared/EditIcon\";\nimport SharedTable from \"../shared/SharedTable\";\nimport toast from \"react-hot-toast\";\nimport HRService from \"../services/hr.service\";\nimport Spinner from \"../shared/Spinner\";\nimport MessageService from \"../services/message.service\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport \"../styles/table.scss\";\nimport \"../styles/inputs.scss\";\nimport \"../styles/hr.scss\";\nimport \"../settings/itemClass.scss\";\nimport \"../settings/itemType.scss\";\nimport \"./message.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Translation,Trans } from \"react-i18next\";\n\nfunction MessageList() {\n  const [list, setList] = useState([]);\n  const [editFormData, setEditFormData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedFacility, setSelectedFacility] = useState(null);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [sentOrReceived, setSentOrReceived] = useState(\"r\"); // r means received and s means sent\n  const [readedMessage, setReadedMessage] = useState([]);\n  function getList(type) {\n    if (type === \"r\") {\n      MessageService.getReceivedMessages()\n        .then((res) => {\n          setList(res.data);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          toast.error(<Trans>There is a problem loading data</Trans>);\n\n          setIsLoading(false);\n        });\n    } else {\n      MessageService.getSentMessages()\n        .then((res) => {\n          setList(res.data);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          toast.error(<Trans>There is a problem loading data</Trans>);\n\n          setIsLoading(false);\n        });\n    }\n  }\n\n  useEffect(() => {\n    getList(sentOrReceived);\n  }, []);\n\n  function handleEdit(i) {\n    const formData = list.find((item) => item.id === i.id);\n    setEditFormData(formData);\n    setIsEditModalOpen(true);\n  }\n  function handleReadmessages(){\n    MessageService.readMessage(readedMessage)\n    .then((res) => {\n      toast.success(<Trans>Messages readed succesfully</Trans>\n      );\n      getList(sentOrReceived);\n    }\n    )\n    .catch((err) => {\n      toast.error(<Trans>Problem in reading messages</Trans>)\n    })\n\n\n  }\n  function handleChangeEdit(e) {\n    const { name, value } = e.target;\n    setEditFormData({ ...editFormData, [name]: value });\n  }\n  function handleChangeRead(i){\n    const x = readedMessage;\n    if (x.includes(i)){\n      const index = x.indexOf(i);\n      if (index > -1) {\n        x.splice(index, 1);\n      }\n    }\n    else{\n      x.push(i);\n    }\n    setReadedMessage(x);\n  }\n  function handleSubmitEdit(e) {\n    e.preventDefault();\n    const isValid = Object.keys(editFormData).every((key) => {\n      return editFormData[key] !== \"\";\n    });\n    if (!isValid) {\n            toast.error(<Trans>Please fill all the fields</Trans>);\n\n    } else {\n      const { subject, body, id, sender, reciever } = editFormData;\n      const data = {\n        subject,\n        body,\n        id,\n      };\n      data.sender = sender.id;\n      data.reciever = reciever.id;\n      MessageService.putMessage(data)\n        .then((res) => {\n          toast.success(\"Message sent successfully\");\n          getList(sentOrReceived);\n          setEditFormData({});\n          setSelected([]);\n          setIsEditModalOpen(false);\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending message\");\n        });\n    }\n  }\n\n  return (\n    <div className=\"item-class-page hr-page message-page\">\n      <h3 className=\"page-title mb-3\">\n        <Trans>Messages list</Trans>\n      </h3>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <div className=\"row mb-4 mt-4\">\n            <div className=\"col-md-3 d-flex align-items-center\">\n              <h4>\n                <Trans>Received or sent messages</Trans>\n              </h4>\n            </div>\n            <div className=\"col-md-9 d-flex\">\n              <select\n                name=\"receivedOrSent\"\n                onChange={(e) => {\n                  setSentOrReceived(e.target.value);\n                  setIsLoading(true);\n                  getList(e.target.value);\n                }}\n                value={sentOrReceived}\n              >\n                <Translation>\n                  {(t, { i18n }) => <option value=\"s\">{t(\"Sent\")}</option>}\n                </Translation>\n                <Translation>\n                  {(t, { i18n }) => <option value=\"r\">{t(\"Received\")}</option>}\n                </Translation>\n              </select>\n            </div>\n          </div>\n          {list && list.length > 0 && (\n            <div>\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>\n                      {sentOrReceived === \"s\" ? (\n                        <Trans>Receiver</Trans>\n                      ) : (\n                        <Trans>Sender</Trans>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Subject</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Body</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Date</Trans>\n                    </TableCell>\n                    {sentOrReceived === \"r\" && (\n                      <TableCell>\n                        <Trans>Read</Trans>\n                      </TableCell>\n                    )}\n                    <TableCell>\n                      <Trans>Edit</Trans>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {list &&\n                    list.map((item, index) => {\n                      let checked= item.read;\n                      if(!checked){\n                        checked=undefined;\n                      }\n\n                      return (\n                        <>\n                          <TableRow>\n                            <TableCell>{index + 1}</TableCell>\n                            <TableCell>\n                              {sentOrReceived === \"s\"\n                                ? item.reciever.name\n                                : item.sender.name}\n                            </TableCell>\n                            <TableCell>{item.subject}</TableCell>\n                            <TableCell>{item.body}</TableCell>\n                            <TableCell>\n                              {new Date(item.created_at).toLocaleDateString(\n                                \"en\"\n                              )}\n                            </TableCell>\n                            {sentOrReceived === \"r\" && (\n                              <TableCell>\n                                <div class=\"form-check form-check-primary mt-3\">\n                                  <label className=\"form-check-label\">\n                                    <input\n                                      disabled={item.read}\n                                      checked={checked}\n                                      type=\"checkbox\"\n                                      onChange={(e) => {\n                                        // e.preventDefault();\n                                        handleChangeRead(item.id);\n                                      }}\n                                    ></input>\n                                    <i className=\"input-helper mt-3\"></i>\n                                  </label>\n                                </div>\n                              </TableCell>\n                            )}\n                            <TableCell>\n                              <button\n                                className=\"edit-btn\"\n                                onClick={(event) => handleEdit(item)}\n                              >\n                                <EditIcon />\n                              </button>\n                            </TableCell>\n                          </TableRow>\n                        </>\n                      );\n                              })}\n                </TableBody>\n              </SharedTable>\n            </div>\n          )}\n          <Modal\n            show={isEditModalOpen}\n            onHide={() => setIsEditModalOpen(false)}\n          >\n            <form onSubmit={handleSubmitEdit}>\n              <h3 className=\"mb-1\">\n                <Trans>Edit Message</Trans>\n              </h3>\n              <div className=\"d-flex flex-column\">\n                <label>\n                  <Trans>Subject</Trans>\n                </label>\n                <input\n                  onChange={handleChangeEdit}\n                  type=\"text\"\n                  name=\"subject\"\n                  value={editFormData.subject}\n                  required\n                />\n              </div>\n              <div className=\"d-flex flex-column\">\n                <label>\n                  <Trans>Message body</Trans>\n                </label>\n                <textarea\n                  onChange={handleChangeEdit}\n                  value={editFormData.body}\n                  name=\"body\"\n                  required\n                />\n              </div>\n              <button type=\"submit\" className=\"w-100 save-btn mt-4\">\n                <Trans>Send</Trans>\n              </button>\n            </form>\n          </Modal>\n        </>\n      )}\n      <Link to=\"/message/new\">\n        <button className=\"save-btn mt-4\">\n          <Trans>Send message</Trans>\n        </button>\n      </Link>\n      <button onClick={handleReadmessages} className=\"save-btn mt-4 ml-5\">\n        <Trans>Read selected messages</Trans>\n      </button>\n    </div>\n  );\n}\n\nexport default MessageList;\n",
    "import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"https://jorapi.invgap.org/hr/\";\n\nclass HRService {\n  getFacilities() {\n    return axios.get(API_URL + \"hr-helper/\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getHRList(id) {\n    return axios.get(API_URL + \"?id=\" + id, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putHR(data) {\n    return axios.put(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postHR(data) {\n    return axios.post(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteHR(data) {\n    return axios.delete(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new HRService();\n",
    "/**\n * retun an svg\n *   EditIcon\n */\nfunction EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        width=\"20\"\n        height=\"20\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n/**\n * @param  {DOMElement} {children}\n * shared table use in settings and all tables\n */\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n",
    "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ns\", \"children\"];\nimport { useTranslation } from './useTranslation';\nexport function Translation(props) {\n  var ns = props.ns,\n      children = props.children,\n      options = _objectWithoutProperties(props, _excluded);\n\n  var _useTranslation = useTranslation(ns, options),\n      _useTranslation2 = _slicedToArray(_useTranslation, 3),\n      t = _useTranslation2[0],\n      i18n = _useTranslation2[1],\n      ready = _useTranslation2[2];\n\n  return children(t, {\n    i18n: i18n,\n    lng: i18n.language\n  }, ready);\n}"
  ],
  "names": [
    "useState",
    "list",
    "setList",
    "editFormData",
    "setEditFormData",
    "isLoading",
    "setIsLoading",
    "isEditModalOpen",
    "setIsEditModalOpen",
    "setSelected",
    "sentOrReceived",
    "setSentOrReceived",
    "readedMessage",
    "setReadedMessage",
    "getList",
    "type",
    "MessageService",
    "then",
    "res",
    "data",
    "catch",
    "err",
    "toast",
    "handleChangeEdit",
    "e",
    "target",
    "name",
    "value",
    "useEffect",
    "className",
    "onChange",
    "t",
    "i18n",
    "length",
    "map",
    "item",
    "index",
    "checked",
    "read",
    "undefined",
    "reciever",
    "sender",
    "subject",
    "body",
    "Date",
    "created_at",
    "toLocaleDateString",
    "class",
    "disabled",
    "i",
    "x",
    "includes",
    "indexOf",
    "splice",
    "push",
    "handleChangeRead",
    "id",
    "onClick",
    "event",
    "formData",
    "find",
    "handleEdit",
    "show",
    "onHide",
    "onSubmit",
    "preventDefault",
    "Object",
    "keys",
    "every",
    "key",
    "required",
    "to",
    "API_URL",
    "HRService",
    "axios",
    "headers",
    "Authorization",
    "authHeader",
    "version",
    "xmlns",
    "viewBox",
    "width",
    "height",
    "xmlnsXlink",
    "d",
    "children",
    "_excluded",
    "Translation",
    "props",
    "ns",
    "options",
    "_objectWithoutProperties",
    "_useTranslation",
    "useTranslation",
    "_useTranslation2",
    "_slicedToArray",
    "ready",
    "lng",
    "language"
  ],
  "sourceRoot": ""
}
