{"version":3,"file":"static/js/1751.407ca606.chunk.js","mappings":"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","sources":["app/reports/FacilitySegmentationReport.js","app/services/report.service.js","app/shared/SharedTable.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport { Form } from \"react-bootstrap\";\nimport ReportService from \"../services/report.service\";\nimport \"./form.scss\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\n\nconst defaultValues = {\n  name: \"\",\n  code: \"\",\n  level: \"\",\n  type: \"\",\n  power: \"\",\n  func: \"\",\n  gfrom: \"\",\n  gto: \"\",\n  underfrom: \"\",\n  underto: \"\",\n};\n\nfunction FacilitySegmentationReport() {\n  const [filterValues, setFilterValues] = useState(defaultValues);\n\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n\n  const { data: facSegHelper, isLoading: isFacSegHelperLoading } = useQuery(\n    [\"fac-seg-helper\"],\n    async () => {\n      const res = await ReportService.getFacSeg({ help: true });\n      return res.data;\n    }\n  );\n\n  const {\n    data: reports,\n    isLoading: isReportsLoading,\n    refetch: fetchReports,\n  } = useQuery(\n    [\"fac-seg-report\"],\n    async () => {\n      const params = {\n        help: false,\n      };\n      for (const key in filterValues) {\n        const filter = filterValues[key];\n        if (filter.length > 0) {\n          params[key] = filter;\n        }\n      }\n      const res = await ReportService.getFacSeg(params);\n      return res.data;\n    },\n    {\n      refetchOnMount: false,\n      enabled: false,\n    }\n  );\n    const printFilterValues = () => {\n    let filter = \"\";\n    for (const key in filterValues) {\n      const value = filterValues[key];\n      if (value.length > 0) {\n        if(key=== 'power'){\n          filter += `${key}=${facSegHelper.power[value].name}&`;\n        }else{\n          filter += `${key}=${value}&`;\n        }\n      }\n    }\n    return filter;\n  };\n  if (isFacSegHelperLoading || isReportsLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Facility Segmentation</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                fetchReports();\n              }}\n            >\n              <h4>\n                <Trans>Filter</Trans>\n              </h4>\n              <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Facility name:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          name: value,\n                        }));\n                      }}\n                      value={filterValues.name}\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Code:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          code: value,\n                        }));\n                      }}\n                      value={filterValues.code}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Level:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          level: value,\n                        }));\n                      }}\n                      value={filterValues.level}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {facSegHelper?.level.map((lev) => (\n                        <option key={lev.id} value={lev.id}>\n                          {`${lev.id} - ${lev.name}`}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Type:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          type: value,\n                        }));\n                      }}\n                      value={filterValues.type}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {facSegHelper?.type.map((ty) => (\n                        <option key={ty.id} value={ty.id}>\n                          {ty.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Power source:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          power: value,\n                        }));\n                      }}\n                      value={filterValues.power}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {facSegHelper?.power.map((pow) => (\n                        <option key={pow.id} value={pow.id}>\n                          {pow.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Functioning Status:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          func: value,\n                        }));\n                      }}\n                      value={filterValues.func}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      <option value={true}>Working</option>\n                      <option value={false}>Not working</option>\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-2\">\n                      <Trans>General population:</Trans>\n                    </label>\n                    <label className=\"label col-sm-1\">\n                      <Trans>From:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          gfrom: value,\n                        }));\n                      }}\n                      value={filterValues.gfrom}\n                    />\n                    <label className=\"label col-sm-1\">\n                      <Trans>To:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          gto: value,\n                        }));\n                      }}\n                      value={filterValues.gto}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-2\">\n                      <Trans>Under-1 Population:</Trans>\n                    </label>\n                    <label className=\"label col-sm-1\">\n                      <Trans>From:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          underfrom: value,\n                        }));\n                      }}\n                      value={filterValues.underfrom}\n                    />\n                    <label className=\"label col-sm-1\">\n                      <Trans>To:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-4\"\n                      type=\"number\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          underto: value,\n                        }));\n                      }}\n                      value={filterValues.underto}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-1\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Reports\n                  </button>\n                </div>\n                <div className=\"col-sm-1\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    onClick={() => setFilterValues(defaultValues)}\n                  >\n                    Clear\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <h4>\n              <Trans>\n                Report Number: Facility Segmentation ({country?.country})\n              </Trans>\n            </h4>\n            <h6>\n              Filters : {\"\"} {printFilterValues()}\n            </h6>\n\n            <h6>Date: {new Date().toISOString().split(\"T\")[0]}</h6>\n            <div className=\"mt-3 table-container\">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Facility name</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Facility parent</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>Level</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Code</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>Type</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>Power</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-1\">\n                      <Trans>owner</Trans>\n                    </TableCell>\n                    <TableCell className=\"col-sm-2\">\n                      <Trans>Functioning status</Trans>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell className=\"col-sm-2\">\n                          {report.name ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-2\">\n                          {report.parent ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.level ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-2\">\n                          {report.code ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.type ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.power ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-1\">\n                          {report.owner ?? \"-\"}\n                        </TableCell>\n                        <TableCell className=\"col-sm-2\">\n                          {report.func ? \"working\" : \"not working\"}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FacilitySegmentationReport;\n","import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"http://5.182.47.38:8001/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n","import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["defaultValues","name","code","level","type","power","func","gfrom","gto","underfrom","underto","useState","filterValues","setFilterValues","country","JSON","parse","localStorage","getItem","useQuery","ReportService","help","res","data","facSegHelper","isFacSegHelperLoading","isLoading","key","params","filter","length","refetchOnMount","enabled","reports","isReportsLoading","fetchReports","refetch","className","onSubmit","e","preventDefault","onChange","value","target","preValues","as","selected","disabled","map","lev","id","ty","pow","onClick","printFilterValues","Date","toISOString","split","report","index","parent","owner","API_URL","ApiManager","headers","Authorization","authHeader","degree","payload","children"],"sourceRoot":""}