{
  "version": 3,
  "file": "static/js/4004.d09cb731.chunk.js",
  "mappings": "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",
  "sources": [
    "app/services/items.service.js",
    "app/services/related.service.js",
    "app/settings/FieldsOfItemT.js",
    "app/shared/CloseIcon.js",
    "app/shared/EditIcon.js",
    "app/shared/SharedTable.js"
  ],
  "sourcesContent": [
    "import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://127.0.0.1:8000/items/\";\n\nclass ItemService {\n  getItemClasses() {\n    return axios.get(API_URL + \"itemClass\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getActiveItemClasses() {\n    return axios.get(API_URL + \"class-helper\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemClass(data) {\n    // change item class\n    return axios.put(API_URL + \"itemClass\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemTypes() {\n    return axios.get(API_URL + \"itemType\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postItemType(data) {\n    // add item category\n    return axios.post(API_URL + \"itemType\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemTypes(data) {\n    // change item category\n    return axios.put(API_URL + \"itemType\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemClassesOfAnItemType(itemTypeId) {\n    return axios.get(API_URL + \"itembyclass?id=\" + itemTypeId, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getActiveItemClassesWithFields(itemClassId) {\n    const params = {};\n    if (itemClassId) {\n      params[\"id\"] = itemClassId;\n    }\n    return axios.get(API_URL + \"itembyclass\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemTinLevels(level) {\n    const params = {};\n    if (level) {\n      params[\"level\"] = level;\n    }\n    return axios.get(API_URL + \"itemTinLevels\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  putItemTypeInClass(payload) {\n    return axios.put(API_URL + \"itemTinLevels\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getManufacturers(id) {\n    return axios.get(API_URL + \"manufacturer?id=\" + id, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postManufacturer(data) {\n    return axios.post(API_URL + \"manufacturer\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putManufacturer(data) {\n    return axios.put(API_URL + \"manufacturer\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ItemService();\n",
    "import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://127.0.0.1:8000/related/\";\n\nclass RelatedService {\n  getParameters() {\n    return axios.get(API_URL + \"params\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getParameterDescriptions(id, type) {\n    return axios.get(API_URL + \"params/?id=\" + id + \"&type=\" + type, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putParameters(data) {\n    return axios.put(API_URL + \"params/\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemFields() {\n    return axios.get(API_URL + \"item-fields\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemFields(data) {\n    // change item type\n    return axios.put(API_URL + \"item-fields\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getRelatedItemType(id) {\n    const params = {};\n    if (id) {\n      params[\"id\"] = id;\n    }\n    return axios.get(API_URL + \"related-item-type\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  putRelatedItemType(payload) {\n    return axios.put(API_URL + \"related-item-type\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getRelatedFacility() {\n    return axios.get(API_URL + \"related-facility/\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putRelatedFacility(payload) {\n    return axios.put(API_URL + \"related-facility/\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new RelatedService();\n",
    "import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useMemo, useState } from \"react\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { Form } from \"react-bootstrap\";\nimport ItemsService from \"../services/items.service\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../shared/Spinner\";\nimport EditIcon from \"../shared/EditIcon\";\nimport CloseIcon from \"../shared/CloseIcon\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport StepButton from \"@mui/material/StepButton\";\nimport \"../styles/table.scss\";\nimport RelatedService from \"../services/related.service\";\nimport \"../styles/inputs.scss\";\n\nfunction FieldsOfItemT() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [selectedItemClassAndItemTypes, setSelectedItemClassAndItemTypes] =\n    useState();\n  const [selectedItemType, setSelectedItemType] = useState();\n  const [fieldsValue, setFieldsValue] = useState([]);\n  const [editedField, setEditedField] = useState(null);\n  const [newFieldName, setNewFieldName] = useState(\"\");\n\n  const { data: itemClassesWithItemTypes, isLoading: isItemClassesLoading } =\n    useQuery(\n      [\"active-item-classes-with-item-type\"],\n      async () => {\n        const res = await ItemsService.getActiveItemClassesWithFields();\n        return res.data;\n      },\n      {\n        onSuccess(data) {\n          setSelectedItemClassAndItemTypes(data[0]);\n          setSelectedItemType(data[0].item_type[0]);\n        },\n      }\n    );\n\n  const {\n    data: relatedItemFields,\n    isLoading: isRelatedItemFieldsLoading,\n    refetch: refetchRelatedItemFields,\n  } = useQuery(\n    [\"related-item-fields\"],\n    async () => {\n      const res = await RelatedService.getItemFields();\n      return res.data;\n    },\n    {\n      staleTime: Infinity,\n    }\n  );\n\n  const { data: relatedItemType } = useQuery(\n    [\"related-item-type\", selectedItemType?.id],\n    async () => {\n      const res = await RelatedService.getRelatedItemType(selectedItemType.id);\n      return res.data;\n    },\n    {\n      enabled: !isItemClassesLoading,\n      staleTime: 5 * 60 * 1000, // cache data about 5 minutes\n    }\n  );\n\n  const fieldsCategories = useMemo(() => {\n    const result = {};\n    if (relatedItemFields) {\n      for (const field of relatedItemFields) {\n        const fieldTopicInResult = result[field.topic] ?? [];\n        fieldTopicInResult.push(field);\n        result[field.topic] = fieldTopicInResult;\n      }\n    }\n    return result;\n  }, [relatedItemFields]);\n\n  const selectItemClassHandler = (e) => {\n    setSelectedItemClassAndItemTypes(itemClassesWithItemTypes[e.target.value]);\n  };\n\n  const selectItemTypeHandler = (e) => {\n    setSelectedItemType(\n      selectedItemClassAndItemTypes.item_type[e.target.value]\n    );\n  };\n\n  const onFieldChangeHandler = (e, currentField, kind) => {\n    const checked = e.target.checked;\n    const fieldValuesClone = [...fieldsValue];\n    const fieldIndex = fieldsValue.findIndex(\n      (field) =>\n        field.itemtypeid === selectedItemType.id &&\n        field.fieldid === currentField.id\n    );\n    if (fieldIndex === -1) {\n      //for the first time\n      fieldValuesClone.push({\n        itemtypeid: selectedItemType.id,\n        fieldid: currentField.id,\n        required: kind === \"required\" ? checked : false,\n        enable: kind === \"enable\" ? checked : true,\n      });\n    } else {\n      const currentFieldValue = fieldsValue[fieldIndex];\n      fieldValuesClone[fieldIndex] = {\n        ...currentFieldValue,\n        required: kind === \"required\" ? checked : currentFieldValue.required,\n        enable: kind === \"enable\" ? checked : currentFieldValue.enable,\n      };\n    }\n    setFieldsValue(fieldValuesClone);\n  };\n\n  const handleSubmitEdit = async () => {\n    const res = await RelatedService.putItemFields({\n      ...editedField,\n      name: newFieldName,\n    });\n    refetchRelatedItemFields();\n    setEditedField(null);\n    setNewFieldName(\"\");\n  };\n\n  const onSaveHandler = async () => {\n    const res = await RelatedService.putRelatedItemType(fieldsValue);\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">Fields of \"item category\"</h3>\n      {isItemClassesLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\"mt-3\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-12\">Item class</label>\n                    <div className=\"col-sm-12\">\n                      <Form.Control\n                        onChange={selectItemClassHandler}\n                        className=\"form-select\"\n                        as=\"select\"\n                      >\n                        {itemClassesWithItemTypes.map((itemClass, index) => (\n                          <option value={index}>\n                            {itemClass.item_class.title}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </div>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-12\">item category</label>\n                    <div className=\"col-sm-12\">\n                      <Form.Control\n                        onChange={selectItemTypeHandler}\n                        className=\"form-select\"\n                        disabled={selectedItemClassAndItemTypes === null}\n                        as=\"select\"\n                      >\n                        {selectedItemClassAndItemTypes?.item_type.map(\n                          (itemType, index) => (\n                            <option value={index}>{itemType.title}</option>\n                          )\n                        )}\n                      </Form.Control>\n                    </div>\n                  </Form.Group>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {isRelatedItemFieldsLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <div className=\"mt-3\">\n            <div className=\"card\">\n              <div className=\"card-body pb-3\">\n                <div className=\"row pb-4\" style={{ overflow: \"auto\" }}>\n                  <Stepper activeStep={activeStep}>\n                    {Object.keys(fieldsCategories).map((topic, index) => {\n                      return (\n                        <Step key={topic} onClick={() => handleStep(index)}>\n                          <StepButton\n                            color=\"inherit\"\n                            style={{ width: \"max-content\" }}\n                          >\n                            {topic}\n                          </StepButton>\n                        </Step>\n                      );\n                    })}\n                  </Stepper>\n                </div>\n                <div className=\"row mt-2\">\n                  <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                    <Button\n                      color=\"inherit\"\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      sx={{ mr: 1 }}\n                    >\n                      Back\n                    </Button>\n                    <Box sx={{ flex: \"1 1 auto\" }} />\n                    <Button\n                      disabled={\n                        activeStep === Object.keys(fieldsCategories).length - 1\n                      }\n                      onClick={handleNext}\n                      sx={{ mr: 1 }}\n                    >\n                      Next\n                    </Button>\n                    <button\n                      className=\"btn btn-primary \"\n                      onClick={onSaveHandler}\n                    >\n                      Save\n                    </button>\n                  </Box>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-3\">\n            <div className=\"card\">\n              <div className=\"card-body p-3\">\n                <div className=\"row\">\n                  <h4> {Object.keys(fieldsCategories)[activeStep]}</h4>\n                  <div className=\"mt-5 table-container\">\n                    <SharedTable>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell className=\"col-sm-4\">Field name</TableCell>\n                          <TableCell className=\"col-sm-2\">Enable</TableCell>\n                          <TableCell className=\"col-sm-4\">\n                            Is this required field for item category?\n                          </TableCell>\n                          <TableCell className=\"col-sm-2\">Edit</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {Object.values(fieldsCategories)[activeStep]?.map(\n                          (field) => {\n                            const fieldValue =\n                              fieldsValue.find(\n                                (fieldValue) =>\n                                  fieldValue.fieldid === field.id &&\n                                  fieldValue.itemtypeid === selectedItemType.id\n                              ) ??\n                              relatedItemType?.find(\n                                (rItem) =>\n                                  field.id === rItem.field.id &&\n                                  selectedItemType.id === rItem.itemtype.id\n                              );\n                            const isEnable = fieldValue?.enable ?? !!fieldValue;\n                            const isRequired = fieldValue?.required;\n                            return (\n                              <TableRow key={field.id}>\n                                <TableCell className=\"col-sm-4\">\n                                  {editedField?.id === field.id ? (\n                                    <input\n                                      name=\"field-name\"\n                                      type=\"text\"\n                                      onChange={(e) =>\n                                        setNewFieldName(e.target.value)\n                                      }\n                                      defaultValue={field.name}\n                                    />\n                                  ) : (\n                                    field.name\n                                  )}\n                                </TableCell>\n                                <TableCell className=\"col-sm-2\">\n                                  <input\n                                    type=\"checkbox\"\n                                    disabled={!relatedItemType}\n                                    checked={isEnable}\n                                    onChange={(e) =>\n                                      onFieldChangeHandler(e, field, \"enable\")\n                                    }\n                                  />\n                                </TableCell>\n                                <TableCell className=\"col-sm-4\">\n                                  <input\n                                    type=\"checkbox\"\n                                    disabled={!isEnable}\n                                    checked={isRequired}\n                                    onChange={(e) =>\n                                      onFieldChangeHandler(e, field, \"required\")\n                                    }\n                                  />\n                                </TableCell>\n\n                                {editedField?.id === field.id ? (\n                                  <TableCell className=\"col-sm-2\">\n                                    <button\n                                      className=\"save-btn\"\n                                      onClick={handleSubmitEdit}\n                                    >\n                                      Save\n                                    </button>\n                                    <button\n                                      className=\"close-btn\"\n                                      onClick={() => {\n                                        setEditedField(null);\n                                        setNewFieldName(\"\");\n                                      }}\n                                    >\n                                      <CloseIcon />\n                                    </button>\n                                  </TableCell>\n                                ) : (\n                                  <TableCell className=\"col-sm-2\">\n                                    <button\n                                      className=\"edit-btn\"\n                                      onClick={() => {\n                                        setEditedField(field);\n                                        setNewFieldName(field.name);\n                                      }}\n                                    >\n                                      <EditIcon />\n                                    </button>\n                                  </TableCell>\n                                )}\n                              </TableRow>\n                            );\n                          }\n                        )}\n                      </TableBody>\n                    </SharedTable>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FieldsOfItemT;\n",
    "function CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n",
    "function EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <g>\n          <g>\n            <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n          </g>\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"
  ],
  "names": [
    "API_URL",
    "ItemService",
    "axios",
    "headers",
    "Authorization",
    "authHeader",
    "data",
    "itemTypeId",
    "itemClassId",
    "params",
    "level",
    "payload",
    "id",
    "RelatedService",
    "type",
    "useState",
    "activeStep",
    "setActiveStep",
    "selectedItemClassAndItemTypes",
    "setSelectedItemClassAndItemTypes",
    "selectedItemType",
    "setSelectedItemType",
    "fieldsValue",
    "setFieldsValue",
    "editedField",
    "setEditedField",
    "newFieldName",
    "setNewFieldName",
    "useQuery",
    "ItemsService",
    "res",
    "onSuccess",
    "item_type",
    "itemClassesWithItemTypes",
    "isItemClassesLoading",
    "isLoading",
    "staleTime",
    "Infinity",
    "relatedItemFields",
    "isRelatedItemFieldsLoading",
    "refetchRelatedItemFields",
    "refetch",
    "relatedItemType",
    "enabled",
    "fieldsCategories",
    "useMemo",
    "result",
    "field",
    "fieldTopicInResult",
    "topic",
    "push",
    "onFieldChangeHandler",
    "e",
    "currentField",
    "kind",
    "checked",
    "target",
    "fieldValuesClone",
    "fieldIndex",
    "findIndex",
    "itemtypeid",
    "fieldid",
    "required",
    "enable",
    "currentFieldValue",
    "handleSubmitEdit",
    "name",
    "onSaveHandler",
    "className",
    "onChange",
    "value",
    "as",
    "map",
    "itemClass",
    "index",
    "item_class",
    "title",
    "disabled",
    "itemType",
    "style",
    "overflow",
    "Object",
    "keys",
    "onClick",
    "color",
    "width",
    "sx",
    "display",
    "flexDirection",
    "pt",
    "prevActiveStep",
    "mr",
    "flex",
    "length",
    "values",
    "fieldValue",
    "find",
    "rItem",
    "itemtype",
    "isEnable",
    "isRequired",
    "defaultValue",
    "version",
    "xmlns",
    "xmlnsXlink",
    "x",
    "y",
    "height",
    "viewBox",
    "enableBackground",
    "xmlSpace",
    "fillRule",
    "clipRule",
    "d",
    "children"
  ],
  "sourceRoot": ""
}
