{"version":3,"file":"static/js/752.a2b45d65.chunk.js","mappings":"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","sources":["app/settings/Manufacturer.js","app/shared/CloseIcon.js","app/shared/EditIcon.js","app/shared/SharedTable.js"],"sourcesContent":["import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport CloseIcon from \"../shared/CloseIcon\";\nimport EditIcon from \"../shared/EditIcon\";\nimport SharedTable from \"../shared/SharedTable\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../shared/Spinner\";\nimport \"../styles/table.scss\";\nimport \"../styles/inputs.scss\";\nimport \"../styles/hr.scss\";\nimport \"./itemClass.scss\";\nimport \"./itemType.scss\";\nimport { Trans } from \"react-i18next\";\n\nimport ItemsService from \"../services/items.service\";\n\nfunction Manufacturer() {\n  const [manufacturers, setManufacturers] = useState([]);\n  const [editFormData, setEditFormData] = useState({});\n  const [addRowFormData, setAddRowFormData] = useState({\n    describe: \"\",\n    order: null,\n    active: false,\n  });\n  const [editableRowId, setEditableRowId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [itemClasses, setItemClasses] = useState([]);\n  const [selectedItemClass, setSelectedItemClass] = useState(null);\n\n  function getItemClasses() {\n    ItemsService.getActiveItemClasses()\n      .then((res) => {\n        const data = res.data;\n        setItemClasses(data);\n        setSelectedItemClass(data[0].id);\n        setIsLoading(false);\n        getManufacturers(data[0].id);\n      })\n      .catch((err) => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  function getManufacturers(id) {\n    ItemsService.getManufacturers(id)\n      .then((res) => {\n        setManufacturers(res.data[0].manufacturer);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getItemClasses();\n  }, []);\n\n  useEffect(() => {\n    if (itemClasses) {\n      setAddRowFormData({\n        ...addRowFormData,\n        itemclass: itemClasses[0]?.id,\n      });\n    }\n  }, [itemClasses]);\n\n  function handleEdit(i) {\n    const formData = manufacturers.find((item) => item.id === i.id);\n    setEditFormData(formData);\n    setEditableRowId(i.id);\n  }\n\n  function handleChangeEdit(e) {\n    const { name, value } = e.target;\n\n    setEditFormData({ ...editFormData, [name]: value });\n  }\n\n  function handleChangeAdd(e) {\n    const { name, value } = e.target;\n\n    setAddRowFormData({ ...addRowFormData, [name]: value });\n  }\n\n  function handleSubmitEdit(e) {\n    e.preventDefault();\n    const isValid = Object.keys(editFormData).every((key) => {\n      return editFormData[key] !== \"\" && editFormData[key] !== null;\n    });\n    if (!isValid) {\n      toast.error(\"Please fill all the fields\");\n    } else {\n      setIsLoading(true);\n      let formToPut = editFormData;\n      ItemsService.putManufacturer(formToPut)\n        .then((res) => {\n          getManufacturers(selectedItemClass);\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending data\");\n          setIsLoading(false);\n        });\n      setEditableRowId(null);\n      setEditFormData({});\n    }\n  }\n\n  function handleSubmitNew(e) {\n    e.preventDefault();\n    const isValid = Object.keys(addRowFormData).every((key) => {\n      return addRowFormData[key] !== \"\" && addRowFormData[key] !== null;\n    });\n    if (!isValid) {\n      toast.error(\"Please fill all the fields\");\n    } else {\n      setIsLoading(true);\n      let formToPost = (({ describe, active, order, itemclass }) => ({\n        describe,\n        active,\n        order,\n        itemclass,\n      }))(addRowFormData);\n      ItemsService.postManufacturer(formToPost)\n        .then((res) => {\n          getManufacturers(selectedItemClass);\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending data\");\n          setIsLoading(false);\n        });\n      setAddRowFormData({\n        ...addRowFormData,\n        describe: \"\",\n        order: null,\n        active: false,\n      });\n    }\n  }\n\n  function findItemClassById(id) {\n    return itemClasses.find((item) => item.id === id);\n  }\n\n  return (\n    <div className=\"item-class-page\">\n      <h3 className=\"page-title mb-3\">\n        <Trans>Manufacturers by item class</Trans>\n      </h3>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <div className=\"row mb-4 mt-4\">\n            <div className=\"col-md-2 d-flex align-items-center\">\n              <h4>\n                <Trans>Item class</Trans>\n              </h4>\n            </div>\n            <div className=\"col-md-10 d-flex\">\n              <select\n                name=\"itemclass\"\n                onChange={(e) => {\n                  setSelectedItemClass(e.target.value);\n                  getManufacturers(e.target.value);\n                }}\n                value={selectedItemClass}\n              >\n                {itemClasses.map((itemClass, index) => (\n                  <option\n                    key={itemClass.id}\n                    value={itemClass.id}\n                    //   selected={}\n                  >\n                    {itemClass.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div>\n            <SharedTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Trans>Description</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Item class</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Show order</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Enable</Trans>\n                  </TableCell>\n                  <TableCell>\n                    <Trans>Edit</Trans>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {manufacturers &&\n                  manufacturers.map((item, index) => (\n                    <>\n                      {editableRowId !== item.id ? (\n                        <TableRow>\n                          <TableCell>{item.describe}</TableCell>\n                          <TableCell>\n                            {findItemClassById(item.itemclass)?.title}\n                          </TableCell>\n                          <TableCell>{item.order}</TableCell>\n                          <TableCell>\n                            <input\n                              type=\"checkbox\"\n                              checked={item.active}\n                              disabled\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <button\n                              className=\"edit-btn\"\n                              onClick={(event) => handleEdit(item)}\n                            >\n                              <EditIcon />\n                            </button>\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        <TableRow>\n                          <TableCell>\n                            <input\n                              name=\"describe\"\n                              type=\"text\"\n                              onChange={handleChangeEdit}\n                              value={editFormData?.describe}\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <select\n                              name=\"itemclass\"\n                              onChange={handleChangeEdit}\n                              value={editFormData?.itemclass}\n                            >\n                              {itemClasses.map((itemClass, index) => (\n                                <option\n                                  key={itemClass.id}\n                                  value={itemClass.id}\n                                  selected={item.itemclass === itemClass.id}\n                                >\n                                  {itemClass.title}\n                                </option>\n                              ))}\n                            </select>\n                          </TableCell>\n                          <TableCell>\n                            <input\n                              name=\"order\"\n                              type=\"number\"\n                              onChange={handleChangeEdit}\n                              value={editFormData?.order}\n                              required\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <input\n                              name=\"active\"\n                              type=\"checkbox\"\n                              onChange={() =>\n                                setEditFormData({\n                                  ...editFormData,\n                                  active: !editFormData.active,\n                                })\n                              }\n                              checked={editFormData?.active}\n                            ></input>\n                          </TableCell>\n                          <TableCell>\n                            <button\n                              className=\"save-btn\"\n                              onClick={handleSubmitEdit}\n                            >\n                              <Trans>Save</Trans>\n                            </button>\n                            <button\n                              className=\"close-btn\"\n                              onClick={() => setEditableRowId(null)}\n                            >\n                              <CloseIcon />\n                            </button>\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </>\n                  ))}\n              </TableBody>\n            </SharedTable>\n          </div>\n          <div className=\"add-row mt-4 mb-4\">\n            <form onSubmit={handleSubmitNew}>\n              <h3 className=\"mb-3 mt-3\">\n                <Trans>Insert manufacturer</Trans>\n              </h3>\n              <div className=\"row\">\n                <div className=\"col-md-3 flex-column d-flex\">\n                  <label className=\"mb-2\">\n                    <Trans>Name</Trans>\n                  </label>\n                  <input\n                    name=\"describe\"\n                    type=\"text\"\n                    onChange={handleChangeAdd}\n                    value={addRowFormData?.describe}\n                    required\n                  ></input>\n                </div>\n                <div className=\"col-md-3 flex-column d-flex\">\n                  <label className=\"mb-1\">\n                    <Trans>Item class</Trans>\n                  </label>\n                  <select\n                    name=\"itemclass\"\n                    onChange={handleChangeAdd}\n                    value={addRowFormData?.itemclass}\n                  >\n                    {itemClasses.map((item, index) => (\n                      <option\n                        key={item.id}\n                        value={item.id}\n                        selected={index === 0}\n                      >\n                        {item.title}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"col-md-3 flex-column d-flex\">\n                  <label className=\"mb-1\">\n                    <Trans>Show order</Trans>\n                  </label>\n                  <input\n                    name=\"order\"\n                    type=\"number\"\n                    onChange={handleChangeAdd}\n                    value={addRowFormData?.order}\n                    required\n                  ></input>\n                </div>\n                <div className=\"col-md-3 d-flex justify-content-center align-items-center\">\n                  <label>\n                    <Trans>Active</Trans>\n                  </label>\n                  <input\n                    name=\"active\"\n                    className=\"mr-4\"\n                    type=\"checkbox\"\n                    onChange={() =>\n                      setAddRowFormData({\n                        ...addRowFormData,\n                        active: !addRowFormData.active,\n                      })\n                    }\n                    checked={addRowFormData?.active}\n                  ></input>\n                  <button className=\"save-btn\" type=\"submit\">\n                    <Trans>Save</Trans>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Manufacturer;\n","function CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n","function EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        width=\"20\"\n        height=\"20\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n","import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["useState","manufacturers","setManufacturers","editFormData","setEditFormData","describe","order","active","addRowFormData","setAddRowFormData","editableRowId","setEditableRowId","isLoading","setIsLoading","itemClasses","setItemClasses","selectedItemClass","setSelectedItemClass","getManufacturers","id","ItemsService","then","res","data","manufacturer","catch","err","toast","handleChangeEdit","e","target","name","value","handleChangeAdd","handleSubmitEdit","preventDefault","Object","keys","every","key","formToPut","useEffect","itemclass","className","onChange","map","itemClass","index","title","item","find","type","checked","disabled","onClick","event","i","formData","handleEdit","selected","required","onSubmit","formToPost","version","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","fillRule","clipRule","d","children"],"sourceRoot":""}