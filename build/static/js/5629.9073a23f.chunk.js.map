{
  "version": 3,
  "file": "static/js/5629.9073a23f.chunk.js",
  "mappings": "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",
  "sources": [
    "app/helpers/separator.js",
    "app/helpers/seperator.js",
    "app/reports/GapItemReport.js",
    "app/services/report.service.js",
    "app/shared/SharedTable.js",
    "../node_modules/react-i18next/dist/es/Translation.js"
  ],
  "sourcesContent": [
    "\nexport const separator = (x) => {\n  if (x === undefined || x === null || x===\"\") {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n",
    "import i18n from \"../../i18n\";\n\nexport const getLanguage = () => {\n    return i18n.language;\n    }\n\nexport const seperator = () => {\n    if(getLanguage() === \"ar\" || getLanguage() === \"en\"){\n        return \".\";\n    }\n    else{\n        return \",\";\n    }\n}\n",
    "import React, { Fragment, useState } from \"react\";\nimport { Translation,Trans} from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport { Form } from \"react-bootstrap\";\nimport ReportService from \"../services/report.service\";\nimport \"./form.scss\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\nimport { toast } from \"react-hot-toast\";\n\nimport API_URL from \"../services/APIURL\";\nimport { separator } from \"../helpers/separator\";\nimport  {seperator} from \"../helpers/seperator\";\nconst defaultValues = {\n  name: \"\",\n  code: \"\",\n  level: \"-1\",\n  type: \"-1\",\n  power: \"-1\",\n  degree: \"1\",\n  option: \"1\",\n  year_from: \"-1\",\n  year_to: \"-1\",\n  calculate_for: \"-1\",\n};\n\nconst degrees = [\n  { id: \"1\", name: \"2-8 C\" },\n  { id: \"2\", name: \"-20 C\" },\n  { id: \"3\", name: \"-70 C\" },\n  { id: \"4\", name: \"+25 C\" },\n  { id: \"5\", name: \"Dry store\" },\n  { id: \"6\", name: \"All\" },\n];\n\nconst options = [\n  { id: \"1\", name: \"All Equipment\" },\n  { id: \"2\", name: \"Only equipment from PQS/PIS\" },\n  { id: \"3\", name: \"Only equipment with installation date\" },\n];\n\nconst tableData = [\n  {\n    headTitle: \"Parent\",\n    valueKey: \"parent\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Name\",\n    valueKey: \"name\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Levels\",\n    valueKey: \"level\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Code\",\n    valueKey: \"code\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Type\",\n    valueKey: \"type\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"General\",\n    valueKey: \"general\",\n    func: (val) => separator(val),\n\n  },\n  {\n    headTitle: \"Under_1\",\n    valueKey: \"children\",\n    func: (val) => separator(val),\n\n  },\n];\n\nconst tableDegreeData = [\n  {\n    headTitle: \"Required capacity (lit.)\",\n    valueKey: \"req\",\n    func: (val) => \n      parseFloat(val).toFixed(2).toString().replace(\".\", seperator())\n    ,\n  },\n  {\n    headTitle: \"All total available (lit.)\",\n    valueKey: \"tcapacity\",\n    func: (val) => parseFloat(val).toFixed(2).toString().replace(\".\", seperator()),\n  },\n  {\n    headTitle: \"Functioning Total Available (lit)\",\n    valueKey: \"fcapacity\",\n    func: (val) => parseFloat(val).toFixed(2).toString().replace(\".\", seperator()),\n  },\n  {\n    headTitle: \"Excess/ Shortage (lit.)\",\n    valueKey: \"excees\",\n    func: (val) => parseFloat(val).toFixed(2).toString().replace(\".\", seperator()),\n  },\n];\n\nfunction GapItemReport({i18n}) {\n  const [filterValues, setFilterValues] = useState(defaultValues);\n  const [selectedDegree, setSelectedDegree] = useState(\"1\");\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n\n  const { data: gapItemHelper, isLoading: isGapItemHelperLoading } = useQuery(\n    [\"gap-item-helper\"],\n    async () => {\n      const res = await ReportService.getGapItem({ help: true });\n      return res.data;\n    }\n  );\n\n  const {\n    data: reports,\n    isLoading: isReportsLoading,\n    refetch: fetchReports,\n  } = useQuery(\n    [\"gap-item-report\"],\n    async () => {\n      const params = {\n        help: false,\n      };\n      for (const key in filterValues) {\n        const filter = filterValues[key];\n        if (filter.length > 0 && filter !== \"-1\") {\n          params[key] = filter;\n        }\n      }\n      const res = await ReportService.getGapItem(params);\n      if(res.data.data.length === 0){\n                 toast.error(<Trans>No data found</Trans>);\n\n      }\n      return res.data;\n    },\n    {\n      refetchOnMount: false,\n      enabled: false,\n      onSuccess() {\n        setSelectedDegree(filterValues.degree);\n      },\n    }\n  );\n  const saveGaps =() => {\n    \n    ReportService.savegaps(filterValues[\"degree\"], reports?.save).then(\n      (res) => {\n        console.log(res);\n      }\n    );\n\n  }\n    const printFilterValues = () => {\n        let filter = \"\";\n        for (const key in filterValues) {\n            const filterValue = filterValues[key];\n            if (filterValue.length > 0 && filterValue !== \"-1\") {\n              if(key==='degree'){\n                filter += `Storage condition:${\n                  degrees.find((d) => d.id === filterValue).name\n                } , `;\n              }else if(key==='option'){\n                filter += `Option : ${\n                  options.find((d) => d.id === filterValue).name\n                } , `;\n              }\n              else if(key==='type'){\n                filter += `Type : ${\n                  gapItemHelper?.type.find(\n                    (d) => d.id === parseInt(filterValue)\n                  ).name\n                } , `;\n              }else if(key==='level'){\n                filter += `Level :   ${\n                  gapItemHelper?.level.find(\n                    (d) => d.id === parseInt(filterValue)\n                  ).id\n                }  - ${\n                  gapItemHelper?.level.find(\n                    (d) => d.id === parseInt(filterValue)\n                  ).name\n                } , `;\n              }\n              else if(key==='power'){\n                filter += `Power source = ${\n                  gapItemHelper?.power.find(\n                    (d) => d.id === parseInt(filterValue)\n                  ).name\n                } , `;\n              }\n              else if (key === \"code\") {\n                                filter += `Code : ${filterValue} , `;\n\n              } else if (key === \"name\") {\n                filter += `Facility name : ${filterValue} , `;\n              } else if (key === \"year_from\") {\n                filter += `Year from : ${filterValue} , `;\n              } else if (key === \"year_to\") {\n                filter += `Year to : ${filterValue} , `;\n              } else if (key === \"calculate_for\") {\n                filter += `Calculate for : ${filterValue} , `;\n              } else {\n                filter += `${key} = ${filterValue} , `;\n              }}\n        }\n        return filter;\n\n    }\n  if (isGapItemHelperLoading || isReportsLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Item gap report</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                fetchReports();\n              }}\n            >\n              <h4>\n                <Trans>Filter</Trans>\n              </h4>\n              <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Facility Name</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          name: value,\n                        }));\n                      }}\n                      value={filterValues.name}\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Code</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          code: value,\n                        }));\n                      }}\n                      value={filterValues.code}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Levels</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          level: value,\n                        }));\n                      }}\n                      value={filterValues.level}\n                      as=\"select\"\n                    >\n                      {/* <Trans id=\"ui.select\" render={<option value=\"\">hi</option>}>Select something</Trans> */}\n\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n\n                      {gapItemHelper?.level.map((lev) => (\n                        <option key={lev.id} value={lev.id}>\n                          {`${lev.id} - ${lev.name}`}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Type</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          type: value,\n                        }));\n                      }}\n                      value={filterValues.type}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {gapItemHelper?.type.map((ty) => (\n                        <option key={ty.id} value={ty.id}>\n                          {ty.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Power source</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          power: value,\n                        }));\n                      }}\n                      value={filterValues.power}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {gapItemHelper?.power.map((pow) => (\n                        <option key={pow.id} value={pow.id}>\n                          {pow.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Storage conditions</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          degree: value,\n                        }));\n                      }}\n                      value={filterValues.item_class}\n                      as=\"select\"\n                    >\n                      {degrees?.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-5\">\n                <h4>\n                  <Trans>Item Options</Trans>\n                </h4>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Options</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          option: value,\n                        }));\n                      }}\n                      value={filterValues.item_class}\n                      as=\"select\"\n                    >\n                      {options?.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-2\">\n                      <Trans>from</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          year_from: value,\n                        }));\n                      }}\n                      value={filterValues.year_from}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected>\n                        select\n                      </option>\n                      {console.log(new Date().getUTCFullYear())}\n                      {Array.from({ length: 30 }).map((_, i) => {\n                        const year = new Date().getUTCFullYear() - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                    <label className=\"label col-sm-1\">\n                      <Trans>to</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          year_to: value,\n                        }));\n                      }}\n                      value={filterValues.year_to}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected>\n                        select\n                      </option>\n                      {Array.from({\n                        length:\n                          new Date().getUTCFullYear() -\n                          filterValues.year_from +\n                          1,\n                      }).map((_, i) => {\n                        const year = new Date().getUTCFullYear() - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                    <label className=\"label col-sm-3\">\n                      <Trans>Calculate for Year:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          calculate_for: value,\n                        }));\n                      }}\n                      value={filterValues.calculate_for}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected>\n                        select\n                      </option>\n                      {Array.from({ length: 10 }).map((_, i) => {\n                        const year = new Date().getUTCFullYear() + i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-2\">\n                  <button type=\"submit\" className=\"btn btn-primary fs-5\">\n                    <Trans>Report</Trans>\n                  </button>\n                </div>\n                <div className=\"col-sm-3 \">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary fs-5\"\n                    onClick={() => {setFilterValues(defaultValues);\n                    window.location.reload();\n                    }}\n                  >\n                    <Trans>Clear Filter</Trans>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <h4>\n              <Trans>Report</Trans> : <Trans>Item gap report</Trans>\n              <Trans> ({country?.country})</Trans>\n            </h4>\n            <h6>\n              <Trans>Filter</Trans> : {\"\"} {printFilterValues()}\n            </h6>\n\n            <h6><Trans>Date</Trans>: {new Date().toLocaleDateString('en-GB')}</h6>\n            <div className=\"mt-3 table-container \">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={5}>\n                      <Trans>Facility information</Trans>\n                    </TableCell>\n                    <TableCell align=\"center\" colSpan={2}>\n                      <Trans>Population</Trans>\n                    </TableCell>\n                    {selectedDegree === \"6\" ? (\n                      Array.from({ length: 5 }).map((_, i) => (\n                        <TableCell\n                          key={i}\n                          align=\"center\"\n                          colSpan={4}\n                          style={{ textAlign: \"center\" }}\n                        >\n                          {degrees[i].name}\n                        </TableCell>\n                      ))\n                    ) : (\n                      <TableCell\n                        align=\"center\"\n                        colSpan={4}\n                        style={{ textAlign: \"center\" }}\n                      >\n                        {degrees[+selectedDegree - 1].name}\n                      </TableCell>\n                    )}\n                  </TableRow>\n                  <TableRow>\n                    {tableData.map((data) => (\n                      <TableCell key={data.headTitle}>\n                        <Trans>{data.headTitle}</Trans>\n                      </TableCell>\n                    ))}\n                    {Array.from({ length: selectedDegree === \"6\" ? 5 : 1 }).map(\n                      (_, i) => (\n                        <Fragment key={i}>\n                          {tableDegreeData.map((td) => (\n                            <TableCell key={`${td.valueKey}${i + 1}`}>\n                              <Trans>{td.headTitle}</Trans>\n                            </TableCell>\n                          ))}\n                        </Fragment>\n                      )\n                    )}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.data.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        {tableData.map((data) => (\n                          <TableCell key={data.valueKey}>\n                            {data.func(report[data.valueKey]) ?? \"-\"}\n                          </TableCell>\n                        ))}\n                        {Array.from({\n                          length: selectedDegree === \"6\" ? 5 : 1,\n                        }).map((_, i) => (\n                          <Fragment key={i}>\n                            {tableDegreeData.map((td) => (\n                              <TableCell\n                                key={`${td.valueKey}${i + 1}`}\n                                style={{\n                                  color:\n                                    td.valueKey === \"excees\"\n                                      ? report[`exceed${i + 1}`]\n                                        ? \"blue\"\n                                        : \"red\"\n                                      : \"unset\",\n                                }}\n                              >\n                                {console.log(report[`${td.valueKey}${i + 1}`])}\n                                {td.func(report[`${td.valueKey}${i + 1}`]) ??\n                                  \"-\"}\n                              </TableCell>\n                            ))}\n                          </Fragment>\n                        ))}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n            {reports?.excel && (\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-2\">\n                  <a href={API_URL + reports.excel} download>\n                    <button className=\"btn btn-primary\">\n                      <Trans>Export to MS Excel</Trans>\n                    </button>\n                  </a>\n                </div>\n                <div className=\"col-sm-2\">\n                  <button onClick={saveGaps} className=\"btn btn-primary\">\n                    <Trans>Save Reports</Trans>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GapItemReport;\n",
    "import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"https://ukrapi.invgap.org/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  savegaps(payload, saved) {\n    return ApiManager.post(API_URL + \"gapsave?condition=\" + payload, saved, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n",
    "import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n",
    "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ns\", \"children\"];\nimport { useTranslation } from './useTranslation';\nexport function Translation(props) {\n  var ns = props.ns,\n      children = props.children,\n      options = _objectWithoutProperties(props, _excluded);\n\n  var _useTranslation = useTranslation(ns, options),\n      _useTranslation2 = _slicedToArray(_useTranslation, 3),\n      t = _useTranslation2[0],\n      i18n = _useTranslation2[1],\n      ready = _useTranslation2[2];\n\n  return children(t, {\n    i18n: i18n,\n    lng: i18n.language\n  }, ready);\n}"
  ],
  "names": [
    "separator",
    "x",
    "undefined",
    "n",
    "sep",
    "reverse",
    "text",
    "split",
    "join",
    "rx",
    "toString",
    "replace",
    "thousandSeparator",
    "parseInt",
    "getLanguage",
    "i18n",
    "seperator",
    "defaultValues",
    "name",
    "code",
    "level",
    "type",
    "power",
    "degree",
    "option",
    "year_from",
    "year_to",
    "calculate_for",
    "degrees",
    "id",
    "options",
    "tableData",
    "headTitle",
    "valueKey",
    "func",
    "val",
    "tableDegreeData",
    "parseFloat",
    "toFixed",
    "useState",
    "filterValues",
    "setFilterValues",
    "selectedDegree",
    "setSelectedDegree",
    "country",
    "JSON",
    "parse",
    "localStorage",
    "getItem",
    "useQuery",
    "ReportService",
    "help",
    "res",
    "data",
    "gapItemHelper",
    "isGapItemHelperLoading",
    "isLoading",
    "key",
    "params",
    "filter",
    "length",
    "toast",
    "refetchOnMount",
    "enabled",
    "onSuccess",
    "reports",
    "isReportsLoading",
    "fetchReports",
    "refetch",
    "className",
    "onSubmit",
    "e",
    "preventDefault",
    "onChange",
    "value",
    "target",
    "preValues",
    "as",
    "t",
    "selected",
    "map",
    "lev",
    "ty",
    "pow",
    "item_class",
    "i",
    "console",
    "log",
    "Date",
    "getUTCFullYear",
    "Array",
    "from",
    "_",
    "year",
    "onClick",
    "window",
    "location",
    "reload",
    "filterValue",
    "find",
    "d",
    "printFilterValues",
    "toLocaleDateString",
    "align",
    "colSpan",
    "style",
    "textAlign",
    "Fragment",
    "td",
    "report",
    "index",
    "color",
    "excel",
    "href",
    "API_URL",
    "download",
    "save",
    "then",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "payload",
    "saved",
    "children",
    "_excluded",
    "Translation",
    "props",
    "ns",
    "_objectWithoutProperties",
    "_useTranslation",
    "useTranslation",
    "_useTranslation2",
    "_slicedToArray",
    "ready",
    "lng",
    "language"
  ],
  "sourceRoot": ""
}
