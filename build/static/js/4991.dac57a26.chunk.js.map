{"version":3,"file":"static/js/4991.dac57a26.chunk.js","mappings":"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","sources":["app/components/DynamicInput.js","app/components/StepOperations.js","app/helpers/separator.js","app/helpers/seperator.js","app/helpers/validation-checker.js","app/constants/item.js","app/helpers/related-tem.js","app/helpers/related-tem-req.js","app/items/Item.js","app/shared/LeftArrowIcon.js","app/shared/RightArrowIcon.js"],"sourcesContent":["import { Form } from \"react-bootstrap\";\nimport { separator as thousandSeparator } from \"../helpers/separator\";\nimport { components } from \"react-select\";\nimport { default as ReactSelect } from \"react-select\";\nimport { Translation, Trans } from \"react-i18next\";\nimport i18n from \"../../i18n\";\n\nimport { useState } from \"react\";\nlet numericKeys = \"0123456789.:\";\nconst num1 = \"0123456789\";\nconst Option = (props) => {\n  return (\n    <div>\n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          checked={props.isSelected}\n          onChange={() => null}\n        />{\" \"}\n        <label>\n          <Trans>{props.label}</Trans>\n        </label>\n      </components.Option>\n    </div>\n  );\n};\n\nconst DynamicInput = (props) => {\n  const { field, onChangeHandler, defaultValue, separator } = props;\n  const [selected, setSelected] = useState([]);\n  if (field.type === \"select\") {\n    if (field.stateName !== \"other_services\"){\n      return (\n        <Form.Control\n          onChange={(e) => onChangeHandler(e.target.value, field)}\n          // defaultValue={defaultValue}\n          className=\"form-control form-select\"\n          multiple={field.stateName === \"other_services\" ? true : false}\n          as=\"select\"\n          disabled={field.active ? !field.active : field.disabled}\n          id={`field-${field.id}`}\n        >\n          <Translation>\n            {(t, { i18n }) => (\n              <option i18n value=\"\" selected>\n                {t(\"Please select\")}\n              </option>\n            )}\n          </Translation>\n          {field.params.map((param) => (\n            <option\n              disabled={\n                param.enabled\n                  ? !param.enabled\n                  : param.active\n                  ? !param.active\n                  : !param.enable\n              }\n              value={param.id}\n              selected={parseInt(defaultValue) === param.id ? true : false}\n            >\n              {param.name || param.describe}\n            </option>\n          ))}\n        </Form.Control>\n      );}\n    else {\n      const options=[]\n      let selecteda=[]\n      console.log(selecteda)\n      for (let i = 0; i < field.params.length; i++) {\n        let disabled = field.params[i].enabled\n          ? !field.params[i].enabled\n          : field.params[i].active\n          ? !field.params[i].active\n          : !field.params[i].enable;\n        let selecteds =\n          defaultValue !== undefined &&\n          defaultValue !== null &&\n          defaultValue.includes(field.params[i].id)\n            ? true\n            : false;\n        if(!disabled){\n        options.push({\n          label: field.params[i].name || field.params[i].describe,\n          value: field.params[i].id,\n        });\n        }\n        if(selecteds){\n          selecteda.push({\n            label: field.params[i].name || field.params[i].describe,\n            value: field.params[i].id,\n          });\n\n        }\n      }\n      \n      \n\n      \n       \n  return (\n    <ReactSelect\n      options={options}\n      isMulti\n      closeMenuOnSelect={false}\n      hideSelectedOptions={false}\n      components={{\n        Option,\n      }}\n      onChange={(e) => {\n        console.log(e)\n        let x = [];\n        let y = \"\";\n        if(e!==null){\n        for (let i = 0; i < e.length; i++) {\n          x.push(e[i].value);\n          y+=e[i].value\n        }\n        setSelected(e)\n        selecteda=e\n        onChangeHandler(y, field);\n      }\n      else{\n        onChangeHandler(\"\", field);\n        setSelected([])\n        selecteda=[]\n      }\n      }}\n      allowSelectAll={true}\n      value={selected.length>0?selected:selecteda}\n    />\n  );}\n\n    \n  }\n\n  if (field.type === \"bool\") {\n    return (\n      <>\n        <Form.Control\n          onChange={(e) => onChangeHandler(e.target.value === \"true\", field)}\n          // defaultValue={defaultValue}\n          className=\"form-control form-select\"\n          as=\"select\"\n          disabled={field.active ? !field.active : field.disabled}\n          id={`field-${field.id}`}\n        >\n          <Translation>\n            {(t, { i18n }) => (\n              <option\n                i18n\n                value=\"\"\n                selected={\n                  defaultValue === null || defaultValue === undefined\n                    ? true\n                    : false\n                }\n                disabled\n              >\n                {t(\"Please select\")}\n              </option>\n            )}\n          </Translation>\n\n          <option\n            selected={\n              defaultValue !== null && defaultValue !== undefined\n                ? defaultValue\n                : false\n            }\n            value={true}\n          >\n            Yes\n          </option>\n          <option\n            selected={\n              defaultValue !== null && defaultValue !== undefined\n                ? !defaultValue\n                : false\n            }\n            value={false}\n          >\n            No\n          </option>\n        </Form.Control>\n      </>\n    );\n  }\n  if ((i18n.language != \"en\") & (i18n.language != \"ar\")) {\n    numericKeys = \"0123456789,:\";\n  }\n  const validation = field.validation?.[0];\n  return (\n    <Form.Control\n      onKeyPress={(e) => {\n        e.persist();\n        if (field.type === \"number\") {\n          if (validation && validation?.float) {\n            if (numericKeys.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          } else if (validation && validation?.float === false) {\n            if (num1.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          }\n        }\n        onChangeHandler(e.target.value, field);\n      }}\n      lang=\"en-US\"\n      onChange={(e) => onChangeHandler(e.target.value, field)}\n      value={defaultValue}\n      className=\"form-control\"\n      id={`field-${field.id}`}\n      disabled={field.active ? !field.active : field.disabled}\n      min={validation && validation?.min !== -1 ? validation.min : undefined}\n      max={validation && validation?.max !== -1 ? validation.max : undefined}\n      step={\n        validation && validation?.float\n          ? Math.pow(0.1, validation.floating).toFixed(validation.floating)\n          : undefined\n      }\n      maxLength={\n        validation && validation?.digits !== -1 ? validation.digits : undefined\n      }\n      onBlur={(e) => {\n        e.persist();\n        if (separator) {\n          const formatted = thousandSeparator(e.target.value);\n          onChangeHandler(formatted, field);\n        }\n      }}\n    />\n  );\n};\n\nexport default DynamicInput;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { Trans } from \"react-i18next\";\nimport LeftArrowIcon from \"../shared/LeftArrowIcon\";\nimport RightArrowIcon from \"../shared/RightArrowIcon\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction StepOperations(props) {\n  const {\n    activeStep,\n    handleBack,\n    handleNext,\n    stepsLength,\n    isNextDisabled,\n    id,\n  } = props;\n  const history = useHistory();\n\n  return (\n    <div className=\"row mt-2\">\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          disabled={activeStep === 0}\n          onClick={handleBack}\n          sx={{ mr: 1 }}\n          type=\"button\"\n        >\n          <LeftArrowIcon sx={{ mr: 2 }} />\n          <Trans>Back</Trans>\n        </Button>\n        <Box sx={{ flex: \"0.5 0.5 auto\" }} />\n        <>\n          {id !== \"new\" && activeStep !== stepsLength && (\n            <>\n              <button className=\"btn btn-primary w-10 \">\n                <Trans>Save all</Trans>\n              </button>\n              <Box sx={{ flex: \"0.6 0.5 auto\" }} />\n\n              <Button\n                disabled={isNextDisabled}\n                onClick={handleNext}\n                type=\"button\"\n                sx={{ mr: 1 }}\n              >\n                <Trans>Next</Trans>\n                <RightArrowIcon />\n              </Button>\n            </>\n          )}\n          {id !== \"new\" && activeStep === stepsLength && (\n            <>\n              <Box sx={{ flex: \"0.48 0.5 auto\" }} />\n\n              <button\n                className=\"btn btn-primary w-10 \"\n                value=\"saveAll\"\n                name=\"saveaLL\"\n              >\n                <Trans>Save all</Trans>\n              </button>\n            </>\n          )}\n          {id === \"new\" && activeStep !== stepsLength && (\n            <>\n              <Box sx={{ flex: \"0.6 0.5 auto\" }} />\n\n              <Button\n                disabled={isNextDisabled}\n                onClick={handleNext}\n                type=\"button\"\n                sx={{ mr: 1 }}\n              >\n                <Trans>Next</Trans>\n                <RightArrowIcon />\n              </Button>\n            </>\n          )}\n          {id === \"new\" && activeStep === stepsLength && (\n            <>\n              <Box sx={{ flex: \"0.6 0.5 auto\" }} />\n\n              <button className=\"btn btn-primary w-10 \" name=\"save\" value=\"x\">\n                <Trans>Save all</Trans>\n              </button>\n              <button\n                className=\"btn btn-primary w-10 \"\n                name=\"saveNew\"\n                value=\"y\"\n              >\n                <Trans>SAVE and New</Trans>\n              </button>\n            </>\n          )}\n        </>\n      </Box>\n    </div>\n  );\n}\n\nexport default StepOperations;\n","\nexport const separator = (x) => {\n  if (x === undefined || x === null || x===\"\") {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n","import i18n from \"../../i18n\";\n\nexport const getLanguage = () => {\n    return i18n.language;\n    }\n\nexport const seperator = () => {\n    if(getLanguage() === \"ar\" || getLanguage() === \"en\"){\n        return \".\";\n    }\n    else{\n        return \",\";\n    }\n}\n","import { separator } from \"../helpers/separator\";\nimport { seperator } from \"../helpers/seperator\";\nexport const hasValidationError = (value, validation) => {\n  if (typeof value !== \"string\" && typeof value !== \"number\") return false;\n\n  const _value = value.replaceAll(\" \", \"\");\n  if (validation === undefined || !_value) return false;\n  if (validation.min !== -1 && validation.min > _value) {\n    return `value must greater than ${separator(validation.min)}`;\n  }\n  if (validation.max !== -1 && validation.max < _value) {\n    return `value must less than ${separator(validation.max)}`;\n  }\n console.log(_value.split(\".\"));\n  if (\n    validation.float &&\n    _value.includes(seperator()) &&\n    _value.split(seperator())[1].length > validation.floating\n  ) {\n    return `value must has ${validation.floating} decimals`;\n  }\n  // if (\n  //   validation.digits !== -1 &&\n  //   _value\n  //     .toString()\n  //     .replaceAll(\",\", \"\")\n  //     .replaceAll(\".\", \"\")\n  //     .replaceAll(\":\", \"\").length >\n  //     validation.digits + (validation.floating > 0 ? validation.floating : 0)\n  // ) {\n  //   return `value must be ${validation.digits} digits`;\n  // }\n  return false;\n};\n\nexport const timeValidationError = (value) => {\n  const isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(\n    value\n  );\n\n  if (isValid) {\n    return false;\n  }\n  return \"value must be in (hh:mm) format!\";\n};\n","export const fromPQSFields = [\n  {\n    id: \"PQSPISCode\",\n    name: \"PQS/PIS Code:\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISCode\",\n    params: [],\n  },\n  {\n    id: \"PQSPISType\",\n    name: \"PQS/PIS-Type:\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISType\",\n    params: [],\n  },\n  {\n    id: \"PQSPISManufacturer\",\n    name: \"PQS/PIS-Manufacturer\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISManufacturer\",\n    params: [],\n  },\n\n  {\n    id: \"PQSPISRefrigerantGas\",\n    name: \"PQS/PIS-Refrigerant gas\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISRefrigerantGas\",\n    params: [],\n  },\n];\n","export const relatedFields = {\n  IsItFunctioning: [\"ReasonsForNotFunctioning\", \"NotInUseSince\"],\n};\n\nexport const isRelatedFieldOk = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      \n      if (fieldsValue[key] !== undefined && fieldsValue[key] !== null) {\n        return !fieldsValue[key];\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n","export const relatedFields = {\n  IsItFunctioning: [\"ReasonsForNotFunctioning\", \"NotInUseSince\"],\n};\n\nexport const isRelatedFieldOkReq = (currentFieldStateName, fieldsValue) => {\n  for (const key in relatedFields) {\n    const fields = relatedFields[key];\n    if (fields.indexOf(currentFieldStateName) >= 0) {\n      if (fieldsValue[key] !== undefined && fieldsValue[key] !== null ) {return fieldsValue[key];}\n      else{\n        return false;\n      }\n    }\n  }\n  return false;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Spinner from \"../shared/Spinner\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { Form } from \"react-bootstrap\";\nimport ItemService from \"../services/item.service\";\nimport DynamicInput from \"../components/DynamicInput\";\nimport { fromPQSFields } from \"../constants/item\";\nimport { hasValidationError } from \"../helpers/validation-checker\";\nimport { Trans } from \"react-i18next\";\nimport Select from \"react-select\";\nimport StepOperations from \"../components/StepOperations\";\nimport { isRelatedFieldOk, relatedFields } from \"../helpers/related-tem\";\nimport { isRelatedFieldOkReq } from \"../helpers/related-tem-req\";\nimport { seperator } from \"../helpers/seperator\";\n\n\nconst facilityField = {\n  id: \"facility\",\n  type: \"text\",\n  active: false,\n  disabled: true,\n  state: \"facility\",\n  name: \"\",\n};\n\nfunction Item() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [fieldsValue, setFieldValue] = useState({});\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [selectedItemClass, setSelectedItemClass] = useState(null);\n  const [selectedItemType, setSelectedItemType] = useState(null);\n  const [isFromPQS, setIsFromPQS] = useState(false);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const params = new URLSearchParams(history.location.search);\n  const parent = params.get(\"parent\");\n\n  const { isLoading: isItemDefaultLoading } = useQuery(\n    [\"item-default-value\", id],\n    async () => {\n      const defaultData = {\n        code: \"Unique code generated by IGA\",\n        same_item: \"1\",\n      };\n\n      if (id === \"new\") return defaultData;\n\n      const res = await ItemService.getItems(id);\n      let item = res.data[0];\n      if (item[\"PQSPISCode\"]) {\n        setIsFromPQS(true);\n      }\n      for (const key in item) {\n        if (typeof item[key] === \"number\") {\n          if (item[key] % 1 !== 0) {\n            item[key] = item[key]\n              .toFixed(2)\n              .toString()\n              .replace(\".\", seperator());\n          }\n        }\n      }\n\n      return { ...item };\n    },\n    {\n      refetchOnMount: true,\n      onSuccess(data) {\n        setFieldValue((preValues) => ({\n          ...data,\n          ...preValues,\n        }));\n      },\n    }\n  );\n\n  const { data: itemClassesAndTypes, isLoading: isItemClassesAndTypesLoading } =\n    useQuery(\n      [\"item-classes-and-types\"],\n      async () => {\n        const res = await ItemService.getItemClassesAndTypes(parent);\n        setFieldValue((preValues) => ({\n          ...preValues,\n          facility: res.data.facility,\n        }));\n        return res.data.data.filter((item) => item.item_type.length > 0);\n      },\n      {\n        refetchOnMount: true,\n        onSuccess(data) {\n          if (id === \"new\") {\n          setSelectedItemClass(data[0]);\n          setSelectedItemType(data[0]?.item_type?.[0]);}\n          else{\n            console.log(fieldsValue);\n            const item_class = data.find(\n              (item) => item?.item_class?.id === fieldsValue.item_class\n            );\n            console.log(item_class);\n            const item_type= item_class?.item_type?.find((item) => item.id === fieldsValue.item_type);\n            setSelectedItemClass(item_class);\n\n            setSelectedItemType(item_type);\n           \n          }\n        },\n      }\n    );\n\n  const { data: pqsData, isLoading: isPqsLoading } = useQuery(\n    [\"pqs\", selectedItemType?.id],\n    async () => {\n      let id_param=0\n      if(id=='new'){\n        id_param = selectedItemType?.id;\n      }\n      else{\n        id_param=1\n        if(fieldsValue!=={}){\n          id_param=fieldsValue['item_type']\n        }\n      }\n      const res = await ItemService.getPQS(id_param);\n      return res?.data?.map((item) => ({\n        label:\n          item.pqsnumber  ? (item.pqsnumber +\n            \" , \" +\n            item.type +\n            \" , \" +\n            item.vaccinenetstoragecapacity) : (item.pqscode +\n            \" , \" +\n            item.description +\n            \" , \" +\n            item.freezercapacity)\n          ,\n        value: item,\n      }));\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  const {\n    data: itemFields,\n    isLoading: isItemsFieldsLoading,\n    isIdle: isItemsFieldsIdle,\n    refetch: refetchItemFields,\n  } = useQuery(\n    [\n      \"item-fields\",\n      selectedItemClass?.item_class.id,\n      selectedItemType?.id,\n      parent,\n    ],\n    async () => {\n      const res = await ItemService.getItemFields(\n        selectedItemClass.item_class.id,\n        selectedItemType.id,\n        parent\n      );\n      const result = {};\n      if (res.data.fields) {\n        for (const field of res.data.fields) {\n           if (id !== \"new\" && field.field.state === \"same_item\"){\n            continue;\n          }\n          const fieldTopicInResult = result[field.field.topic] ?? [];\n         \n            fieldTopicInResult.push(field.field);\n          result[field.field.topic] = fieldTopicInResult;\n        }\n        const firstTopic = Object.keys(result)[0] ?? \"Type\";\n        if (result[firstTopic] === undefined) {\n          result[firstTopic] = [];\n        }\n        //static fields\n        result[firstTopic].unshift({\n          id: \"code\",\n          name: \"Item code\",\n          topic: firstTopic,\n          type: \"text\",\n          active: false,\n          disabled: true,\n          required: false,\n          state: \"code\",\n          params: [],\n        });\n      }\n      return result;\n    },\n    {\n      enabled: !!selectedItemType,\n    }\n  );\n\n  useEffect(() => {\n    if (selectedItemType) refetchItemFields();\n  }, [selectedItemType]);\n\n  const hasRequiredErrors = () => {\n    const _fieldErrors = { ...fieldErrors };\n    const currentStepFields = Object.values(itemFields)[activeStep];\n    currentStepFields.forEach((field) => {\n      console.log(fieldsValue[field.state]);\n      if (\n        field.required &&\n        !fieldsValue[field.state] &&\n        !isRelatedFieldOkReq(field.state, fieldsValue) &&\n        fieldsValue[field.state]!==0\n      ) {\n        if (field.type === \"bool\") {\n          if (\n            fieldsValue[field.state] === undefined ||\n            fieldsValue[field.state] === null\n          ) {\n            _fieldErrors[field.state] = \"this field is required!\";\n          }\n        } else {\n          _fieldErrors[field.state] = \"this field is required!\";\n        }\n      }\n    });\n     for (const key in relatedFields) {\n       const fields = relatedFields[key];\n         if (fieldsValue[key] === true) {\n           fields.forEach((field) => {\n             delete _fieldErrors[field];\n           });\n         }\n       \n     }\n    setFieldErrors(_fieldErrors);\n    return Object.keys(_fieldErrors).length > 0;\n  };\n\n  const handleNext = () => {\n    if (!hasRequiredErrors()) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    setFieldErrors({});\n\n  };\n\n  const onChangeHandler = async (value, field) => {\n    const validationErr = hasValidationError(value, field.validation?.[0]);\n    const cloneFieldsValue = { ...fieldsValue };\n    cloneFieldsValue[field.state] = value;\n    setFieldValue(cloneFieldsValue);\n    //check validation and required\n    const _fieldErrors = { ...fieldErrors };\n    if (validationErr) {\n      _fieldErrors[field.state] = validationErr;\n    } else {\n      delete _fieldErrors[field.state];\n    }\n     for (const key in relatedFields) {\n       const fields = relatedFields[key];\n       console.log(fieldsValue[key]);\n         fields.forEach((field) => {\n           delete _fieldErrors[field];\n         });\n     }\n     console.log(_fieldErrors);\n    setFieldErrors(_fieldErrors);\n  };\n\n  const onSaveHandler = async (e) => {\n    e.preventDefault();\n    if (hasRequiredErrors()) {\n      return;\n    }\n    const _fieldsValue = { ...fieldsValue };\n     for (const key in relatedFields) {\n       const fields = relatedFields[key];\n       if (fieldsValue[key] === true) {\n         fields.forEach((field) => {\n           delete _fieldsValue[field];\n         });\n       }\n     }\n    if (!isFromPQS) {\n      for (const key in fieldsValue) {\n        if (fromPQSFields.find((pqsField) => pqsField.state === key)) {\n          delete _fieldsValue[key];\n        }\n      }\n    }\n    _fieldsValue[\"item_class\"] = selectedItemClass.item_class.id;\n    _fieldsValue[\"item_type\"] = selectedItemType.id;\n    _fieldsValue[\"facility\"] = _fieldsValue[\"facility\"].id;\n    // remove empty items\n    for (const key in _fieldsValue) {\n      const field = Object.values(itemFields)\n        .flat()\n        .find((field) => field.state === key);\n      if(field === undefined) {\n        if (typeof _fieldsValue[key] === \"string\") {\n          if (_fieldsValue[key].includes(seperator())){\n            _fieldsValue[key] = parseFloat(_fieldsValue[key].replace(\",\", \".\"));\n          }\n        }\n\n        continue;\n      }\n      if (_fieldsValue[key] === \"\" || _fieldsValue[key] === null) {\n        delete _fieldsValue[key];\n        continue;\n      }\n\n      if (typeof _fieldsValue[key] ==='string' ){\n        // find this field \n        console.log(Object.values(itemFields).flat());\n        console.log(key);\n        // const field = Object.values(itemFields).flat().find((field) => field.state === key);\n        \n        if (field.type === 'number'){\n          _fieldsValue[key] = parseFloat(_fieldsValue[key].replace(\",\", \".\"));\n\n        }\n      }\n    }\n    const page = window.event.submitter.name === \"saveNew\" ? \"new\" : \"edit\";\n\n    const res = await (id === \"new\"\n      ? ItemService.postItem(_fieldsValue)\n      : ItemService.putItem(_fieldsValue));\n     if (page===\"new\") {\n        window.location.reload();\n     }\n     else{\n    history.push(`/items/list`);\n    setFieldValue(_fieldsValue);\n     }\n  };\n\n  const selectItemClassHandler = async (e) => {\n    console.log(e.target.value)\n    console.log(itemClassesAndTypes);\n    setSelectedItemClass(itemClassesAndTypes[e.target.value]);\n    setSelectedItemType(itemClassesAndTypes[e.target.value].item_type[0]);\n    \n  };\n\n  const selectItemTypeHandler = (e) => {\n    setSelectedItemType(selectedItemClass.item_type[e.target.value]);\n  };\n\n  const onIsFromPQSChange = () => {\n    setIsFromPQS((preChecked) => !preChecked);\n  };\n\n  const selectPQSHandler = () => {\n    // console.log(fieldsValue[\"PQSPISCode\"]);\n    const value = pqsData.find(\n      (pqs) => pqs.label.split(\" , \")[0] === fieldsValue[\"PQSPISCode\"]\n    )?.value;\n    if (value === undefined) {\n      //TODO: show a correct massage to user\n      return;\n    }\n\n    const cloneFieldsValue = { ...fieldsValue };\n\n    const selectedPqs = pqsData.find((pqs) => pqs?.value?.id === value?.id).value;\n    if(selectedPqs.ptype==3){\n      cloneFieldsValue[\"PQSPISManufacturer\"] = selectedPqs.make;\n      cloneFieldsValue[\"PQSPISRefrigerantGas\"] = selectedPqs.refrigerant;\n      cloneFieldsValue[\"PQSPISType\"] = selectedPqs.model;\n      cloneFieldsValue[\"PQSPISTemperatureWorkingZone\"] =\n        selectedPqs.refrigerant;\n      cloneFieldsValue[\"NetVaccineStorageCapacity\"] =\n        selectedPqs.refrigeratorcapacity\n          .toFixed(2)\n          .toString()\n          .replace(\".\", seperator());\n      cloneFieldsValue[\"FreezerNetCapacity\"] = selectedPqs.freezercapacity\n        .toFixed(2)\n        .toString()\n        .replace(\".\", seperator());\n      cloneFieldsValue[\"Height\"] = selectedPqs.h\n        .toFixed(2)\n        .toString()\n        .replace(\".\", seperator());\n      cloneFieldsValue[\"Width\"] = selectedPqs.w\n        .toFixed(2)\n        .toString()\n        .replace(\".\", seperator());\n      cloneFieldsValue[\"Length\"] = selectedPqs.l\n        .toFixed(2)\n        .toString()\n        .replace(\".\", seperator());\n\n\n      \n\n    }\n    else{\n      cloneFieldsValue[\"PQSPISType\"] = selectedPqs.type;\n      cloneFieldsValue[\"PQSPISManufacturer\"] = selectedPqs.manufacturer;\n      cloneFieldsValue[\"PQSPISRefrigerantGas\"] =\"--\";\n      cloneFieldsValue[\"PQSPISTemperatureWorkingZone\"] = \"--\"\n      cloneFieldsValue[\"NetVaccineStorageCapacity\"] =\n        selectedPqs.vaccinenetstoragecapacity\n          .toFixed(2)\n          .toString()\n          .replace(\".\", seperator());\n      cloneFieldsValue[\"CoolantPackNominalCapacity\"] =\n        selectedPqs.coolantpacknominalcapacity\n          .toFixed(2)\n          .toString()\n          .replace(\".\", seperator());\n      cloneFieldsValue[\"NumberOfCoolantPacksRequired\"] =\n        selectedPqs.numbercoolantpacks;\n      cloneFieldsValue[\"ExternalSize\"] = selectedPqs.externalvolume\n        .toFixed(2)\n        .toString()\n        .replace(\".\", seperator());\n\n\n    }\n\n    setFieldValue(cloneFieldsValue);\n  };\n\n  if (\n    isItemDefaultLoading ||\n    isItemClassesAndTypesLoading ||\n    isItemsFieldsLoading ||\n    isItemsFieldsIdle ||\n    isPqsLoading\n  ) {\n    return <Spinner />;\n  }\n\n  return (\n    <form onSubmit={onSaveHandler}>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Item information</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row pb-4\" style={{ overflow: \"auto\" }}>\n              <Stepper activeStep={activeStep}>\n                {Object.keys(itemFields).map((topic) => {\n                  return (\n                    <Step key={topic}>\n                      <StepLabel style={{ width: \"max-content\" }}>\n                        <Trans>{topic}</Trans>\n                      </StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n            </div>\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              id={id}\n              stepsLength={Object.keys(itemFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Trans>Facility Name</Trans>:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={facilityField}\n                    defaultValue={fieldsValue[\"facility\"]?.name}\n                  />\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-left control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Trans>Item class</Trans>\n                </label>\n                <div className=\"col-sm-8\">\n                  <Form.Control\n                    onChange={selectItemClassHandler}\n                    className=\"form-select\"\n                    as=\"select\"\n                    value={itemClassesAndTypes?.findIndex(\n                      (i) =>\n                        i?.item_class.id === selectedItemClass?.item_class.id\n                    )}\n                    disabled={activeStep !== 0 || id !== \"new\"}\n                  >\n                    {itemClassesAndTypes.map((itemClass, index) => (\n                      <option value={index}>\n                        {itemClass.item_class.title}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Trans>Items category</Trans>\n                </label>\n                <div className=\"col-sm-8\">\n                  <Form.Control\n                    onChange={selectItemTypeHandler}\n                    className=\"form-select\"\n                    as=\"select\"\n                    value={selectedItemClass?.item_type.findIndex(\n                      (i) => i?.id === selectedItemType?.id\n                    )}\n                    disabled={activeStep !== 0 || id !== \"new\"}\n                  >\n                    {selectedItemClass?.item_type.map((itemType, index) => (\n                      <option value={index}>{itemType.title}</option>\n                    ))}\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {activeStep === 0 && (\n              <>\n                {selectedItemType.havepqs && (\n                  <>\n                    <div className=\"row\">\n                      <Form.Group className=\"row mb-0\">\n                        <label\n                          className={`col-sm-4 text-right`}\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"flex-end\",\n                            alignItems: \"center\",\n                            lineHeight: \"1.4\",\n                            textAlign: \"right\",\n                          }}\n                        >\n                          <Trans>Is this item from PQS/PIS list?</Trans>\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            name=\"is-from-pqs\"\n                            type=\"checkbox\"\n                            onChange={onIsFromPQSChange}\n                            checked={isFromPQS}\n                          />\n                        </div>\n                        <hr className=\"my-3\" />\n                      </Form.Group>\n                    </div>\n                    {isFromPQS &&\n                      fromPQSFields.map((pqsField) => (\n                        <div className=\"row\" key={pqsField.name}>\n                          <Form.Group className=\"row mb-0\">\n                            <label\n                              className={`col-sm-4 text-right ${\n                                pqsField.required ? \"control-label\" : \"\"\n                              }`}\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                                alignItems: \"center\",\n                                lineHeight: \"1.4\",\n                                textAlign: \"right\",\n                              }}\n                            >\n                              {pqsField.name}\n                            </label>\n\n                            <div\n                              className={`${\n                                pqsField.state === \"PQSPISCode\"\n                                  ? \"col-sm-7\"\n                                  : \"col-sm-8\"\n                              }`}\n                            >\n                              {pqsData && pqsField.state === \"PQSPISCode\" ? (\n                                <Select\n                                  options={pqsData}\n                                  onChange={(e) => {\n                                    console.log(\"on change \");\n                                    onChangeHandler(\n                                      e.label.split(\" , \")[0],\n                                      pqsField\n                                    );\n                                  }}\n                                  value={{\n                                    label: fieldsValue[\"PQSPISCode\"],\n                                    value: pqsData.find(\n                                      (pqs) =>\n                                        pqs.label.split(\" , \")[0] ===\n                                        fieldsValue[\"PQSPISCode\"]\n                                    )?.value,\n                                  }}\n                                  // onBlur={(e) => {\n                                  //   const value = e.target.value;\n                                  //   console.log(e.target.value)\n                                  //   if (value.length > 0) {\n                                  //     console.log(\"onBlur\");\n                                  //     onChangeHandler(value, pqsField);\n                                  //   }\n                                  // }}\n                                />\n                              ) : (\n                                <DynamicInput\n                                  field={pqsField}\n                                  onChangeHandler={onChangeHandler}\n                                  defaultValue={fieldsValue[pqsField.state]}\n                                />\n                              )}\n                            </div>\n                            {pqsField.state === \"PQSPISCode\" && (\n                              <div className=\"col-sm-1\">\n                                <button\n                                  className=\"btn btn-primary w-100 h-100 mt-1\"\n                                  onClick={selectPQSHandler}\n                                  type=\"button\"\n                                >\n                                  <Trans>Load</Trans>\n                                </button>\n                              </div>\n                            )}\n                            <hr className=\"my-3\" />\n                          </Form.Group>\n                        </div>\n                      ))}\n                  </>\n                )}\n              </>\n            )}\n            {Object.values(itemFields)[activeStep]?.map((field) => {\n              if (!isRelatedFieldOk(field.state, fieldsValue)) {\n                return null;\n              }\n              const hasRequiredError = !!fieldErrors[field.state];\n              return (\n                <div className=\"row\" key={field.name}>\n                  <Form.Group className=\"row mb-0\">\n                    <label\n                      className={`col-sm-4 text-right ${\n                        field.required ? \"control-label\" : \"\"\n                      }`}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                        alignItems: \"center\",\n                        lineHeight: \"1.4\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      <Trans>{field.name}</Trans>\n                    </label>\n                    <div className=\"col-sm-8\">\n                      <DynamicInput\n                        field={field}\n                        onChangeHandler={onChangeHandler}\n                        defaultValue={fieldsValue[field.state]}\n                      />\n                    </div>\n                    {hasRequiredError && (\n                      <div className=\"row\">\n                        <div className=\"col-sm-4\"></div>\n                        <div className=\"col-sm-8\">\n                          <p className=\"my-1 ml-2 text-danger\">\n                            <Trans>{fieldErrors[field.state]}</Trans>\n                          </p>\n                        </div>\n                      </div>\n                    )}\n                    <hr className=\"my-3\" />\n                  </Form.Group>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              id={id}\n              activeStep={activeStep}\n              stepsLength={Object.keys(itemFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Item;\n","function LeftArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 400 400\"\n        style={{marginRight:\"5px\"}}\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M382.688,182.686H59.116l77.209-77.214c6.764-6.76,6.764-17.726,0-24.485c-6.764-6.764-17.73-6.764-24.484,0L5.073,187.757\n\t\tc-6.764,6.76-6.764,17.727,0,24.485l106.768,106.775c3.381,3.383,7.812,5.072,12.242,5.072c4.43,0,8.861-1.689,12.242-5.072\n\t\tc6.764-6.76,6.764-17.726,0-24.484l-77.209-77.218h323.572c9.562,0,17.316-7.753,17.316-17.315\n\t\tC400.004,190.438,392.251,182.686,382.688,182.686z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default LeftArrowIcon;\n","function RightArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 1024 1024\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M754.752 480H160a32 32 0 100 64h594.752L521.344 777.344a32 32 0 0045.312 45.312l288-288a32 32 0 000-45.312l-288-288a32 32 0 10-45.312 45.312L754.752 480z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default RightArrowIcon;\n"],"names":["numericKeys","Option","props","type","checked","isSelected","onChange","label","field","onChangeHandler","defaultValue","separator","useState","selected","setSelected","stateName","e","target","value","className","multiple","as","disabled","active","id","t","i18n","params","map","param","enabled","enable","parseInt","name","describe","options","selecteda","console","log","i","length","selecteds","undefined","includes","push","isMulti","closeMenuOnSelect","hideSelectedOptions","components","x","y","allowSelectAll","validation","onKeyPress","persist","float","indexOf","key","preventDefault","lang","min","max","step","Math","pow","floating","toFixed","maxLength","digits","onBlur","formatted","thousandSeparator","activeStep","handleBack","handleNext","stepsLength","isNextDisabled","useHistory","sx","display","flexDirection","pt","onClick","mr","flex","n","sep","reverse","text","split","join","rx","toString","replace","getLanguage","seperator","hasValidationError","_value","replaceAll","timeValidationError","test","fromPQSFields","topic","required","state","relatedFields","IsItFunctioning","facilityField","setActiveStep","fieldsValue","setFieldValue","fieldErrors","setFieldErrors","selectedItemClass","setSelectedItemClass","selectedItemType","setSelectedItemType","isFromPQS","setIsFromPQS","useParams","history","parent","URLSearchParams","location","search","get","isItemDefaultLoading","useQuery","defaultData","code","same_item","ItemService","res","item","data","refetchOnMount","onSuccess","preValues","isLoading","facility","filter","item_type","item_class","find","itemClassesAndTypes","isItemClassesAndTypesLoading","id_param","pqsnumber","vaccinenetstoragecapacity","pqscode","description","freezercapacity","pqsData","isPqsLoading","result","fields","fieldTopicInResult","firstTopic","Object","keys","unshift","itemFields","isItemsFieldsLoading","isItemsFieldsIdle","isIdle","refetchItemFields","refetch","useEffect","hasRequiredErrors","_fieldErrors","currentStepFields","values","forEach","currentFieldStateName","isRelatedFieldOkReq","prevActiveStep","validationErr","cloneFieldsValue","onSaveHandler","_fieldsValue","pqsField","flat","parseFloat","page","window","event","submitter","reload","selectItemClassHandler","selectPQSHandler","pqs","selectedPqs","ptype","make","refrigerant","model","refrigeratorcapacity","h","w","l","manufacturer","coolantpacknominalcapacity","numbercoolantpacks","externalvolume","Spinner","onSubmit","Trans","style","overflow","Stepper","Step","StepLabel","width","StepOperations","Form","justifyContent","alignItems","lineHeight","textAlign","DynamicInput","findIndex","itemClass","index","title","itemType","havepqs","preChecked","isRelatedFieldOk","hasRequiredError","version","height","viewBox","marginRight","fill","d"],"sourceRoot":""}