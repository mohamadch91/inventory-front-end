{
  "version": 3,
  "file": "static/js/2248.75b61cb1.chunk.js",
  "mappings": "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",
  "sources": [
    "app/services/maintenance.service.js",
    "app/settings/MaintenanceService.js",
    "app/shared/EditIcon.js",
    "app/shared/SharedTable.js"
  ],
  "sourcesContent": [
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://127.0.0.1:8000/maintanance/\";\n\nclass MaintenanceService {\n  getMaintenanceHelper() {\n    return ApiManager.get(API_URL + \"helper\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenance(item_class, item_type) {\n    const params = { item_class, item_type };\n    return ApiManager.get(API_URL, {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postMaintenance(payload) {\n    return ApiManager.post(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putMaintenance(payload) {\n    return ApiManager.put(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenanceGp(item_class, item_type) {\n    const params = { item_class, item_type };\n    return ApiManager.get(API_URL + \"gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postMaintenanceGp(payload) {\n    return ApiManager.post(API_URL + \"gp\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putMaintenanceGp(payload) {\n    return ApiManager.put(API_URL + \"gp\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenanceActive(item_class, item_type, gp) {\n    const params = { item_class, item_type, gp };\n    return ApiManager.get(API_URL + \"active\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postMaintenanceActive(payload) {\n    return ApiManager.post(API_URL + \"active\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new MaintenanceService();\n",
    "import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useState } from \"react\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../shared/Spinner\";\nimport EditIcon from \"../shared/EditIcon\";\nimport { Form } from \"react-bootstrap\";\nimport \"../styles/table.scss\";\nimport \"../styles/inputs.scss\";\nimport { useEffect } from \"react\";\nimport MaintenanceService from \"../services/maintenance.service\";\nimport { Trans } from \"react-i18next\";\n\nconst defaultValues = {\n  name: \"\",\n  freq: \"\",\n  freq_in_loc: \"\",\n  enable: false,\n  requires: false,\n};\n\nfunction MaintenanceServiceComponent() {\n  const [selectedItemClassAndItemTypes, setSelectedItemClassAndItemTypes] =\n    useState();\n  const [selectedItemType, setSelectedItemType] = useState();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectedToEdit, setSelectedToEdit] = useState(defaultValues);\n\n  const { data: itemClassesWithItemTypes, isLoading: isItemClassesLoading } =\n    useQuery(\n      [\"active-item-classes-with-item-type\"],\n      async () => {\n        const res = await MaintenanceService.getMaintenanceHelper();\n        return res.data;\n      },\n      {\n        onSuccess(data) {\n          setSelectedItemClassAndItemTypes(data[0]);\n          setSelectedItemType(data[0].item_type[0]);\n        },\n      }\n    );\n\n  const {\n    data: maintenances,\n    isLoading: isMaintenancesLoading,\n    refetch: fetchMaintenance,\n  } = useQuery(\n    [\n      \"get-maintenances\",\n      selectedItemType?.id,\n      selectedItemClassAndItemTypes?.item_class.id,\n    ],\n    async () => {\n      const res = await MaintenanceService.getMaintenance(\n        selectedItemClassAndItemTypes?.item_class.id,\n        selectedItemType?.id\n      );\n      return res.data;\n    },\n    { enabled: false }\n  );\n\n  useEffect(() => {\n    if (selectedItemType && selectedItemClassAndItemTypes) {\n      fetchMaintenance();\n    }\n  }, [selectedItemType]);\n\n  const selectItemClassHandler = (e) => {\n    console.log(e.target.value);\n    console.log(itemClassesWithItemTypes);\n    setSelectedItemClassAndItemTypes(itemClassesWithItemTypes[e.target.value]);\n    setSelectedItemType(\n      itemClassesWithItemTypes[e.target.value].item_type?.[0]\n    );\n  };\n\n  const selectItemTypeHandler = (e) => {\n    console.log(e.target.value);\n    console.log(selectedItemClassAndItemTypes);\n    setSelectedItemType(\n      selectedItemClassAndItemTypes.item_type[e.target.value]\n    );\n  };\n\n  const onAcceptHandler = async () => {\n    const payload = {\n      ...selectedToEdit,\n      item_type: selectedItemType?.id,\n      item_class: selectedItemClassAndItemTypes?.item_class.id,\n    };\n    if(await payload.id){\n      MaintenanceService.putMaintenance(payload).then((res) => {\n        fetchMaintenance();\n      }\n      );\n    }\n    else{\n      MaintenanceService.postMaintenance(payload).then((res) => {\n        fetchMaintenance();\n      }\n      );\n\n    }\n    \n    setSelectedToEdit(defaultValues);\n\n    setIsEditMode(false);\n  };\n\n  if (isItemClassesLoading || isMaintenancesLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Maintenance service</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-sm-12 col-lg-6\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-12\">\n                    <Trans>Item class</Trans>\n                  </label>\n                  <div className=\"col-sm-12\">\n                    <Form.Control\n                      onChange={selectItemClassHandler}\n                      className=\"form-select\"\n                      as=\"select\"\n                    >\n                      {itemClassesWithItemTypes.map((itemClass, index) => (\n                        <option\n                          selected={\n                            itemClass?.item_class.id ===\n                            selectedItemClassAndItemTypes?.item_class.id\n                          }\n                          value={index}\n                        >\n                          {itemClass.item_class.title}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </div>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12 col-lg-6\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-12\">\n                    <Trans>Items category</Trans>\n                  </label>\n                  <div className=\"col-sm-12\">\n                    <Form.Control\n                      onChange={selectItemTypeHandler}\n                      className=\"form-select\"\n                      disabled={selectedItemClassAndItemTypes === null}\n                      as=\"select\"\n                    >\n                      {selectedItemClassAndItemTypes?.item_type.map(\n                        (itemType, index) => (\n                          <option selected={itemType.id ===selectedItemType.id} value={index}>{itemType.title}</option>\n                        )\n                      )}\n                    </Form.Control>\n                  </div>\n                </Form.Group>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h3 className=\"page-title mb-3\">\n              {isEditMode ? (\n                <Trans>Edit maintenance service</Trans>\n              ) : (\n                <Trans>New maintenance service</Trans>\n              )}\n            </h3>\n            <Form.Group className=\"row\">\n              <label\n                className=\"col-sm-4\"\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Trans>Service maintenance item</Trans>\n              </label>\n              <div className=\"col-sm-8\">\n                <Form.Control\n                  onChange={(e) => {\n                    e.persist();\n                    setSelectedToEdit((preState) => ({\n                      ...preState,\n                      name: e.target.value,\n                    }));\n                  }}\n                  className=\"form-control\"\n                  value={selectedToEdit?.name}\n                />\n              </div>\n            </Form.Group>\n            <Form.Group className=\"row\">\n              <label\n                className=\"col-sm-4\"\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Trans>Service intervals (days)</Trans>\n              </label>\n              <div className=\"col-sm-8\">\n                <Form.Control\n                  type=\"number\"\n                  min=\"0\"\n                  onChange={(e) => {\n                    e.persist();\n                    setSelectedToEdit((preState) => ({\n                      ...preState,\n                      freq: e.target.value,\n                    }));\n                  }}\n                  className=\"form-control\"\n                  value={selectedToEdit?.freq}\n                />\n              </div>\n            </Form.Group>\n            <Form.Group className=\"row\">\n              <label\n                className=\"col-sm-4\"\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Trans>Interval for locations</Trans>\n              </label>\n              <div className=\"col-sm-8\">\n                <Form.Control\n                  type=\"number\"\n                  min={1}\n                  onChange={(e) => {\n                    e.persist();\n                    setSelectedToEdit((preState) => ({\n                      ...preState,\n                      freq_in_loc: e.target.value,\n                    }));\n                  }}\n                  className=\"form-control\"\n                  value={selectedToEdit?.freq_in_loc}\n                />\n              </div>\n            </Form.Group>\n            <Form.Group className=\"row\">\n              <label\n                className=\"col-sm-4\"\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Trans>Enable</Trans>\n              </label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedToEdit?.enable}\n                  onChange={(e) => {\n                    e.persist();\n                    setSelectedToEdit((preState) => ({\n                      ...preState,\n                      enable: e.target.checked,\n                    }));\n                  }}\n                />\n              </div>\n            </Form.Group>\n            <Form.Group className=\"row\">\n              <label\n                className=\"col-sm-4\"\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Trans>Required</Trans>\n              </label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedToEdit?.requires}\n                  onChange={(e) => {\n                    e.persist();\n                    setSelectedToEdit((preState) => ({\n                      ...preState,\n                      requires: e.target.checked,\n                    }));\n                  }}\n                />\n              </div>\n            </Form.Group>\n            <div className=\"row\">\n              <div className=\"col-sm-1\">\n                <button\n                  disabled={selectedToEdit === defaultValues}\n                  className=\"btn btn-primary\"\n                  onClick={onAcceptHandler}\n                >\n                  <Trans>Accept</Trans>\n                </button>\n              </div>\n              <div className=\"col-sm-1\">\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    setSelectedToEdit(defaultValues);\n                    setIsEditMode(false);\n                  }}\n                >\n                  <Trans>Return</Trans>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body p-3\">\n            <div className=\"row\">\n              <div className=\"mt-5 table-container\">\n                <SharedTable>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className=\"col-sm-5\">\n                        <Trans>Service/ Maintenance items</Trans>\n                      </TableCell>\n                      <TableCell className=\"col-sm-2\">\n                        <Trans>Service intervals (days)</Trans>\n                      </TableCell>\n                      <TableCell className=\"col-sm-2\">\n                        <Trans>Interval for locations</Trans>\n                      </TableCell>\n                      <TableCell className=\"col-sm-1\"><Trans>Enable</Trans></TableCell>\n                      <TableCell className=\"col-sm-1\"><Trans>Required</Trans></TableCell>\n                      <TableCell className=\"col-sm-1\"><Trans>Edit</Trans></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {maintenances?.map((field) => {\n                      return (\n                        <TableRow key={field.id}>\n                          <TableCell className=\"col-sm-5\">\n                            {field.name}\n                          </TableCell>\n                          <TableCell className=\"col-sm-2\">\n                            {field.freq}\n                          </TableCell>\n                          <TableCell className=\"col-sm-2\">\n                            {field.freq_in_loc}\n                          </TableCell>\n                          <TableCell className=\"col-sm-1\">\n                            <input\n                              type=\"checkbox\"\n                              disabled={true}\n                              checked={field.enable}\n                            />\n                          </TableCell>\n                          <TableCell className=\"col-sm-1\">\n                            <input\n                              type=\"checkbox\"\n                              disabled={true}\n                              checked={field.requires}\n                            />\n                          </TableCell>\n                          <TableCell className=\"col-sm-2\">\n                            <button\n                              type=\"button\"\n                              className=\"edit-btn\"\n                              onClick={() => {\n                                setSelectedToEdit(field);\n                                setIsEditMode(true);\n                              }}\n                            >\n                              <EditIcon />\n                            </button>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </SharedTable>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MaintenanceServiceComponent;\n",
    "function EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        width=\"20\"\n        height=\"20\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"
  ],
  "names": [
    "API_URL",
    "MaintenanceService",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "item_class",
    "item_type",
    "params",
    "payload",
    "gp",
    "defaultValues",
    "name",
    "freq",
    "freq_in_loc",
    "enable",
    "requires",
    "useState",
    "selectedItemClassAndItemTypes",
    "setSelectedItemClassAndItemTypes",
    "selectedItemType",
    "setSelectedItemType",
    "isEditMode",
    "setIsEditMode",
    "selectedToEdit",
    "setSelectedToEdit",
    "useQuery",
    "res",
    "data",
    "onSuccess",
    "itemClassesWithItemTypes",
    "isItemClassesLoading",
    "isLoading",
    "id",
    "enabled",
    "maintenances",
    "isMaintenancesLoading",
    "fetchMaintenance",
    "refetch",
    "useEffect",
    "onAcceptHandler",
    "then",
    "className",
    "onChange",
    "e",
    "console",
    "log",
    "target",
    "value",
    "as",
    "map",
    "itemClass",
    "index",
    "selected",
    "title",
    "disabled",
    "itemType",
    "style",
    "display",
    "justifyContent",
    "alignItems",
    "persist",
    "preState",
    "type",
    "min",
    "checked",
    "onClick",
    "field",
    "version",
    "xmlns",
    "viewBox",
    "width",
    "height",
    "xmlnsXlink",
    "d",
    "children"
  ],
  "sourceRoot": ""
}
