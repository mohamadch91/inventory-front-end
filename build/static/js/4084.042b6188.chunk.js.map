{"version":3,"file":"static/js/4084.042b6188.chunk.js","mappings":"4QAwDA,EAlDoB,SAACA,GAAW,IAAD,QAC7B,GAA+CC,EAAAA,EAAAA,UAC7C,CAAC,iBADoD,uBAErD,yGACoBC,EAAAA,EAAAA,UAAsB,QAAUF,EAAMG,UAD1D,cACQC,EADR,yBAESA,EAAIC,MAFb,2CAIA,CACEC,gBAAgB,IAPZD,EAAR,EAAQA,KAWR,OAXA,EAAcE,WAYL,SAACC,EAAA,EAAD,KAETC,QAAQC,IAAI,WACZD,QAAQC,IAAIL,IAGV,gBAAKM,UAAU,wBAAf,UACE,mBAAOA,UAAU,QAAjB,WACE,4BACE,2BACE,yBACE,SAACC,EAAA,EAAD,4BAEF,yBACE,SAACA,EAAA,EAAD,2BAEF,yBACE,SAACA,EAAA,EAAD,0BAEF,yBACE,SAACA,EAAA,EAAD,2BAIN,4BACE,2BACE,kCAAKP,EAAK,UAAV,aAAK,EAASQ,cACd,kCAAKR,EAAK,UAAV,aAAK,EAASS,aACd,kCAAKT,EAAK,UAAV,aAAK,EAASU,YACd,kCAAKV,EAAK,UAAV,aAAK,EAASW,iBAMzB,E,sBCeD,EA/De,WACb,OAAgCC,EAAAA,EAAAA,YAAhC,eAAOd,EAAP,KAAiBe,EAAjB,KACA,GAA8CD,EAAAA,EAAAA,WAAS,GAAvD,eAAOE,EAAP,KAAwBC,EAAxB,KACA,GAAoCH,EAAAA,EAAAA,WAAS,GAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KAqBA,OACE,iBAAKX,UAAS,2BAAsBY,EAAAA,EAAAA,UAApC,WACE,mBACEC,QAZgB,WACpBF,GAAc,EACf,EAWKG,KAAK,SACLd,UAAU,0CAHZ,4BAQCQ,IACC,SAAC,IAAD,CACER,UAAW,eACXe,SAhCY,SAACC,EAAQC,GACrBD,IACJT,EAAW,OAACS,QAAD,IAACA,OAAD,EAACA,EAAQE,MACpBT,GAAmB,IAGfQ,GACJnB,QAAQC,IAAIkB,EAEf,EAwBOE,UAAW,MAGd3B,IAAagB,IACZ,gBAAKR,UAAU,+BAAf,UACE,eAAIA,UAAU,YAAd,yCAIHU,IACC,4BACE,SAAC,EAAD,CAAalB,SAAUA,KACvB,mBACEqB,QAjCa,WACrBN,EAAY,MACZE,GAAmB,GACnBE,GAAc,EACf,EA8BSG,KAAK,SACLd,UAAU,mCAHZ,iCAWT,C,sBClED,KAAgB,gBAAkB,iCAAiC,oBAAsB,qCAAqC,iBAAmB,kCAAkC,SAAW,0B","sources":["app/items/scan-qr/ResultTable.js","app/items/scan-qr/ScanQR.js","webpack://inventory/./src/app/items/items-qr/ItemsQR.module.css?d7e8"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport ItemService from \"../../services/item.service\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Trans } from \"react-i18next\";\n\nconst ResultTable = (props) => {\n  const { data, isLoading: formDataIsLoading } = useQuery(\n    [\"result-table\"],\n    async () => {\n      const res = await ItemService.getQrData(\"code=\" + props.QRString);\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (formDataIsLoading) {\n    return <Spinner />;\n  }\n  console.log(\"data is\");\n  console.log(data);\n\n  return (\n    <div className=\"table-responsive mt-3\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>\n              <Trans>Item Class</Trans>\n            </th>\n            <th>\n              <Trans>Item Type</Trans>\n            </th>\n            <th>\n              <Trans>PQS code</Trans>\n            </th>\n            <th>\n              <Trans>Code</Trans>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{data[0]?.item_class}</td>\n            <td>{data[0]?.item_type}</td>\n            <td>{data[0]?.pqs_code}</td>\n            <td>{data[0]?.code}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ResultTable;\n","import React, { useState } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport ResultTable from \"./ResultTable\";\nimport adapter from \"webrtc-adapter\";\nimport classes from \"../items-qr/ItemsQR.module.css\";\n\nconst ScanQR = () => {\n  const [QRString, setQRString] = useState();\n  const [cameraAvailable, setCameraAvailable] = useState(true);\n  const [showResult, setShowResult] = useState(false);\n\n  const scanHandler = (result, error) => {\n    if (!!result) {\n      setQRString(result?.text);\n      setCameraAvailable(false);\n    }\n\n    if (!!error) {\n      console.log(error);\n    }\n  };\n  const submitHandler = () => {\n    setShowResult(true);\n  };\n  const refreshHandler = () => {\n    setQRString(null);\n    setCameraAvailable(true);\n    setShowResult(false);\n  };\n\n  return (\n    <div className={`card w-75 m-auto ${classes.scanPage}`}>\n      <button\n        onClick={submitHandler}\n        type=\"button\"\n        className=\"btn btn-primary btn-fw mt-3 w-75 m-auto\"\n      >\n        Search QR code\n      </button>\n\n      {cameraAvailable && (\n        <QrReader\n          className={\"w-75 m-auto \"}\n          onResult={scanHandler}\n          scanDelay={3000}\n        />\n      )}\n      {QRString && !cameraAvailable && (\n        <div className=\"w-75 m-auto pt-3 text-center\">\n          <h3 className=\"display-4\">Code Scanned Successfully</h3>\n        </div>\n      )}\n\n      {showResult && (\n        <div>\n          <ResultTable QRString={QRString} />\n          <button\n            onClick={refreshHandler}\n            type=\"button\"\n            className=\"btn btn-light btn-fw mt-3 w-25  \"\n          >\n            Search QR code\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScanQR;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputResponsive\":\"ItemsQR_inputResponsive__ShY-3\",\"codeInputResponsive\":\"ItemsQR_codeInputResponsive__iEFAF\",\"buttonResponsive\":\"ItemsQR_buttonResponsive__OgujR\",\"scanPage\":\"ItemsQR_scanPage__1C9Ao\"};"],"names":["props","useQuery","ItemService","QRString","res","data","refetchOnMount","isLoading","Spinner","console","log","className","Trans","item_class","item_type","pqs_code","code","useState","setQRString","cameraAvailable","setCameraAvailable","showResult","setShowResult","classes","onClick","type","onResult","result","error","text","scanDelay"],"sourceRoot":""}