{"version":3,"file":"static/js/3780.532a4987.chunk.js","mappings":"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","sources":["app/helpers/seperator.js","app/settings/Country.js"],"sourcesContent":["import i18n from \"../../i18n\";\n\nexport const getLanguage = () => {\n    return i18n.language;\n    }\n\nexport const seperator = () => {\n    if(getLanguage() === \"ar\" || getLanguage() === \"en\"){\n        return \".\";\n    }\n    else{\n        return \",\";\n    }\n}\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport UserService from \"../services/user.service\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"./country.css\";\nimport * as XLSX from \"xlsx\";\nimport { toast } from \"react-hot-toast\";\nimport Map from \"./Map\";\nimport { Translation,Trans } from \"react-i18next\";\nimport { seperator } from \"../helpers/seperator\";\n\nimport \"./country.scss\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\nexport class Country extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: 4,\n      validated: false,\n      CountryName: \"\",\n      CountryCode: \"\",\n      Currency: \"\",\n      logo: null,\n      slogo: null,\n      growthRate: 0,\n      mainlocation: \"\",\n      enableHR: false,\n      enableMaintaining: false,\n      targetpopulation: \"General population\",\n      requiredcapacities: true,\n      excelData: [],\n      user: JSON.parse(localStorage.getItem(\"user\")),\n      country: JSON.parse(localStorage.getItem(\"country\")),\n      put: false,\n      snackopen: false,\n      type: \"success\",\n      isCountyValid: false,\n      isCountyCodeValid: false,\n      isCurrencyValid: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleExcelChange = this.handleExcelChange.bind(this);\n    this.isCountryValid = this.isCountryValid.bind(this);\n    this.isCurrencyValid = this.isCurrencyValid.bind(this);\n    this.isCountryCodeValid = this.isCountryCodeValid.bind(this);\n    this.handlemapclick = this.handlemapclick.bind(this);\n  }\n  changestate = (e, state) => {\n    this.setState({ [state]: e.target.value });\n  };\n  alerthandle(message, type) {\n    this.setState({ content: message, type: type, snackopen: true });\n  }\n  handleChange = (date) => {\n    this.setState({\n      startDate: date,\n    });\n  };\n  handlemapclick(e) {\n    let str = \"LatLng(\" + e.latlng.lat + \",\" + e.latlng.lng + \")\";\n    this.setState({ mainlocation: str});\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (\n      !this.isCountryCodeValid() ||\n      !this.isCurrencyValid() ||\n      !this.isCountryValid()\n    ) {\n      this.setState({ validated: false });\n      event.preventDefault();\n      event.stopPropagation();\n      toast.error(<Trans>complete form correctly</Trans>);\n      return;\n    }\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n            toast.error(<Trans>complete form correctly</Trans>);\n\n    } else {\n      this.setState({ validated: true });\n      let formData = new FormData();\n      formData.append(\"country\", this.state.CountryName);\n      formData.append(\"codecountry\", this.state.CountryCode);\n      formData.append(\"currency\", this.state.Currency);\n      formData.append(\"levels\", this.state.levels);\n      if (this.state.logo !== null && typeof this.state.logo !== \"string\") {\n        formData.append(\"logo\", this.state.logo);\n      }\n      if (this.state.slogo !== null && typeof this.state.slogo !== \"string\") {\n        formData.append(\"secondLogo\", this.state.slogo);\n      }\n      let rate =this.state.growthRate\n      rate=rate.replace(seperator(),\".\")\n      rate=parseFloat(rate)\n      formData.append(\"poptarget\", this.state.targetpopulation);\n      formData.append(\n        \"poprate\",\n                  rate\n      );\n      formData.append(\"havehr\", this.state.enableHR);\n      formData.append(\"mainlocation\", this.state.mainlocation);\n      formData.append(\"logo2\", this.state.logo2);\n      formData.append(\"usingtool\", this.state.requiredcapacities);\n      formData.append(\"usingmaintenance\", this.state.enableMaintaining);\n      console.log(this.state.country)\n      if (this.state.user?.admin && Object.keys(this.state.country).length) {\n        formData.append(\"id\", this.state.country.id);\n        UserService.editcountry(formData)\n          .then((res) => {\n            const perviuscountry = JSON.parse(localStorage.getItem(\"country\"));\n            localStorage.setItem(\"country\", JSON.stringify(res.data));\n            const country = JSON.parse(localStorage.getItem(\"country\"));\n            if (country.levels > perviuscountry.levels) {\n              for (let i = 0; i < country.levels - perviuscountry.levels; i++) {\n                const data = {\n                  maxpop: 0,\n                  minpop: 0,\n                  uppervol: 0,\n                  undervol: 0,\n                  m25vol: 0,\n                  m70vol: 0,\n                  m25volnew: 0,\n                  m70volnew: 0,\n                  uppervolnew: 0,\n                  undervolnew: 0,\n                  name: \"levels\" + (perviuscountry.levels + i + 1),\n                  dryvol: 0,\n                  dryvolnew: 0,\n                  country: 1,\n                  parent: perviuscountry.levels + i - 1,\n                };\n                UserService.addlevel(data)\n                  .then((res) => {\n                    console.log(res);\n                  })\n                  .catch((err) => {\n                    console.log(err);\n                  });\n              }\n            }\n            this.setState({\n              CountryName: country.country,\n              CountryCode: country.codecountry,\n              Currency: country.currency,\n              levels: country.levels,\n              logo: country.logo,\n              slogo: country.secondLogo,\n              growthRate: country.poprate,\n              targetpopulation: country.poptarget,\n              enableHR: country.havehr,\n              mainlocation: country.mainlocation,\n              requiredcapacities: country.usingtool,\n              enableMaintaining: country.usingmaintenance,\n            });\n            this.alerthandle(\"Country changed successfully\", \"success\");\n            toast.success(<Trans>Country changed successfully</Trans>);\n          })\n          .catch((err) => {\n            this.alerthandle(\"Country changed unsuccessfully\", \"error\");\n            toast.error(<Trans>Country changed unsuccessfully</Trans>);\n          });\n      } else {\n        UserService.addcountry(formData)\n          .then((res) => {\n            this.alerthandle(\"Country added successfully\", \"success\");\n            toast.success(\"Country added successfully\");\n            localStorage.setItem(\"country\", JSON.stringify(res.data));\n            const country = JSON.parse(localStorage.getItem(\"country\"));\n            for (let i = 0; i < country.levels; i++) {\n              const data = {\n                maxpop: 0,\n                minpop: 0,\n                uppervol: 0,\n                undervol: 0,\n                m25vol: 0,\n                m70vol: 0,\n                m25volnew: 0,\n                m70volnew: 0,\n                uppervolnew: 0,\n                undervolnew: 0,\n                name: \"levels\" + i,\n                dryvol: 0,\n                dryvolnew: 0,\n                country: 1,\n                parent: i === 0 ? null : i - 1,\n              };\n              UserService.addlevel(data)\n                .then((res) => {\n                  console.log(res);\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n            }\n            this.setState({\n              CountryName: country.country,\n              CountryCode: country.codecountry,\n              Currency: country.currency,\n              levels: country.levels,\n              logo: country.logo,\n              slogo: country.secondLogo,\n              growthRate: country.poprate,\n              targetpopulation: country.poptarget,\n              enableHR: country.havehr,\n              mainlocation: country.mainlocation,\n              requiredcapacities: country.usingtool,\n              enableMaintaining: country.usingmaintenance,\n            });\n          })\n          .catch((err) => {\n            this.alerthandle(\"Country added unsuccessfully\", \"error\");\n            toast.error(\"Country added unsuccessfully\");\n          });\n      }\n    }\n  };\n  isCountryCodeValid = () => {\n    var hasNumber = /\\d/;\n    if (this.state.CountryCode?.length === 0) {\n      return true;\n    }\n    if (this.state.CountryCode?.length > 3) {\n      return false;\n    }\n    if (this.state.CountryCode?.length < 3) {\n      return false;\n    }\n    if (hasNumber.test(this.state.CountryCode)) {\n      return false;\n    }\n    return true;\n  };\n  isCountryValid = () => {\n    if (\n      this.state.CountryName?.length > 1 &&\n      !/\\d/.test(this.state.CountryName)\n    ) {\n      return true;\n    }\n    return false;\n  };\n  isCurrencyValid = () => {\n    if (\n      this.state.Currency?.length > 0 &&\n      this.state.Currency?.length < 4 &&\n      !/\\d/.test(this.state.Currency)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  handleExcelChange(e) {\n    const [file] = e.target.files;\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      this.setState({ excelData: data });\n    };\n    reader.readAsBinaryString(file);\n  }\n  handleClosesnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ snackopen: false });\n  };\n\n  componentDidMount() {\n    // bsCustomFileInput.init()\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const country = JSON.parse(localStorage.getItem(\"country\"));\n\n    if (Object.keys(country).length !== 0) {\n      this.setState({\n        CountryName: country.country,\n        CountryCode: country.codecountry,\n        Currency: country.currency,\n        levels: country.levels,\n        logo: country.logo,\n        slogo: country.secondLogo,\n        growthRate: country.poprate,\n        targetpopulation: country.poptarget,\n        enableHR: country.havehr,\n        mainlocation: country.mainlocation,\n        requiredcapacities: country.usingtool,\n        enableMaintaining: country.usingmaintenance,\n        country: country,\n      });\n    }\n\n    this.setState({ user: user });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h1 className=\"page-title\">\n            {\" \"}\n            <Trans>Settings</Trans>{\" \"}\n          </h1>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">\n                  <Trans>Add Country</Trans>\n                </h4>\n                <Form\n                  noValidate\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit}\n                  className=\"form-sample\"\n                >\n                  <h3 className=\" card-description text-bold\">\n                    {\" \"}\n                    <Trans>Country</Trans> <Trans>Information</Trans>\n                  </h3>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label control-label\">\n                          <Trans>Country</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            isValid={this.isCountryValid()}\n                            isInvalid={!this.isCountryValid()}\n                            value={this.state.CountryName}\n                            onChange={(e) => {\n                              this.setState({ CountryName: e.target.value });\n                            }}\n                            required\n                            placeholder=\"Example: USA\"\n                            type=\"text\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                          <Trans>Country</Trans> <Trans>code</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            disabled={true}\n                            required\n                            isInvalid={!this.isCountryCodeValid()}\n                            isValid={this.isCountryCodeValid()}\n                            value={this.state.CountryCode}\n                            onChange={(e) => {\n                              const code = e.target.value;\n                              const x = code.toString().toUpperCase();\n                              this.setState({ CountryCode: x });\n                            }}\n                            placeholder=\"Example: ABC\"\n                            type=\"text\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                          <Trans>Currency</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <div className=\"input-group\">\n                            <Form.Control\n                              required\n                              disabled={!this.state.user?.admin}\n                              isInvalid={!this.isCurrencyValid()}\n                              isValid={this.isCurrencyValid()}\n                              value={this.state.Currency}\n                              onChange={(e) => {\n                                this.setState({ Currency: e.target.value });\n                              }}\n                              placeholder=\"Example: $\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              aria-label=\"Amount (to the nearest dollar)\"\n                            />\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                          <Trans>Allowed levels</Trans>\n                        </label>\n                        <div\n                          style={{ marginTop: \"2.5%\" }}\n                          className=\"col-sm-9 \"\n                        >\n                          <Form.Control\n                            disabled={!this.state.user?.admin}\n                            required\n                            onChange={(e) => {\n                              this.setState({ levels: e.target.value });\n                            }}\n                            type=\"range\"\n                            min=\"1\"\n                            max=\"8\"\n                            step=\"1\"\n                            value={this.state.levels}\n                          />\n\n                          <label className=\"col-sm-3 col-form-label  \">\n                            <Trans>Value</Trans>: {this.state.levels}{\" \"}\n                          </label>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label \">\n                          <Trans>\n                            Logo 1: jpg.jpeg.png, aspect ration 16:4\n                          </Trans>\n                        </label>\n                        <div className=\"col-sm-9 mt-3\">\n                          <div className=\"custom-file \">\n                            <Form.Control\n                              onChange={(e) => {\n                                this.setState({ logo: e.target.files[0] });\n                              }}\n                              disabled={!this.state.user?.admin}\n                              type=\"file\"\n                              className=\"form-control visibility-hidden\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              accept=\"image/png, image/jpeg, image/jpg\"\n                            />\n                            <Translation>\n                              {(t, { i18n }) => (\n                                <label\n                                  className=\"custom-file-label\"\n                                  htmlFor=\"customFileLang\"\n                                  datacustomattr={t(\"Browse\")}\n                                >\n                                  {this.state.logo !== null ? (\n                                    this.state.logo.name\n                                  ) : (\n                                    <Trans>Upload image</Trans>\n                                  )}\n\n                                  {typeof this.state.logo === \"string\"\n                                    ? this.state.logo.split(\"/\")[2]\n                                    : \"\"}\n                                </label>\n                              )}\n                            </Translation>\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label \">\n                          <Trans>Logo 2: jpg.jpeg.png, aspect ration 1:1</Trans>\n                        </label>\n                        <div className=\"col-sm-9 mt-3\">\n                          <div className=\"custom-file \">\n                            <Form.Control\n                              onChange={(e) => {\n                                this.setState({ slogo: e.target.files[0] });\n                              }}\n                              disabled={!this.state.user?.admin}\n                              type=\"file\"\n                              className=\"form-control visibility-hidden\"\n                              id=\"customFileLang1\"\n                              lang=\"es\"\n                              accept=\"image/png, image/jpeg, image/jpg\"\n                            />\n                            <Translation>\n                              {(t, { i18n }) => (\n                                <label\n                                  className=\"custom-file-label\"\n                                  htmlFor=\"customFileLang1\"\n                                  datacustomattr={t(\"Browse\")}\n                                >\n                                  {this.state.slogo !== null ? (\n                                    this.state.slogo.name\n                                  ) : (\n                                    <Trans>Upload image</Trans>\n                                  )}\n                                  {typeof this.state.slogo === \"string\"\n                                    ? this.state.slogo.split(\"/\")[2]\n                                    : \"\"}\n                                </label>\n                              )}\n                            </Translation>\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-md-6 \">\n                      <Form.Group className=\" row  \">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                          <Trans>Annual population growth rate (%)</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <div className=\"input-group \">\n                            <Form.Control\n                              disabled={!this.state.user?.admin}\n                              required\n                              isValid={true}\n                              value={this.state.growthRate\n                                .toString()\n                                .replace(\".\", seperator())}\n                              onKeyPress={(e) => {\n                                e.persist();\n                                const numericKeys=\"0123456789\"+seperator()\n                                if (numericKeys.indexOf(e.key)===-1){\n                                   e.preventDefault();\n                                   return;\n                                }\n                                let number = e.target.value.replace(\n                                  seperator(),\n                                  \".\"\n                                );\n                                const flag = number.split(\".\").length;\n                                if (flag > 1) {\n                                  const num = number.split(\".\")[0];\n                                  const floatpoint = number\n                                    .split(\".\")[1]\n                                    .slice(0, 2);\n                                  number = num + \".\" + floatpoint;\n                                }\n\n                                this.setState({\n                                  growthRate: number.replace(\".\", seperator()),\n                                });\n                                \n                              }}\n                              onChange={(e) => {\n                                let number = e.target.value.replace(\n                                  seperator(),\n                                  \".\"\n                                );\n                                const flag = number.split(\".\").length;\n                                if (flag > 1) {\n                                  const num = number.split(\".\")[0];\n                                  const floatpoint = number\n                                    .split(\".\")[1]\n                                    .slice(0, 2);\n                                  number = num + \".\" + floatpoint;\n                                }\n\n                                this.setState({\n                                  growthRate: number.replace(\".\", seperator()),\n                                });\n                              }}\n                              type=\"string\"\n                              className=\"form-control\"\n                              aria-label=\"Amount (to the nearest dollar)\"\n                            />\n                            <div className=\"input-group-append h-75 pb-3\">\n                              <span className=\"input-group-text\">%</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-5 col-form-label\">\n                          <Trans>Enable HR data</Trans>\n                        </label>\n                        <div className=\"col-sm-7\">\n                          <Form.Check\n                            disabled={!this.state.user?.admin}\n                            checked={this.state.enableHR}\n                            value={this.state.enableHR}\n                            onChange={(e) => {\n                              // e.preventDefault()\n                              this.setState({ enableHR: !this.state.enableHR });\n                            }}\n                            type=\"switch\"\n                            label=\"\"\n                            id=\"disabled-custom-switch\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-5 col-form-label\">\n                          <Trans>Enable maintenance functions</Trans>\n                        </label>\n                        <div className=\"col-sm-7\">\n                          <Form.Check\n                            checked={this.state.enableMaintaining}\n                            disabled={!this.state.user?.admin}\n                            onChange={(e) => {\n                              this.setState({\n                                enableMaintaining:\n                                  !this.state.enableMaintaining,\n                              });\n                            }}\n                            type=\"switch\"\n                            label=\"\"\n                            id=\"disabled-custom\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                          <Trans>Target populations:</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            required\n                            disabled={!this.state.user?.admin}\n                            onChange={(e) => {\n                              this.setState({\n                                targetpopulation: e.target.value,\n                              });\n                            }}\n                            value={this.state.targetpopulation}\n                            className=\"form-select\"\n                            as=\"select\"\n                          >\n                            <Translation>\n                              {(t, { i18n }) => (\n                                <option value=\"General population\">\n                                  {t(\"General populations\")}\n                                </option>\n                              )}\n                            </Translation>\n                            <Translation>\n                              {(t, { i18n }) => (\n                                <option value=\"Under-1 Population\">\n                                  {t(\"Under-1 populations\")}\n                                </option>\n                              )}\n                            </Translation>\n                          </Form.Control>\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                          <Trans>Required capacity</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            required\n                            disabled={!this.state.user?.admin}\n                            onChange={(e) => {\n                              const value =\n                                e.target.value === \"true\" ? true : false;\n                              this.setState({\n                                requiredcapacities: value,\n                              });\n                            }}\n                            value={this.state.requiredcapacities}\n                            className=\"form-select\"\n                            as=\"select\"\n                          >\n                            <Translation>\n                              {(t, { i18n }) => (\n                                <option\n                                  value={true}\n                                  key=\"Estimate required capacity (in MS Excel)\"\n                                >\n                                  {t(\n                                    \"Import from Assistant Tool (in MS Excel)\"\n                                  )}\n                                </option>\n                              )}\n                            </Translation>\n\n                            <Translation>\n                              {(t, { i18n }) => (\n                                <option value={false}>\n                                  {t(\"Enter manually\")}\n                                </option>\n                              )}\n                            </Translation>\n                          </Form.Control>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <Form.Group className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label className=\"col-sm-3 col-form-label \">\n                        <Trans>Main location</Trans>\n                      </label>\n                      <div className=\"map\">\n                        <Map\n                          loca={this.state.mainlocation}\n                          handleChange={this.handlemapclick}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"mt-5\">\n                        <div className=\"col-sm-12\">\n                          <Form.Control\n                            disabled\n                            value={this.state.mainlocation}\n                            onChange={(e) => {\n                              this.setState({ mainlocation: e.target.value });\n                            }}\n                            type=\"text\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </Form.Group>\n\n                  {this.state.country !== [] &&\n                  this.state.country !== undefined &&\n                  this.state.user?.admin ? (\n                    <button type=\"submit\" className=\"btn w-25 btn-primary mr-2\">\n                      <Trans>Save</Trans>\n                    </button>\n                  ) : (\n                    <button\n                      type=\"submit\"\n                      disabled\n                      className=\"btn w-25 btn-primary mr-2\"\n                    >\n                      <Trans>Save</Trans>\n                    </button>\n                  )}\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Country;\n"],"names":["getLanguage","i18n","seperator","L","iconRetinaUrl","require","iconUrl","shadowUrl","Country","props","changestate","e","state","setState","target","value","handleChange","date","startDate","handleSubmit","event","preventDefault","stopPropagation","form","currentTarget","isCountryCodeValid","isCurrencyValid","isCountryValid","validated","toast","Trans","checkValidity","formData","FormData","append","CountryName","CountryCode","Currency","levels","logo","slogo","rate","growthRate","replace","parseFloat","targetpopulation","enableHR","mainlocation","logo2","requiredcapacities","enableMaintaining","console","log","country","user","admin","Object","keys","length","id","UserService","then","res","perviuscountry","JSON","parse","localStorage","getItem","setItem","stringify","data","i","maxpop","minpop","uppervol","undervol","m25vol","m70vol","m25volnew","m70volnew","uppervolnew","undervolnew","name","dryvol","dryvolnew","parent","catch","err","codecountry","currency","secondLogo","poprate","poptarget","havehr","usingtool","usingmaintenance","alerthandle","test","handleClosesnack","reason","snackopen","excelData","put","type","isCountyValid","isCountyCodeValid","bind","handleExcelChange","handlemapclick","message","this","content","str","latlng","lat","lng","file","files","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","header","readAsBinaryString","className","Form","noValidate","onSubmit","isValid","isInvalid","onChange","required","placeholder","disabled","x","toString","toUpperCase","style","marginTop","min","max","step","lang","accept","Translation","t","htmlFor","datacustomattr","split","onKeyPress","persist","indexOf","key","number","num","floatpoint","slice","checked","label","as","Map","loca","undefined","Component"],"sourceRoot":""}