{"version":3,"file":"static/js/6598.5a9cb8ce.chunk.js","mappings":"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","sources":["app/settings/Country.js","app/settings/Map.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport UserService from \"../services/user.service\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"./country.css\";\nimport * as XLSX from \"xlsx\";\nimport { toast } from \"react-hot-toast\";\nimport Map from \"./Map\";\nimport { Trans } from \"react-i18next\";\n\nimport \"./country.scss\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\nexport class Country extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: 4,\n      validated: false,\n      CountryName: \"\",\n      CountryCode: \"\",\n      Currency: \"\",\n      logo: null,\n      slogo: null,\n      growthRate: 0,\n      mainlocation: \"\",\n      enableHR: false,\n      enableMaintaining: false,\n      targetpopulation: \"General population\",\n      requiredcapacities: true,\n      excelData: [],\n      user: JSON.parse(localStorage.getItem(\"user\")),\n      country: JSON.parse(localStorage.getItem(\"country\")),\n      put: false,\n      snackopen: false,\n      type: \"success\",\n      isCountyValid: false,\n      isCountyCodeValid: false,\n      isCurrencyValid: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleExcelChange = this.handleExcelChange.bind(this);\n    this.isCountryValid = this.isCountryValid.bind(this);\n    this.isCurrencyValid = this.isCurrencyValid.bind(this);\n    this.isCountryCodeValid = this.isCountryCodeValid.bind(this);\n    this.handlemapclick = this.handlemapclick.bind(this);\n  }\n  changestate = (e, state) => {\n    this.setState({ [state]: e.target.value });\n  };\n  alerthandle(message, type) {\n    this.setState({ content: message, type: type, snackopen: true });\n  }\n  handleChange = (date) => {\n    this.setState({\n      startDate: date,\n    });\n  };\n  handlemapclick(e) {\n    this.setState({ mainlocation: e.latlng });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (\n      !this.isCountryCodeValid() ||\n      !this.isCurrencyValid() ||\n      !this.isCountryValid()\n    ) {\n      this.setState({ validated: false });\n      event.preventDefault();\n      event.stopPropagation();\n      toast.error(\"complete form correctly\");\n      return;\n    }\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      toast.error(\"complete form correctly\");\n    } else {\n      this.setState({ validated: true });\n      let formData = new FormData();\n      formData.append(\"country\", this.state.CountryName);\n      formData.append(\"codecountry\", this.state.CountryCode);\n      formData.append(\"currency\", this.state.Currency);\n      formData.append(\"levels\", this.state.levels);\n      if (this.state.logo !== null && typeof this.state.logo !== \"string\") {\n        formData.append(\"logo\", this.state.logo);\n      }\n      if (this.state.slogo !== null && typeof this.state.slogo !== \"string\") {\n        formData.append(\"secondLogo\", this.state.slogo);\n      }\n\n      formData.append(\"poptarget\", this.state.targetpopulation);\n      formData.append(\"poprate\", this.state.growthRate);\n      formData.append(\"havehr\", this.state.enableHR);\n      formData.append(\"mainlocation\", this.state.mainlocation);\n      formData.append(\"logo2\", this.state.logo2);\n      formData.append(\"usingtool\", this.state.requiredcapacities);\n      formData.append(\"usingmaintenance\", this.state.enableMaintaining);\n\n      if (this.state.user.admin && Object.keys(this.state.country).length) {\n        formData.append(\"id\", this.state.country.id);\n        UserService.editcountry(formData)\n          .then((res) => {\n            const perviuscountry = JSON.parse(localStorage.getItem(\"country\"));\n            localStorage.setItem(\"country\", JSON.stringify(res.data));\n            const country = JSON.parse(localStorage.getItem(\"country\"));\n            if (country.levels > perviuscountry.levels) {\n              for (let i = 0; i < country.levels - perviuscountry.levels; i++) {\n                const data = {\n                  maxpop: 0,\n                  minpop: 0,\n                  uppervol: 0,\n                  undervol: 0,\n                  m25vol: 0,\n                  m70vol: 0,\n                  m25volnew: 0,\n                  m70volnew: 0,\n                  uppervolnew: 0,\n                  undervolnew: 0,\n                  name: \"levels\" + (perviuscountry.levels + i + 1),\n                  dryvol: 0,\n                  dryvolnew: 0,\n                  country: 1,\n                  parent: perviuscountry.levels + i - 1,\n                };\n                UserService.addlevel(data)\n                  .then((res) => {\n                    console.log(res);\n                  })\n                  .catch((err) => {\n                    console.log(err);\n                  });\n              }\n            }\n            this.setState({\n              CountryName: country.country,\n              CountryCode: country.codecountry,\n              Currency: country.currency,\n              levels: country.levels,\n              logo: country.logo,\n              slogo: country.secondLogo,\n              growthRate: country.poprate,\n              targetpopulation: country.poptarget,\n              enableHR: country.havehr,\n              mainlocation: country.mainlocation,\n              requiredcapacities: country.usingtool,\n              enableMaintaining: country.usingmaintenance,\n            });\n            this.alerthandle(\"Country changed successfully\", \"success\");\n            toast.success(\"Country changed successfully\");\n          })\n          .catch((err) => {\n            this.alerthandle(\"Country changed unsuccessfully\", \"error\");\n            toast.error(\"Country changed unsuccessfully\");\n          });\n      } else {\n        UserService.addcountry(formData)\n          .then((res) => {\n            this.alerthandle(\"Country added successfully\", \"success\");\n            toast.success(\"Country added successfully\");\n            localStorage.setItem(\"country\", JSON.stringify(res.data));\n            const country = JSON.parse(localStorage.getItem(\"country\"));\n            for (let i = 0; i < country.levels; i++) {\n              const data = {\n                maxpop: 0,\n                minpop: 0,\n                uppervol: 0,\n                undervol: 0,\n                m25vol: 0,\n                m70vol: 0,\n                m25volnew: 0,\n                m70volnew: 0,\n                uppervolnew: 0,\n                undervolnew: 0,\n                name: \"levels\" + i,\n                dryvol: 0,\n                dryvolnew: 0,\n                country: 1,\n                parent: i === 0 ? null : i - 1,\n              };\n              UserService.addlevel(data)\n                .then((res) => {\n                  console.log(res);\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n            }\n            this.setState({\n              CountryName: country.country,\n              CountryCode: country.codecountry,\n              Currency: country.currency,\n              levels: country.levels,\n              logo: country.logo,\n              slogo: country.secondLogo,\n              growthRate: country.poprate,\n              targetpopulation: country.poptarget,\n              enableHR: country.havehr,\n              mainlocation: country.mainlocation,\n              requiredcapacities: country.usingtool,\n              enableMaintaining: country.usingmaintenance,\n            });\n          })\n          .catch((err) => {\n            this.alerthandle(\"Country added unsuccessfully\", \"error\");\n            toast.error(\"Country added unsuccessfully\");\n          });\n      }\n    }\n  };\n  isCountryCodeValid = () => {\n    var hasNumber = /\\d/;\n    if (this.state.CountryCode.length === 0) {\n      return true;\n    }\n    if (this.state.CountryCode.length > 3) {\n      return false;\n    }\n    if (this.state.CountryCode.length < 3) {\n      return false;\n    }\n    if (hasNumber.test(this.state.CountryCode)) {\n      return false;\n    }\n    return true;\n  };\n  isCountryValid = () => {\n    if (\n      this.state.CountryName.length > 1 &&\n      !/\\d/.test(this.state.CountryName)\n    ) {\n      return true;\n    }\n    return false;\n  };\n  isCurrencyValid = () => {\n    if (\n      this.state.Currency.length > 0 &&\n      this.state.Currency.length < 4 &&\n      !/\\d/.test(this.state.Currency)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  handleExcelChange(e) {\n    const [file] = e.target.files;\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      this.setState({ excelData: data });\n    };\n    reader.readAsBinaryString(file);\n  }\n  handleClosesnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ snackopen: false });\n  };\n\n  componentDidMount() {\n    // bsCustomFileInput.init()\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const country = JSON.parse(localStorage.getItem(\"country\"));\n\n    if (Object.keys(country).length !== 0) {\n      this.setState({\n        CountryName: country.country,\n        CountryCode: country.codecountry,\n        Currency: country.currency,\n        levels: country.levels,\n        logo: country.logo,\n        slogo: country.secondLogo,\n        growthRate: country.poprate,\n        targetpopulation: country.poptarget,\n        enableHR: country.havehr,\n        mainlocation: country.mainlocation,\n        requiredcapacities: country.usingtool,\n        enableMaintaining: country.usingmaintenance,\n        country: country,\n      });\n    }\n\n    this.setState({ user: user });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\"> <Trans>Settings</Trans> </h3>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\"><Trans>Add Country</Trans></h4>\n                <Form\n                  noValidate\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit}\n                  className=\"form-sample\"\n                >\n                  <h3 className=\" card-description text-bold\">\n                    {\" \"}<Trans>\n                    Country info{\" \"}</Trans>\n                  </h3>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label control-label\">\n                     <Trans>     Country</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            isValid={this.isCountryValid()}\n                            isInvalid={!this.isCountryValid()}\n                            value={this.state.CountryName}\n                            onChange={(e) => {\n                              this.setState({ CountryName: e.target.value });\n                            }}\n                            required\n                            placeholder=\"Example: USA\"\n                            type=\"text\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                        <Trans>  Country code</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            disabled={!this.state.user.admin}\n                            required\n                            isInvalid={!this.isCountryCodeValid()}\n                            isValid={this.isCountryCodeValid()}\n                            value={this.state.CountryCode}\n                            onChange={(e) => {\n                              const code = e.target.value;\n                              const x = code.toString().toUpperCase();\n                              this.setState({ CountryCode: x });\n                            }}\n                            placeholder=\"Example: ABC\"\n                            type=\"text\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                       <Trans>   Currency</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <div className=\"input-group\">\n                            <Form.Control\n                              required\n                              disabled={!this.state.user.admin}\n                              isInvalid={!this.isCurrencyValid()}\n                              isValid={this.isCurrencyValid()}\n                              value={this.state.Currency}\n                              onChange={(e) => {\n                                this.setState({ Currency: e.target.value });\n                              }}\n                              placeholder=\"Example: $\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              aria-label=\"Amount (to the nearest dollar)\"\n                            />\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                       <Trans>   Allow levels</Trans>\n                        </label>\n                        <div\n                          style={{ marginTop: \"2.5%\" }}\n                          className=\"col-sm-9 \"\n                        >\n                          <Form.Control\n                            disabled={!this.state.user.admin}\n                            required\n                            onChange={(e) => {\n                              this.setState({ levels: e.target.value });\n                            }}\n                            type=\"range\"\n                            min=\"1\"\n                            max=\"8\"\n                            step=\"1\"\n                            value={this.state.levels}\n                          />\n\n                          <label className=\"col-sm-3 col-form-label  \">\n                        <Trans>    value :</Trans> {this.state.levels}{\" \"}\n                          </label>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label \">\n                       <Trans>   logo <br /> jpg, jpeg, png <br />\n                          aspect ratio 1:1</Trans>\n                        </label>\n                        <div className=\"col-sm-9 mt-3\">\n                          <div className=\"custom-file \">\n                            <Form.Control\n                              onChange={(e) => {\n                                this.setState({ logo: e.target.files[0] });\n                              }}\n                              disabled={!this.state.user.admin}\n                              type=\"file\"\n                              className=\"form-control visibility-hidden\"\n                              id=\"customFileLang\"\n                              lang=\"es\"\n                              accept=\"image/png, image/jpeg, image/jpg\"\n                            />\n                            <label\n                              className=\"custom-file-label\"\n                              htmlFor=\"customFileLang\"\n                            >\n                              {this.state.logo !== null\n                                ? this.state.logo.name\n                                : \"Upload image\"}\n\n                              {typeof this.state.logo === \"string\"\n                                ? this.state.logo.split(\"/\")[2]\n                                : \"\"}\n                            </label>\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label \">\n                         <Trans> second logo <br /> jpg, jpeg, png\n                          <br /> aspect ratio 1:1</Trans>\n                        </label>\n                        <div className=\"col-sm-9 mt-3\">\n                          <div className=\"custom-file \">\n                            <Form.Control\n                              onChange={(e) => {\n                                this.setState({ slogo: e.target.files[0] });\n                              }}\n                              disabled={!this.state.user.admin}\n                              type=\"file\"\n                              className=\"form-control visibility-hidden\"\n                              id=\"customFileLang1\"\n                              lang=\"es\"\n                              accept=\"image/png, image/jpeg, image/jpg\"\n                            />\n                            <label\n                              className=\"custom-file-label\"\n                              htmlFor=\"customFileLang1\"\n                            >\n                              {this.state.slogo !== null\n                                ? this.state.slogo.name\n                                : \"Upload image\"}\n                              {typeof this.state.slogo === \"string\"\n                                ? this.state.slogo.split(\"/\")[2]\n                                : \"\"}\n                            </label>\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-md-6 \">\n                      <Form.Group className=\" row  \">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                        <Trans>  Annual Population Growth Rate</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <div className=\"input-group \">\n                            <Form.Control\n                              disabled={!this.state.user.admin}\n                              required\n                              isValid={true}\n                              value={this.state.growthRate}\n                              onChange={(e) => {\n                                let number = e.target.value;\n                                const flag = number.split(\".\").length;\n                                console.log(flag);\n                                if (flag > 1) {\n                                  const num = number.split(\".\")[0];\n                                  const floatpoint = number\n                                    .split(\".\")[1]\n                                    .slice(0, 2);\n                                  number = num + \".\" + floatpoint;\n                                  console.log(number);\n                                }\n\n                                this.setState({\n                                  growthRate: parseFloat(number),\n                                });\n                              }}\n                              type=\"number\"\n                              className=\"form-control\"\n                              aria-label=\"Amount (to the nearest dollar)\"\n                            />\n                            <div className=\"input-group-append h-75 pb-3\">\n                              <span className=\"input-group-text\">%</span>\n                            </div>\n                          </div>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-5 col-form-label\">\n                       <Trans>   Enable HR</Trans>\n                        </label>\n                        <div className=\"col-sm-7\">\n                          <Form.Check\n                            disabled={!this.state.user.admin}\n                            checked={this.state.enableHR}\n                            value={this.state.enableHR}\n                            onChange={(e) => {\n                              // e.preventDefault()\n                              this.setState({ enableHR: !this.state.enableHR });\n                            }}\n                            type=\"switch\"\n                            label=\"\"\n                            id=\"disabled-custom-switch\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-5 col-form-label\">\n                       <Trans>   Enable Maintenance</Trans>\n                        </label>\n                        <div className=\"col-sm-7\">\n                          <Form.Check\n                            checked={this.state.enableMaintaining}\n                            disabled={!this.state.user.admin}\n                            onChange={(e) => {\n                              this.setState({\n                                enableMaintaining:\n                                  !this.state.enableMaintaining,\n                              });\n                            }}\n                            type=\"switch\"\n                            label=\"\"\n                            id=\"disabled-custom\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                   <Trans>       Target Population</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            required\n                            disabled={!this.state.user.admin}\n                            onChange={(e) => {\n                              this.setState({\n                                targetpopulation: e.target.value,\n                              });\n                            }}\n                            value={this.state.targetpopulation}\n                            className=\"form-select\"\n                            as=\"select\"\n                          >\n                            <option value=\"General population\">\n                        <Trans>      General population</Trans>\n                            </option>\n                            <option value=\"Under-1 Population\">\n                        <Trans>      Under-1 Population</Trans>\n                            </option>\n                          </Form.Control>\n                        </div>\n                      </Form.Group>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"row\">\n                        <label className=\"col-sm-3 col-form-label control-label\">\n                  <Trans>        Require Capacity</Trans>\n                        </label>\n                        <div className=\"col-sm-9\">\n                          <Form.Control\n                            required\n                            disabled={!this.state.user.admin}\n                            onChange={(e) => {\n                              const value =\n                                e.target.value === \"true\" ? true : false;\n                              this.setState({\n                                requiredcapacities: value,\n                              });\n                            }}\n                            value={this.state.requiredcapacities}\n                            className=\"form-select\"\n                            as=\"select\"\n                          >\n                            <option value={true}>\n                         <Trans>     Estimate required capacity (in MS Excel)</Trans>\n                            </option>\n                            <option value={false}>\n                <Trans>              Enter required capacity manually</Trans>\n                            </option>\n                          </Form.Control>\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </div>\n                  <Form.Group className=\"row\">\n                    <div className=\"col-md-6\">\n                      <label className=\"col-sm-3 col-form-label \">\n                      <Trans>  Main Location</Trans>\n                      </label>\n                      <div className=\"map\">\n                        <Map\n                          loca={this.state.mainlocation}\n                          handleChange={this.handlemapclick}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Form.Group className=\"mt-5\">\n                        <div className=\"col-sm-12\">\n                          <Form.Control\n                            disabled\n                            value={this.state.mainlocation}\n                            onChange={(e) => {\n                              this.setState({ mainlocation: e.target.value });\n                            }}\n                            type=\"text\"\n                          />\n                        </div>\n                      </Form.Group>\n                    </div>\n                  </Form.Group>\n\n                  {this.state.country !== [] &&\n                  this.state.country !== undefined &&\n                  this.state.user.admin ? (\n                    <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                   <Trans>   Save</Trans>\n                    </button>\n                  ) : (\n                    <button\n                      type=\"submit\"\n                      disabled\n                      className=\"btn btn-primary mr-2\"\n                    >\n                   <Trans>   Save</Trans>\n                    </button>\n                  )}\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Country;\n","import { useEffect,useState } from 'react';\nimport { MapContainer, useMap, TileLayer, Marker, Popup ,useMapEvents} from \"react-leaflet\";\nimport L from 'leaflet';\n// import tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\nfunction LocationMarker() {\n  const [position, setPosition] = useState(null);\n  const map = useMapEvents({\n    click() {\n      map.locate();\n    },\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  });\n\n  return position === null ? null : (\n  <></>\n  );\n}\nconst GetCoordinates = (props) => {\n  const map = useMap();\n    const handleClick = (e) => {\n        props.change(e);\n    }\n   \n  useEffect(() => {\n    if (!map) return;\n    const info = L.DomUtil.create(\"div\", \"legend\");\n\n    const positon = L.Control.extend({\n      options: {\n        position: \"bottomleft\",\n      },\n\n      onAdd: function () {\n        info.textContent = \"Click on map\";\n        return info;\n      },\n    });\n\n    map.on(\"click\", (e) => {\n        window.navigator.geolocation.getCurrentPosition(console.log, console.log);\n      info.textContent = e.latlng;\n        handleClick(e);\n    });\n\n    map.addControl(new positon());\n  }, [map]);\n\n  return null\n};\n\nconst MapWrapper = (props) => {\n    const [map, setMap] = useState(null);\n    const handl = (e)=>{\n        props.handleChange(e)\n        setMap(e.latlng)\n    }\n  return (\n    <MapContainer\n      center={[52.22, 21.01178]}\n      zoom={13}\n      scrollWheelZoom={true}\n      //   onClick={this.handlemapclick}\n    >\n      <TileLayer\n        {...{\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        }}\n      />\n\n      <GetCoordinates change={handl} />\n      <>\n        {map && (\n          <Marker position={map} draggable={true}>\n            <Popup position={map}>\n              Current location: <pre>{JSON.stringify(map, null, 2)}</pre>\n            </Popup>\n          </Marker>\n        )}\n      </>\n      <LocationMarker />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;"],"names":["L","iconRetinaUrl","require","iconUrl","shadowUrl","Country","props","changestate","e","state","setState","target","value","handleChange","date","startDate","handleSubmit","event","preventDefault","stopPropagation","form","currentTarget","isCountryCodeValid","isCurrencyValid","isCountryValid","validated","toast","checkValidity","formData","FormData","append","CountryName","CountryCode","Currency","levels","logo","slogo","targetpopulation","growthRate","enableHR","mainlocation","logo2","requiredcapacities","enableMaintaining","user","admin","Object","keys","country","length","id","UserService","then","res","perviuscountry","JSON","parse","localStorage","getItem","setItem","stringify","data","i","maxpop","minpop","uppervol","undervol","m25vol","m70vol","m25volnew","m70volnew","uppervolnew","undervolnew","name","dryvol","dryvolnew","parent","console","log","catch","err","codecountry","currency","secondLogo","poprate","poptarget","havehr","usingtool","usingmaintenance","alerthandle","test","handleClosesnack","reason","snackopen","excelData","put","type","isCountyValid","isCountyCodeValid","bind","handleExcelChange","handlemapclick","message","this","content","latlng","file","files","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","header","readAsBinaryString","className","Trans","Form","noValidate","onSubmit","isValid","isInvalid","onChange","required","placeholder","disabled","x","toString","toUpperCase","style","marginTop","min","max","step","lang","accept","htmlFor","split","number","flag","num","floatpoint","slice","parseFloat","checked","label","as","Map","loca","undefined","Component","LocationMarker","useState","position","setPosition","map","useMapEvents","click","locate","locationfound","flyTo","getZoom","GetCoordinates","useMap","useEffect","info","positon","options","onAdd","textContent","on","window","navigator","geolocation","getCurrentPosition","change","handleClick","addControl","setMap","center","zoom","scrollWheelZoom","attribution","url","draggable"],"sourceRoot":""}