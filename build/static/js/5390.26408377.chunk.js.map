{
  "version": 3,
  "file": "static/js/5390.26408377.chunk.js",
  "mappings": "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",
  "sources": [
    "app/facilities/FacilityToPrint.js",
    "app/facilities/PrintFacility.js",
    "app/services/facilities.service.js"
  ],
  "sourcesContent": [
    "import { forwardRef, useEffect, useState } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport toast from \"react-hot-toast\";\nimport { Trans } from \"react-i18next\";\nimport FacilitiesService from \"../services/facilities.service.js\";\nimport Spinner from \"../shared/Spinner\";\nimport { returnDate } from \"../items/ItemToPrint\";\n\nconst FacilityToPrint = forwardRef((props, ref) => {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  function getData() {\n    FacilitiesService.getFacilityFields1()\n      .then((res) => {\n        const data=res.data.related;\n        data.unshift({\n          name: \"Facility code\",\n          params:[],\n          type: \"text\",\n        })\n        let levels = res.data.levels;\n        // change levels name to id\n        levels = levels.map((level) => {\n          return {\n            id: level.id,\n            name: level.id+\" - \"+ level.name,\n          };\n        });\n        data.unshift({\n          name: \"Levels\",\n          params:levels,\n        });\n        setData(res.data.related);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div ref={ref} className={\"mx-5 my-5\"} style={{ color: \"#000\" }}>\n          <div className=\"container\">\n            <div className=\" text-center my-4\">\n              <div className=\"\">\n                <h4>Inventory and Gap Analysis System (IGA)</h4>\n              </div>\n              <div>\n                <h4>\n                  Country:{\" \"}\n                  {JSON.parse(localStorage.getItem(\"country\"))?.country}\n                </h4>\n              </div>\n            </div>\n            <h2 className=\"mb-4\">\n              <Trans>\n                {\" \"}\n                {`${\n                  JSON.parse(localStorage.getItem(\"user\"))?.facility_name\n                } Facility information:`}\n              </Trans>\n            </h2>\n            <p>Date: -----------</p>\n            <div className=\"wrapper\">\n              <Row>\n                {data.map((item) => (\n                  <>\n                    <div style={{ width: \"50%\" }}>\n                      <h6>{item.name}</h6>\n                      <div\n                        className=\"box mb-3\"\n                        style={{\n                          border: \"gray 1px solid\",\n                          padding: \"1rem\",\n                          \"border-radius\": \"5px\",\n                          marginButtom: \"5px\",\n                        }}\n                      >\n                        {item.params.map((param) => (\n                          <div className=\"param\">\n                            <input\n                              style={{\n                                Background: \"white\",\n                                Border: \"1px solid #ababab70\",\n                                BorderRadius: \"5px\",\n                                Padding: \"0.5rem\",\n                                marginRight: \"5px\",\n                              }}\n                              className=\"m-1\"\n                              type=\"checkbox\"\n                              checked={false}\n                              disabled\n                            />\n                            <span className=\"mr-3\">\n                              {param.name || param.describe}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </>\n                ))}\n              </Row>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n});\n\nexport default FacilityToPrint;\n",
    "import * as React from \"react\";\n\nimport { Trans } from \"react-i18next\";\nimport { useReactToPrint } from \"react-to-print\";\nimport FacilityToPrint from \"./FacilityToPrint\";\nimport { Fragment } from \"react\";\n\nconst PrintFacility = () => {\n  const componentRef = React.useRef(null);\n\n  const onBeforeGetContentResolve = React.useRef(null);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const handleOnBeforeGetContent = React.useCallback(() => {\n    setLoading(true);\n\n    return new Promise((resolve) => {\n      onBeforeGetContentResolve.current = resolve;\n\n      setTimeout(() => {\n        setLoading(false);\n        resolve();\n      }, 0);\n    });\n  }, [setLoading]);\n\n  const reactToPrintContent = React.useCallback(() => {\n    return componentRef.current;\n  }, [componentRef.current]);\n\n  const handlePrint = useReactToPrint({\n    content: reactToPrintContent,\n    documentTitle: \"AwesomeFileName\",\n    onBeforeGetContent: handleOnBeforeGetContent,\n    removeAfterPrint: true,\n  });\n\n  React.useEffect(() => {\n    if (typeof onBeforeGetContentResolve.current === \"function\") {\n      onBeforeGetContentResolve.current();\n    }\n  }, [onBeforeGetContentResolve.current]);\n\n  return (\n    <Fragment>\n      <button className=\"btn btn-info btn-icon-text px-3 pr-4\" onClick={handlePrint}>\n        <i className=\"mdi mdi-printer btn-icon-append \" />\n        {loading ? <Trans>Loading...</Trans> : <Trans> Print</Trans>}\n      </button>\n\n      <FacilityToPrint ref={componentRef} />\n    </Fragment>\n  );\n};\n\nexport default PrintFacility;\n",
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\nimport axios from \"axios\";\n\nconst API_URL = \"https://inventory.runflare.run/facilities/\";\n\nclass FacilitiesService {\n  getFacilities(id, deleted) {\n    const params = {};\n    if (id) {\n      params.id = id;\n    }\n    if (deleted) {\n      params.deleted = deleted;\n    }\n    return ApiManager.get(API_URL, {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacilities(id) {\n    const params = { id };\n    return ApiManager.get(API_URL + \"parent\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  // deleteFacility(id) {\n  //   return ApiManager.delete(API_URL, {\n  //     headers: { Authorization: authHeader() },\n  //     data: { id },\n  //   });\n  // }\n  getFacilityFields(params) {\n    return ApiManager.get(API_URL + \"facility-field\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacilityFields1(params) {\n    return ApiManager.get(API_URL + \"print\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postFacility(payload) {\n    return ApiManager.post(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putFacility(payload) {\n    return ApiManager.put(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  importFacilities(payload) {\n    return ApiManager.post(\n      \"https://inventory.runflare.run/facilities/\" + \"import\",\n      payload,\n      {\n        headers: { Authorization: authHeader() },\n      }\n    );\n  }\n  deletefacilityparam() {\n    return ApiManager.get(API_URL + \"delete\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteFacility(payload) {\n    return ApiManager.post(API_URL + \"delete\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new FacilitiesService();\n"
  ],
  "names": [
    "forwardRef",
    "props",
    "ref",
    "useState",
    "data",
    "setData",
    "isLoading",
    "setIsLoading",
    "useEffect",
    "FacilitiesService",
    "then",
    "res",
    "related",
    "unshift",
    "name",
    "params",
    "type",
    "levels",
    "map",
    "level",
    "id",
    "catch",
    "toast",
    "Spinner",
    "className",
    "style",
    "color",
    "JSON",
    "parse",
    "localStorage",
    "getItem",
    "country",
    "Trans",
    "facility_name",
    "Row",
    "item",
    "width",
    "border",
    "padding",
    "marginButtom",
    "param",
    "Background",
    "Border",
    "BorderRadius",
    "Padding",
    "marginRight",
    "checked",
    "disabled",
    "describe",
    "componentRef",
    "React",
    "onBeforeGetContentResolve",
    "loading",
    "setLoading",
    "handleOnBeforeGetContent",
    "Promise",
    "resolve",
    "current",
    "setTimeout",
    "reactToPrintContent",
    "handlePrint",
    "useReactToPrint",
    "content",
    "documentTitle",
    "onBeforeGetContent",
    "removeAfterPrint",
    "Fragment",
    "onClick",
    "API_URL",
    "deleted",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "payload"
  ],
  "sourceRoot": ""
}
