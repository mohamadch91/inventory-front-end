{
  "version": 3,
  "file": "static/js/8122.6185371b.chunk.js",
  "mappings": "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",
  "sources": [
    "app/message/newMessage.js",
    "app/services/hr.service.js",
    "app/services/message.service.js"
  ],
  "sourcesContent": [
    "import { useEffect, useState } from \"react\";\nimport HRService from \"../services/hr.service\";\nimport MessageService from \"../services/message.service\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../shared/Spinner\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport \"../styles/inputs.scss\";\nimport \"./message.scss\";\nimport \"../settings/itemClass.scss\";\nimport { Trans } from \"react-i18next\";\n\nfunction NewMessage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [facilities, setFacilities] = useState([]);\n  const [formData, setFormData] = useState();\n  const [selected, setSelected] = useState([]);\n\n  function getFacilities() {\n    HRService.getFacilities()\n      .then((res) => {\n        const data = res.data;\n        setFacilities(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n                toast.error(<Trans>There is a problem loading data</Trans>);\n\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getFacilities();\n  }, []);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (selected.length === 0) {\n      toast.error(\"Please select at least one facility\");\n    } else {\n      const { subject, body } = formData;\n      const data = {\n        subject,\n        body,\n        reciever: selected.map((item) => item.value),\n      };\n      MessageService.sendMessage(data)\n        .then((res) => {\n          toast.success(\"Message sent successfully\");\n          setFormData({});\n          setSelected([]);\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending message\");\n        });\n    }\n  }\n\n  return (\n    <div className=\"new-message-page\">\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\"container\">\n          <form onSubmit={handleSubmit}>\n            <h3 className=\"mb-1 page-title\">\n              <Trans>Send message</Trans>\n            </h3>\n            <div className=\"d-flex flex-column\">\n              <label>\n                <Trans>Receivers</Trans>\n              </label>\n              <MultiSelect\n                options={facilities.map((item) => {\n                  return { label: item.name, value: item.id };\n                })}\n                value={selected}\n                onChange={setSelected}\n                labelledBy=\"Select\"\n                className=\"multi-select\"\n              />\n            </div>\n            <div className=\"d-flex flex-column\">\n              <label>\n                <Trans>Subject</Trans>\n              </label>\n              <input\n                onChange={handleChange}\n                type=\"text\"\n                name=\"subject\"\n                required\n              />\n            </div>\n            <div className=\"d-flex flex-column\">\n              <label>\n                <Trans>Message body</Trans>\n              </label>\n              <textarea onChange={handleChange} name=\"body\" required />\n            </div>\n            <button type=\"submit\" className=\"w-100 save-btn mt-4\">\n              <Trans>Send</Trans>\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default NewMessage;\n",
    "import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://46.105.58.235:8000/hr/\";\n\nclass HRService {\n  getFacilities() {\n    return axios.get(API_URL + \"hr-helper/\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getHRList(id) {\n    return axios.get(API_URL + \"?id=\" + id, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putHR(data) {\n    return axios.put(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postHR(data) {\n    return axios.post(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteHR(data) {\n    return axios.delete(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new HRService();\n",
    "import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://46.105.58.235:8000/message/\";\n\nclass MessageService {\n  getReceivedMessages() {\n    return axios.get(API_URL, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getSentMessages() {\n    return axios.get(API_URL + \"?type=sender\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  sendMessage(data) {\n    return axios.post(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putMessage(data) {\n    return axios.put(API_URL, data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new MessageService();\n"
  ],
  "names": [
    "useState",
    "isLoading",
    "setIsLoading",
    "facilities",
    "setFacilities",
    "formData",
    "setFormData",
    "selected",
    "setSelected",
    "handleChange",
    "e",
    "target",
    "name",
    "value",
    "useEffect",
    "HRService",
    "then",
    "res",
    "data",
    "catch",
    "err",
    "toast",
    "className",
    "onSubmit",
    "preventDefault",
    "length",
    "subject",
    "body",
    "reciever",
    "map",
    "item",
    "MessageService",
    "options",
    "label",
    "id",
    "onChange",
    "labelledBy",
    "type",
    "required",
    "API_URL",
    "axios",
    "headers",
    "Authorization",
    "authHeader"
  ],
  "sourceRoot": ""
}
