{"version":3,"file":"static/js/4631.4b904158.chunk.js","mappings":"2NAiFA,UA1EoB,WAClB,OAA4BA,EAAAA,EAAAA,UAC1B,CAAC,iBADiC,uBAElC,yGACoBC,EAAAA,EAAAA,oBADpB,cACQC,EADR,yBAESA,EAAIC,MAFb,2CAIA,CACEC,gBAAgB,IAPZD,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAWd,OAAIA,GACK,2CAGJA,GAA6B,IAAhBF,EAAKG,QAKrB,gBAAKC,UAAU,cAAf,UACE,gBAAKA,UAAU,yBAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,eAAIA,UAAU,aAAd,4BACA,gBAAKA,UAAU,mBAAf,UACE,mBAAOA,UAAU,+BAAjB,WACE,4BACE,2BACE,gBAAIA,UAAW,QAAf,UACG,KACD,SAAC,IAAD,gBAAiB,QAEnB,gBAAIA,UAAW,QAAf,UACG,KACD,SAAC,IAAD,mBAAoB,QAEtB,gBAAIA,UAAW,QAAf,WACE,SAAC,IAAD,gCAAiC,QAEnC,eAAIA,UAAW,QAAf,UACE,SAAC,IAAD,8BAIN,2BACGJ,EAAKK,KAAI,SAACC,EAAIC,GACb,OACE,gBAAgBH,UAAU,aAA1B,WACE,8BAAsBG,EAAI,EAA1B,MAASD,EAAGE,GAAKD,IACjB,8BAAwBD,EAAGG,KAA3B,MAASF,EAAID,EAAGG,OAChB,wBAAqBH,EAAGI,IAAfH,EAAID,EAAGI,KAChB,yBACE,SAAC,KAAD,CACEC,GAAE,oCAA+BL,EAAGE,IACpCJ,UAAU,uBAFZ,UAIE,SAAC,IAAD,mCALKG,EAAI,OAJND,EAAGE,GAcf,qBA9CR,SAAC,IAAD,GAuDV,C,wEC5EKI,EAAU,oCAEVd,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA6CH,OA7CGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,uBAAAA,MACJ,WACE,OAAOe,EAAAA,EAAAA,IAAeD,EAAU,QAAS,CACvCE,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,iCAED,WACE,OAAOH,EAAAA,EAAAA,IAAeD,EAAU,YAAa,CAC3CE,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,iCAED,WACE,OAAOH,EAAAA,EAAAA,IAAeD,EAAU,SAAU,CACxCE,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,mCACD,WACE,OAAOH,EAAAA,EAAAA,IAAeD,EAAU,eAAgB,CAC9CE,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,gCAED,SAAgBC,GACd,OAAOJ,EAAAA,EAAAA,IAAeD,EAAU,QAAUK,EAAS,CACjDH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,kCACD,WACE,OAAOH,EAAAA,EAAAA,IAAeD,EAAU,kBAAmB,CACjDE,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,mCAED,SAAmBC,GACjB,OAAOJ,EAAAA,EAAAA,KAAgBD,EAAU,QAASK,EAAS,CACjDH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,8BACD,SAAcC,GAEZ,OADAC,QAAQC,IAAIP,EAAU,kBAAoBK,GACnCJ,EAAAA,EAAAA,IAAeD,EAAU,kBAAoBK,EAAS,CAC3DH,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,OA7CGlB,GA+CN,QAAmBA,C,2DCtCnB,IAX6B,SAACsB,GAC5B,OACE,iBAAKhB,UAAU,6CAA6CiB,KAAK,QAAjE,WACE,cAAGjB,UAAU,YAAb,UACE,SAAC,IAAD,kFAEDgB,EAAME,UAAW,uBAAIF,EAAME,YAGjC,C","sources":["app/dashboard/warnings/tables/logbook/LogBookPage.js","app/services/dashboard.service.js","app/shared/UI/EmptyDataBaseMessage.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport DashboardService from \"../../../../services/dashboard.service\";\nimport { Trans } from \"react-i18next\";\nimport EmptyDataBaseMessage from \"../../../../shared/UI/EmptyDataBaseMessage\";\n\nconst LogBookPage = () => {\n  const { data, isLoading } = useQuery(\n    [\"logbook-data\"],\n    async () => {\n      const res = await DashboardService.getMaintenanceLog();\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (isLoading) {\n    return <div> Loading ... </div>;\n  }\n\n  if (!isLoading && data.length === 0) {\n    return <EmptyDataBaseMessage />;\n  }\n\n  return (\n    <div className=\"d-flex mb-3\">\n      <div className=\"col-lg-12 stretch-card\">\n        <div className=\"card\">\n          <div className=\"card-body p-2\">\n            <h4 className=\"card-title\">Warnings Info</h4>\n            <div className=\"table-responsive\">\n              <table className=\"table table-bordered p-2 m-2\">\n                <thead>\n                  <tr>\n                    <th className={\"col-3\"}>\n                      {\" \"}\n                      <Trans>#</Trans>{\" \"}\n                    </th>\n                    <th className={\"col-3\"}>\n                      {\" \"}\n                      <Trans>Code</Trans>{\" \"}\n                    </th>\n                    <th className={\"col-3\"}>\n                      <Trans>Maintenance group</Trans>{\" \"}\n                    </th>\n                    <th className={\"col-3\"}>\n                      <Trans>Details</Trans>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map((el, i) => {\n                    return (\n                      <tr key={el.id} className=\"table-info\">\n                        <td key={el.id + i}> {i + 1} </td>\n                        <td key={i + el.code}> {el.code} </td>\n                        <td key={i + el.gp}>{el.gp}</td>\n                        <td key={i + \"A\"}>\n                          <Link\n                            to={`/dashboard/maintenanceLog/${el.id}`}\n                            className=\"btn btn-info btn-fw \"\n                          >\n                            <Trans>Click for details</Trans>\n                          </Link>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LogBookPage;\n","import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://5.182.47.38:8000/dashboard\";\n\nclass DashboardService {\n  getAllDashboardItems() {\n    return ApiManager.get(API_URL + \"/item\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllFacilities() {\n    return ApiManager.get(API_URL + \"/facility\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllTablesData() {\n    return ApiManager.get(API_URL + \"/table\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getAllWarningsData() {\n    return ApiManager.get(API_URL + \"/maintenance\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getWarningsInfo(payload) {\n    return ApiManager.get(API_URL + \"/todo\" + payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getMaintenanceLog() {\n    return ApiManager.get(API_URL + \"/maintenancelog\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  postWarningsAsDone(payload) {\n    return ApiManager.post(API_URL + \"/todo\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getLogDetails(payload) {\n    console.log(API_URL + \"/maintenancelog\" + payload);\n    return ApiManager.get(API_URL + \"/maintenancelog\" + payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\nexport default new DashboardService();\n","import React from \"react\";\nimport { Trans } from \"react-i18next\";\n\nconst EmptyDataBaseMessage = (props) => {\n  return (\n    <div className=\"alert alert-danger w-50 text-center m-auto\" role=\"alert\">\n      <p className=\"display-4\">\n        <Trans>We've been looking everywhere, nothing was found ... ðŸ˜Ÿ</Trans>\n      </p>\n      {props.message && <p>{props.message}</p>}\n    </div>\n  );\n};\n\nexport default EmptyDataBaseMessage;\n"],"names":["useQuery","DashboardService","res","data","refetchOnMount","isLoading","length","className","map","el","i","id","code","gp","to","API_URL","ApiManager","headers","Authorization","authHeader","payload","console","log","props","role","message"],"sourceRoot":""}