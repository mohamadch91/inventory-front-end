{"version":3,"file":"static/js/7734.9231c0da.chunk.js","mappings":"6OAqBA,SAASA,IACP,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAMC,EAAAA,EAAAA,IAAa,CACvBC,MADuB,WAErBF,EAAIG,SACJH,EAAII,gBACL,EACDC,cALuB,SAKTC,GACZP,EAAYO,EAAEC,QACdP,EAAIQ,MAAMF,EAAEC,OAAQP,EAAIS,UACzB,IAGH,OAAoB,OAAbX,EAAoB,MAAO,uBACnC,CAnBDY,IAAAA,KAAAA,QAAAA,aAA4B,CAC1BC,cAAeC,EAAQ,MACvBC,QAASD,EAAQ,OACjBE,UAAWF,EAAQ,SA6LrB,UAxImB,SAACG,GAAW,IAAD,QACpBC,EAAWN,IAAAA,KAAAA,OAAc,CAC7BO,QAAS,CAAC,IAGNC,EAAW,IAAIF,EAAS,CAC1BH,QACE,qGAEJM,EAAY,IAAIH,EAAS,CACvBH,QACE,qGAEJO,EAAU,IAAIJ,EAAS,CACrBH,QACE,qGAEJQ,EAAa,IAAIL,EAAS,CACxBH,QACE,qGACDS,EAAa,IAAIN,EAAS,CAC3BH,QACE,qGACDU,EAAY,IAAIP,EAAS,CAC1BH,QACE,qGACDW,EAAW,IAAIR,EAAS,CACzBH,QACE,qGACDY,EAAU,IAAIT,EAAS,CACxBH,QACE,qGAEAa,EAAS,CACb,EAAGR,EACH,EAAGC,EACH,EAAGC,EACH,EAAGC,EACH,EAAGC,EACH,EAAGC,EACH,EAAGC,EACH,EAAGC,GAECE,EAAcZ,EAAdY,UACR,GAAsB9B,EAAAA,EAAAA,UAAS,MAA/B,eACA,GADA,WAC8BA,EAAAA,EAAAA,UAAS,KAAvC,eAAO+B,EAAP,KAAgBC,EAAhB,KAGA,GAAoBhC,EAAAA,EAAAA,UAC8B,OAAhDiC,KAAKC,MAAMC,aAAaC,QAAQ,kBAG5BC,IADAJ,KAAKC,MAAMC,aAAaC,QAAQ,YAAhC,aADA,GACA,UAGAH,KAAKC,MAAMC,aAAaC,QAAQ,YAAhC,oBAHA,iBAGA,EACoBE,MAAM,KAAK,UAJ/B,aAGA,EAEIA,MAAM,KAAK,IARrB,eAAOC,EAAP,KAAWC,EAAX,KAUA,GAAoBxC,EAAAA,EAAAA,UAC8B,OAAhDiC,KAAKC,MAAMC,aAAaC,QAAQ,kBAG5BC,IADAJ,KAAKC,MAAMC,aAAaC,QAAQ,YAAhC,aADA,GACA,UAGAH,KAAKC,MAAMC,aAAaC,QAAQ,YAAhC,oBAHA,iBAGA,EACoBE,MAAM,KAAK,UAJ/B,aAGA,EAEIA,MAAM,KAAK,IARrB,eAAOG,EAAP,KAAWC,EAAX,KAuCA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAC4C,OAAhDX,KAAKC,MAAMC,aAAaC,QAAQ,iBAC5BC,EACAJ,KAAKC,MAAMC,aAAaC,QAAQ,YAAhC,aACNS,QAAQC,IAAIF,GACZ,IAAIG,EAAM,GACV,QAAgBV,IAAZO,EACFG,EAAM,CAAC,GAAI,QACN,CAAC,IAAD,MACLF,QAAQC,IAAIF,GACZ,IAAII,EAAI,OAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAASN,MAAM,KAAK,UAAvB,aAAG,EAAwBA,MAAM,KAAK,GAC1CW,EAAK,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAASN,MAAM,KAAK,UAAvB,iBAAG,EAAwBA,MAAM,KAAK,UAAtC,aAAG,EAAuCA,MAAM,KAAK,QACjDD,IAATW,QAAgCX,IAAVY,GACxBT,EAAM,IACNE,EAAM,MAENF,EAAMU,WAAWF,IACjBN,EAAMQ,WAAWD,IAEpB,CACDjB,EAAWe,EACZ,GAAE,KAGD,gBAAKI,UAAU,MAAf,SACe,OAAZpB,GAAoBQ,GAAME,IACzB,UAAC,IAAD,CACEW,OAAQ,CAACb,EAAIE,GACbY,KAAM,EACNC,iBAAiB,EACjBC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASC,OAAQ,KAJnD,WAQE,SAAC,IAAD,CAEIC,IAAK,qDACLH,MAAO,OAKX,gCACCX,QAAQC,IAAIhB,GADb,OAEGA,QAFH,IAEGA,OAFH,EAEGA,EAAW3B,KAAI,SAACM,EAAGmD,GAClB,OACE,SAAC,IAAD,CAAgB3D,SAAUQ,EAAEoD,WAAYC,KAAMjC,EAAOpB,EAAEsD,OAAQlC,EAAOpB,EAAEsD,OAAQ1C,EAAhF,UACE,SAAC,IAAD,WACE,0BAAOZ,EAAEoD,gBAFAD,EAMhB,QAGH,SAAC7D,EAAD,QAKT,C","sources":["app/shared/sharedMap.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  MapContainer,\n  useMap,\n  TileLayer,\n  Marker,\n  Popup,\n  useMapEvents,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\n// import tileLayer from '../util/tileLayer';\n// import \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet.css\";\nconst center = [52.22977, 21.01178];\n// delete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\nfunction LocationMarker() {\n  const [position, setPosition] = useState(null);\n  const map = useMapEvents({\n    click() {\n      map.locate();\n      map.invalidateSize();\n    },\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  });\n\n  return position === null ? null : <></>;\n}\nconst GetCoordinates = (props) => {\n  const map = useMap();\n  const handleClick = (e) => {\n    props.change(e);\n  };\n\n  useEffect(() => {\n    if (!map) return;\n    const info = L.DomUtil.create(\"div\", \"legend\");\n\n    const positon = L.Control.extend({\n      options: {\n        position: \"bottomleft\",\n      },\n\n      onAdd: function () {\n        info.textContent = \"Click on map too add location\";\n        return info;\n      },\n    });\n    map.on(\"load\", (e) => {\n      console.log(\"salam\");\n    });\n    map.on(\"click\", (e) => {\n      window.navigator.geolocation.getCurrentPosition(console.log, console.log);\n      info.textContent = e.latlng;\n      handleClick(e);\n    });\n\n    map.addControl(new positon());\n  }, [map]);\n\n  return null;\n};\n\n\nconst MapWrapper = (props) => {\n    const LeafIcon = L.Icon.extend({\n      options: {},\n    });\n\n    const blueIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|abcdef&chf=a,s,ee00FFFF\",\n      }),\n      greenIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2ecc71&chf=a,s,ee00FFFF\",\n      }),\n      redIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2ccc22&chf=a,s,ee00FFFF\",\n      }),\n      yellowIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|4acc71&chf=a,s,ee00FFFF\",\n      }),purpleIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|7dcc71&chf=a,s,ee00FFFF\",\n      }),blackIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|3ccc71&chf=a,s,ee00FFFF\",\n      }),roseIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2dcc71&chf=a,s,ee00FFFF\",\n      }),pupIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2eee71&chf=a,s,ee00FFFF\",\n      });\n    const levels = {\n      1: blueIcon,\n      2: greenIcon,\n      3: redIcon,\n      4: yellowIcon,\n      5: purpleIcon,\n      6: blackIcon,\n      7: roseIcon,\n      8: pupIcon,\n    };\n  const { locations } = props;\n  const [map, setMap] = useState(null);\n  const [Current, sercurrent] = useState([]);\n    // const [icon, setIcon] = useState(blueIcon);\n\n  const [x1, setx1] = useState(\n    JSON.parse(localStorage.getItem(\"country\")) === null\n      ? 35\n      : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] ===\n        undefined\n      ? 35\n      : JSON.parse(localStorage.getItem(\"country\"))\n          [\"mainlocation\"]?.split(\"(\")[1]\n          ?.split(\",\")[0]\n  );\n  const [x2, setx2] = useState(\n    JSON.parse(localStorage.getItem(\"country\")) === null\n      ? 51\n      : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] ===\n        undefined\n      ? 51\n      : JSON.parse(localStorage.getItem(\"country\"))\n          [\"mainlocation\"]?.split(\",\")[1]\n          ?.split(\")\")[0]\n  );\n\n  const handl = (e) => {\n    props.handleChange(e);\n    setMap(e.latlng);\n  };\n  useEffect(() => {\n    const country =\n      JSON.parse(localStorage.getItem(\"country\")) === null\n        ? undefined\n        : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"];\n    console.log(country);\n    let ans = [];\n    if (country === undefined) {\n      ans = [50, 50];\n    } else {\n      console.log(country);\n      let temp = country?.split(\"(\")[1]?.split(\",\")[0];\n      let temp1 = country?.split(\"(\")[1]?.split(\",\")[1]?.split(\")\")[0];\n      if (temp === undefined || temp1 === undefined) {\n        setx1(35);\n        setx2(51);\n      } else {\n        setx1(parseFloat(temp));\n        setx2(parseFloat(temp1));\n      }\n    }\n    sercurrent(ans);\n  }, []);\n\n  return (\n    <div className=\"map\">\n      {Current !== null && x1 && x2 && (\n        <MapContainer\n          center={[x1, x2]}\n          zoom={5}\n          scrollWheelZoom={true}\n          style={{ width: \"100%\", height: \"450px\", zIndex: \"1\" }}\n\n          //   onClick={this.handlemapclick}\n        >\n          <TileLayer\n            {...{\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n              width: 500,\n            }}\n          />\n\n          {/* <GetCoordinates change={handl} /> */}\n          <>\n          {console.log(locations)}\n            {locations?.map((e, i) => {\n              return (\n                <Marker key={i} position={e.cordinates} icon={levels[e.level] ?levels[e.level] :blueIcon } >\n                  <Popup>\n                    <span>{e.cordinates}</span>\n                  </Popup>\n                </Marker>\n              );\n            })}\n          </>\n\n          <LocationMarker />\n        </MapContainer>\n      )}\n    </div>\n  );\n};\n\nexport default MapWrapper;\n"],"names":["LocationMarker","useState","position","setPosition","map","useMapEvents","click","locate","invalidateSize","locationfound","e","latlng","flyTo","getZoom","L","iconRetinaUrl","require","iconUrl","shadowUrl","props","LeafIcon","options","blueIcon","greenIcon","redIcon","yellowIcon","purpleIcon","blackIcon","roseIcon","pupIcon","levels","locations","Current","sercurrent","JSON","parse","localStorage","getItem","undefined","split","x1","setx1","x2","setx2","useEffect","country","console","log","ans","temp","temp1","parseFloat","className","center","zoom","scrollWheelZoom","style","width","height","zIndex","url","i","cordinates","icon","level"],"sourceRoot":""}