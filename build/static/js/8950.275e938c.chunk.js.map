{"version":3,"file":"static/js/8950.275e938c.chunk.js","mappings":"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","sources":["app/settings/Level.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/bs-custom-file-input/src/selector.js","../node_modules/bs-custom-file-input/src/util.js","../node_modules/bs-custom-file-input/src/eventHandlers.js","../node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport bsCustomFileInput from \"bs-custom-file-input\";\nimport UserService from \"../services/user.service\";\n// import ReactDualRangeSlider from 'react-dual-range-slider'\nimport MultiRangeSlider from \"../components/Dualslider\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport \"../styles/table.scss\";\nimport \"../styles/inputs.scss\";\nconst Level = (update) => {\n  const [startDate, setstartDate] = useState(new Date());\n  const [validated, setvalidated] = useState(false);\n  const [minPop, setminPop] = useState(0);\n  const [maxPop, setmaxPop] = useState(100);\n\n  const [name, setname] = useState(\"\");\n  const [number, setnumber] = useState(1);\n  const [current2, setcurrent2] = useState(0.0);\n  const [current20, setcurrent20] = useState(0.0);\n  const [current25, setcurrent25] = useState(0.0);\n  const [current70, setcurrent70] = useState(0.0);\n  const [currentdry, setcurrentdry] = useState(0.0);\n  const [planned2, setplanned2] = useState(0.0);\n  const [planned20, setplanned20] = useState(0.0);\n  const [planned25, setplanned25] = useState(0.0);\n  const [planned70, setplanned70] = useState(0.0);\n  const [planneddry, setplanneddry] = useState(0.0);\n  const [parent, setParent] = useState(null);\n  const [country, setcountry] = useState(\n    JSON.parse(localStorage.getItem(\"country\"))\n  );\n\n  // form event targets\n  const [levelNumber, setLevelNumber] = useState(1);\n  const levelNumberHandler = (event) => {\n    setLevelNumber(parseInt(event.target.value));\n  };\n\n  // start steps\n  const steps = [\"Add level\", \"Current\", \"Planned\"];\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = useState(new Set());\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  // end steps\n\n  const handleChange = (date) => {\n    setstartDate(date);\n  };\n  const handlemin = (min) => {\n    setminPop(min);\n  };\n  const handlemax = (max) => {\n    setmaxPop(max);\n  };\n  useEffect(() => {\n    bsCustomFileInput.init();\n  }, []);\n\n  const handleSubmit = (event) => {\n    if (levelNumber === 1) {\n      setParent(null);\n    } else {\n      setParent(levelNumber - 1);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      const data = {\n        number: levelNumber,\n        maxpop: maxPop,\n        minpop: minPop,\n        uppervol: current2,\n        undervol: current20,\n        m25vol: current25,\n        m70vol: current70,\n        m25volnew: planned25,\n        m70volnew: planned70,\n        uppervolnew: planned20,\n        undervolnew: planned2,\n        name: name,\n        dryvol: currentdry,\n        dryvolnew: planneddry,\n        country: 1,\n        parent: parent,\n      };\n      UserService.addlevel(data)\n        .then((response) => {\n          let newSkipped = skipped;\n          if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n          }\n          setActiveStep((prevActiveStep) => prevActiveStep + 1);\n          setSkipped(newSkipped);\n\n          setstartDate(new Date());\n          setvalidated(false);\n          setminPop(0);\n          setmaxPop(100);\n          setname(\"\");\n          setnumber(1);\n          setcurrent2();\n          setcurrent20();\n          setcurrent25();\n          setcurrent70();\n          setcurrentdry();\n          setplanned2();\n          setplanned20();\n          setplanned25();\n          setplanned70();\n          setplanneddry();\n          setParent();\n          // this.props.history.push('/level');\n        })\n        .catch((error) => {\n          // console.log(error);\n        });\n    }\n\n    //  this.setState({ validated: true });\n    setvalidated(true);\n  };\n  const levelvalidator = () => {\n    if (name.length > 0) {\n      return true;\n    }\n  };\n  const minpopvalidator = () => {\n    if (minPop.toString().length > 0) {\n      return true;\n    }\n  };\n  const maxpopvalidator = () => {\n    if (maxPop.toString().length > 0) {\n      return true;\n    }\n  };\n  const capacityvalidator = (text) => {\n    if (text < 0) {\n      return false;\n    }\n    if (text.toString().length > 0) {\n      return true;\n    }\n  };\n\n  return (\n    <Form\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n      className=\"form-sample\"\n    >\n      <Box sx={{ width: \"100%\" }}>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              // labelProps.optional = (\n              //   <Typography variant=\"caption\">Optional</Typography>\n              // );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        {activeStep === steps.length ? (\n          <React.Fragment>\n            <Typography sx={{ mt: 2, mb: 1 }}>\n              All steps completed - you have submited your level.\n            </Typography>\n            <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n              <Box sx={{ flex: \"1 1 auto\" }} />\n              <Button onClick={handleReset} variant=\"contained\">\n                Add new level\n              </Button>\n            </Box>\n          </React.Fragment>\n        ) : activeStep === 0 ? (\n          <React.Fragment>\n            <div className=\"row\">\n              <div className=\"col-12 grid-margin text-black\">\n                <h4 className=\"card-title\">\n                  <Typography sx={{ mt: 2, mb: 1 }}>\n                    Step {activeStep + 1}\n                  </Typography>{\" \"}\n                  Level configurations\n                </h4>\n\n                <p className=\"card-description h3\"> Level info </p>\n                <div className=\"row\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-3 col-form-label control-label\">\n                      Level number\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <Form.Control\n                        className=\"form-select\"\n                        as=\"select\"\n                        onChange={levelNumberHandler}\n                        value={levelNumber}\n                      >\n                        {[...Array(country.levels)].map((x, i) => (\n                          <option value={i + 1}>{i + 1}</option>\n                        ))}\n                      </Form.Control>\n                    </div>\n                  </Form.Group>\n                </div>\n\n                <div className=\"row\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-3 col-form-label control-label\">\n                      Level name\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <Form.Control\n                        required\n                        isValid={levelvalidator()}\n                        value={name}\n                        onChange={(e) => {\n                          setname(e.target.value);\n                        }}\n                        type=\"text\"\n                      />\n                    </div>\n                  </Form.Group>\n                </div>\n                <div className=\"row\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-3 col-form-label control-label\">\n                      Min {country.poptarget} at this level\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <Form.Control\n                        required\n                        isValid={minpopvalidator()}\n                        value={minPop}\n                        onChange={(e) => {\n                          setminPop(e.target.value);\n                        }}\n                        type=\"number\"\n                      />\n                    </div>\n                  </Form.Group>\n                </div>\n                <div className=\"row\">\n                  <Form.Group className=\"row\">\n                    <label className=\"col-sm-3 col-form-label control-label\">\n                      Max {country.poptarget} at this level\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <Form.Control\n                        required\n                        isValid={maxpopvalidator()}\n                        value={maxPop}\n                        onChange={(e) => {\n                          setmaxPop(e.target.value);\n                        }}\n                        type=\"number\"\n                      />\n                    </div>\n                  </Form.Group>\n                </div>\n\n                <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                  <Button\n                    color=\"inherit\"\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    sx={{ mr: 1 }}\n                    variant=\"outlined\"\n                  >\n                    Back\n                  </Button>\n                  <Box sx={{ flex: \"1 1 auto\" }} />\n                  {isStepOptional(activeStep) && (\n                    <Button\n                      color=\"inherit\"\n                      onClick={handleSkip}\n                      sx={{ mr: 1 }}\n                      variant=\"contained\"\n                    >\n                      Skip\n                    </Button>\n                  )}\n\n                  <Button onClick={handleNext} variant=\"contained\">\n                    {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                  </Button>\n                </Box>\n              </div>\n            </div>\n          </React.Fragment>\n        ) : activeStep === 1 ? (\n          <React.Fragment>\n            <div className=\"row\">\n              <div className=\"col-md-12 grid-margin text-black\">\n                <h4 className=\"card-title\">\n                  <Typography sx={{ mt: 2, mb: 1 }}>\n                    Step{activeStep + 1}\n                  </Typography>{\" \"}\n                  Current\n                </h4>\n                <p className=\"card-description\"> Current Capacities </p>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    (+25 C) in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isValid={capacityvalidator(current25)}\n                      value={current25}\n                      onChange={(e) => {\n                        setcurrent25(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    (+2- +8 C) in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isValid={capacityvalidator(current2)}\n                      value={current2}\n                      onChange={(e) => {\n                        setcurrent2(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    -20 C in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isValid={capacityvalidator(current20)}\n                      value={current20}\n                      onChange={(e) => {\n                        setcurrent20(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    -70 C in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isValid={capacityvalidator(current70)}\n                      value={current70}\n                      onChange={(e) => {\n                        setcurrent70(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    Dry Store in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isValid={capacityvalidator(currentdry)}\n                      value={currentdry}\n                      onChange={(e) => {\n                        setcurrentdry(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n              </div>\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Button\n                  color=\"inherit\"\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  sx={{ mr: 1 }}\n                  variant=\"outlined\"\n                >\n                  Back\n                </Button>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                {/* {isStepOptional(activeStep) && (\n                  <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                    Skip\n                  </Button>\n                )} */}\n\n                <Button onClick={handleNext} variant=\"contained\">\n                  {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                </Button>\n              </Box>\n            </div>\n          </React.Fragment>\n        ) : activeStep === 2 ? (\n          <React.Fragment>\n            <div className=\"row\">\n              <div className=\"col-md-12 grid-margin text-black\">\n                <h4 className=\"card-title\">\n                  <Typography sx={{ mt: 2, mb: 1 }}>\n                    Step {activeStep + 1}\n                  </Typography>{\" \"}\n                  Planned\n                </h4>\n                <p className=\"card-description\"> planned Capacity </p>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    (+25 C) in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isValid={capacityvalidator(planned25)}\n                      value={planned25}\n                      onChange={(e) => {\n                        setplanned25(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    (+2 - +8 C) in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isValid={capacityvalidator(planned2)}\n                      value={planned2}\n                      onChange={(e) => {\n                        setplanned2(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    -20 C in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isInvalid={!capacityvalidator(planned20)}\n                      isValid={capacityvalidator(planned20)}\n                      value={planned20}\n                      onChange={(e) => {\n                        setplanned20(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    -70 C in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isInvalid={!capacityvalidator(planned70)}\n                      isValid={capacityvalidator(planned70)}\n                      value={planned70}\n                      onChange={(e) => {\n                        setplanned70(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-3 col-form-label\">\n                    Dry Store in cm3\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <Form.Control\n                      required\n                      isInvalid={!capacityvalidator(planneddry)}\n                      isValid={capacityvalidator(planneddry)}\n                      value={planneddry}\n                      onChange={(e) => {\n                        setplanneddry(parseFloat(e.target.value));\n                      }}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      min=\"0\"\n                    />\n                  </div>\n                </Form.Group>\n              </div>\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Button\n                  color=\"inherit\"\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  sx={{ mr: 1 }}\n                  variant=\"outlined\"\n                >\n                  Back\n                </Button>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                {isStepOptional(activeStep) && (\n                  <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                    Skip\n                  </Button>\n                )}\n\n                <Button onClick={handleSubmit} variant=\"contained\">\n                  Submit\n                </Button>\n              </Box>\n            </div>\n          </React.Fragment>\n        ) : (\n          \"hello\"\n        )}\n      </Box>\n    </Form>\n  );\n};\n\nexport default Level;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["update","useState","Date","setstartDate","validated","setvalidated","minPop","setminPop","maxPop","setmaxPop","name","setname","setnumber","current2","setcurrent2","current20","setcurrent20","current25","setcurrent25","current70","setcurrent70","currentdry","setcurrentdry","planned2","setplanned2","planned20","setplanned20","planned25","setplanned25","planned70","setplanned70","planneddry","setplanneddry","parent","setParent","JSON","parse","localStorage","getItem","country","levelNumber","setLevelNumber","steps","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","useEffect","bsCustomFileInput","handleSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","data","number","maxpop","minpop","uppervol","undervol","m25vol","m70vol","m25volnew","m70volnew","uppervolnew","undervolnew","dryvol","dryvolnew","UserService","then","response","catch","error","capacityvalidator","text","toString","length","Form","noValidate","onSubmit","className","Box","sx","width","Stepper","map","label","index","stepProps","completed","Step","StepLabel","Typography","mt","mb","display","flexDirection","pt","flex","Button","onClick","variant","as","onChange","parseInt","target","value","Array","levels","x","i","required","isValid","levelvalidator","e","type","poptarget","minpopvalidator","maxpopvalidator","color","disabled","mr","parseFloat","placeholder","min","isInvalid","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","overridesResolver","props","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","slice","call","node","nodeType","restoreDefaultText","fileApi","window","File","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","files","file","join","indexOf","splittedValue","split","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","filter","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sourceRoot":""}