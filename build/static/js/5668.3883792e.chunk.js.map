{"version":3,"file":"static/js/5668.3883792e.chunk.js","mappings":"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","sources":["app/helpers/separator.js","app/reports/ProfileOfFacility.js","app/services/report.service.js","app/shared/SharedTable.js"],"sourcesContent":["\nexport const separator = (x) => {\n  if (x === undefined || x === null || x===\"\") {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n/**\n * @param  {Integer} n\n * @param  {BOOL} sep\n * check need seperator or not\n */\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n","import React from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport ReportService from \"../services/report.service\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\nimport { separator } from \"../helpers/separator\";\nconst allTableData = {\n  by_type: [\n    {\n      headTitle: \"Level\",\n      valueKey: \"level\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Level Name\",\n      valueKey: \"name\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Facility types\",\n      valueKey: \"type\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Total number of facilities\",\n      valueKey: \"count\",\n    func: (val) => separator(val),\n\n    },\n  ],\n  func: (val) => val,\n\n  by_owner: [\n    {\n      headTitle: \"Level\",\n      valueKey: \"level\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Level Name\",\n      valueKey: \"name\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Ownership\",\n      valueKey: \"owner\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Total number of facilities\",\n      valueKey: \"count\",\n    func: (val) => separator(val),\n\n    },\n  ],\n  by_power: [\n    {\n      headTitle: \"Level\",\n      valueKey: \"level\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Level Name\",\n      valueKey: \"name\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Power source\",\n      valueKey: \"power\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Total number of facilities\",\n      valueKey: \"count\",\n    func: (val) => separator(val),\n\n    },\n  ],\n  general: [\n    {\n      headTitle: \"Level\",\n      valueKey: \"level\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Level Name\",\n      valueKey: \"name\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Total\",\n      valueKey: \"total\",\n    func: (val) => separator(val),\n\n    },\n    {\n      headTitle: \"Average populations\",\n      valueKey: \"avg\",\n    func: (val) => separator(val),\n\n    },\n    {\n      headTitle: \"Minimum populations\",\n      valueKey: \"min\",\n    func: (val) => separator(val),\n\n    },\n    {\n      headTitle: \"Maximum populations\",\n      valueKey: \"max\",\n    func: (val) => separator(val),\n\n    },\n  ],\n  under_1: [\n    {\n      headTitle: \"Level\",\n      valueKey: \"level\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Level Name\",\n      valueKey: \"name\",\n      func: (val) => val,\n    },\n    {\n      headTitle: \"Total\",\n      valueKey: \"total\",\n    func: (val) => separator(val),\n\n    },\n    {\n      headTitle: \"Average populations\",\n      valueKey: \"avg\",\n    func: (val) => separator(val),\n\n    },\n    {\n      headTitle: \"Minimum populations\",\n      valueKey: \"min\",\n    func: (val) => separator(val),\n\n    },\n    {\n      headTitle: \"Maximum populations\",\n      valueKey: \"max\",\n    func: (val) => separator(val),\n\n    },\n  ],\n};\n\nconst ReportTable = (props) => {\n  const { reports, tableData, title } = props;\n\n  return (\n    <div className=\"mt-3\">\n      <div className=\"card\">\n        <div className=\"card-body py-3\">\n          {title.length > 0 && <h4 className=\"mt-2\">{title}</h4>}\n          <div className=\"mt-3 table-container\">\n            <SharedTable>\n              <TableHead>\n                <TableRow>\n                  {tableData.map((data) => (\n                    <TableCell key={data.headTitle}>\n                      <Trans>{data.headTitle}</Trans>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {reports?.map((report, index) => {\n                  return (\n                    <TableRow key={index}>\n                      {tableData.map((data) => (\n                        <TableCell key={data.valueKey}>\n                          {data.func(report[data.valueKey]) ?? \"-\"}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </SharedTable>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction ProfileOfFacility() {\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n  const { data: reports, isLoading: isReportsLoading } = useQuery(\n    [\"profile-of-facility-reports\"],\n    async () => {\n      const res = await ReportService.getProfOfFac();\n      return res.data;\n    }\n  );\n\n  if (isReportsLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-black\">\n        <Trans>Report</Trans>:<Trans>Profile of facilities</Trans> (\n        {country?.country})\n      </h3>\n      <h5 className=\"text-black\">\n        <Trans>Date</Trans>: {new Date().toLocaleDateString(\"en-GB\")}\n      </h5>\n      {reports &&\n        Object.keys(reports).map((key) => {\n          const title =\n            key === \"general\" ? (\n              <Trans>General populations</Trans>\n            ) : key === \"under_1\" ? (\n              <Trans>Under-1 Population</Trans>\n            ) : (\n              \"\"\n            );\n          return (\n            <ReportTable\n              reports={reports[key]}\n              tableData={allTableData[key]}\n              title={title}\n            />\n          );\n        })}\n    </div>\n  );\n}\n\nexport default ProfileOfFacility;\n","import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"https://tlsapi.invgap.org/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  savegaps(payload, saved) {\n    return ApiManager.post(API_URL + \"gapsave?condition=\" + payload, saved, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n","import { Table, TableContainer } from \"@mui/material\";\n/**\n * @param  {DOMElement} {children}\n * shared table use in settings and all tables\n */\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["separator","x","undefined","n","sep","reverse","text","split","join","rx","toString","replace","thousandSeparator","parseInt","allTableData","by_type","headTitle","valueKey","func","val","by_owner","by_power","general","under_1","ReportTable","props","reports","tableData","title","className","length","map","data","report","index","country","JSON","parse","localStorage","getItem","useQuery","ReportService","res","isLoading","Date","toLocaleDateString","Object","keys","key","API_URL","ApiManager","headers","Authorization","authHeader","params","degree","payload","saved","children"],"sourceRoot":""}