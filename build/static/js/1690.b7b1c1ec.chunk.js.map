{"version":3,"file":"static/js/1690.b7b1c1ec.chunk.js","mappings":"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","sources":["app/items/items-qr/filter-form/FilterFormDD.js","app/items/items-qr/filter-form/FilterFormCheckbox.js","app/items/items-qr/filter-form/FilterFormYearsInput.js","app/items/items-qr/filter-form/FilterFormTextInput.js","app/items/items-qr/filter-form/FilterFormReducer.js","app/items/items-qr/filter-form/FilterForm.js","app/items/items-qr/table/QRTableRow.js","app/items/items-qr/table/QRTable.js","app/items/items-qr/ItemsQR.js","app/shared/SharedTable.js"],"sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Trans } from \"react-i18next\";\n\nconst labelStyle = {\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  lineHeight: \"1.4\",\n};\n\n// Options come from props.\n// just select and tell what is selected\nconst FilterFormDD = (props) => {\n  const onChangeHandler = (e) => {\n    props.onChange(e);\n  };\n\n  return (\n    <Form.Group className=\"row mb-0\">\n      <label className=\"col-sm-3 text-right control-label\" style={labelStyle}>\n        <Trans> {props.label} </Trans>\n      </label>\n      <div className=\"col-sm-7\">\n        <Form.Control\n          size=\"sm\"\n          onChange={onChangeHandler}\n          className=\"form-select\"\n          as=\"select\"\n        >\n          <option value=\"-1\"> Please select </option>\n          {props.options.map((el) => {\n            return (\n              <option key={el.id} value={el.id}>\n                {el.op}\n              </option>\n            );\n          })}\n        </Form.Control>\n      </div>\n      <hr className=\"my-3 \" />\n    </Form.Group>\n  );\n};\nexport default FilterFormDD;\n","import React from \"react\";\n\nconst FilterFormCheckbox = (props) => {\n  return (\n    <div className=\"form-check pl-2 \">\n      <label className=\"form-check-label\">\n        <input\n          onChange={props.onChange}\n          type=\"checkbox\"\n          className=\"form-check-input\"\n        />\n        <i className=\"input-helper\" />\n        {props.label}\n      </label>\n    </div>\n  );\n};\n\nexport default FilterFormCheckbox;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst FilterFormYearsInput = (props) => {\n  return (\n    <Form.Group className=\"pt-1 row\">\n      <label className=\"py-2\"> Years Installed: </label>\n      <Form.Control\n        style={{ width: \"100%\" }}\n        type=\"number\"\n        className=\"form-control col-sm-3 mt-2 ml-3\"\n        placeholder=\"from\"\n        aria-label=\"from-year\"\n        onChange={props.onFromChange}\n      />\n      <Form.Control\n        style={{ width: \"100%\" }}\n        type=\"number\"\n        className=\"form-control mt-2 col-sm-3 ml-3\"\n        placeholder=\"to\"\n        aria-label=\"from-year\"\n        onChange={props.onToChange}\n      />\n    </Form.Group>\n  );\n};\nexport default FilterFormYearsInput;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst FilterFormTextInput = (props) => {\n  return (\n    <Form.Group className=\"ml-2 w-100\">\n      <label className=\"py-2\"> Item Code </label>\n      <Form.Control\n        style={{ width: \"50%\" }}\n        type=\"text\"\n        className=\"form-control mt-2 \"\n        placeholder=\"ABC05\"\n        aria-label=\"from-year\"\n        onChange={props.onChange}\n      />\n    </Form.Group>\n  );\n};\n\nexport default FilterFormTextInput;\n","import React from \"react\";\n\nconst filterFormReducer = (state, action) => {\n  if (action.type === \"CHANGE\") {\n    return {\n      ...state,\n      [action.field]: action.value,\n    };\n  }\n\n  return {\n    facility: -1,\n    item_class: -1,\n    item_type: -1,\n    physical: -1,\n    working: -1,\n    user: -1,\n    year_from: -1,\n    year_to: -1,\n    code: -1,\n    func: false,\n  };\n};\n// const [filterState, dispatchFilterState] = useReducer(filterFormReducer, {\n//     facilityId: null,\n//     itemClassId: null,\n//     itemTypeId: null,\n//     physicalId: null,\n//     workingId: null,\n//     userId: null,\n//     yearFrom: null,\n//     yearTo: null,\n//     functional: false,\n// }, {});\n\nexport default filterFormReducer;\n","import React, { useReducer, useState } from \"react\";\nimport FilterFormDD from \"./FilterFormDD\";\nimport FilterFormCheckbox from \"./FilterFormCheckbox\";\nimport FilterFormYearsInput from \"./FilterFormYearsInput\";\nimport FilterFormTextInput from \"./FilterFormTextInput\";\nimport { useQuery } from \"react-query\";\nimport ItemService from \"../../../services/item.service\";\nimport Spinner from \"../../../shared/Spinner\";\nimport filterFormReducer from \"./FilterFormReducer\";\nimport toast from \"react-hot-toast\";\n\nconst FilterForm = (props) => {\n  const [itemTypeOptions, setItemTypeOptions] = useState([]);\n\n  const [filterState, dispatchFilterState] = useReducer(filterFormReducer, {});\n\n  // fetching data for dropdowns\n  const { data, isLoading: formDataIsLoading } = useQuery(\n    [],\n    async () => {\n      const res = await ItemService.getQrHelper();\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (formDataIsLoading || data.length === 0) {\n    return <Spinner />;\n  }\n\n  // ------------ feeding data to app\n  const facilityOptions = data.facility.map((el) => {\n    return { id: el.id, op: el.name };\n  });\n  const itemClassOptions = data.items.map((el) => {\n    return { id: el.item_class.id, op: el.item_class.title };\n  });\n  const workingStatusOptions = data.working.map((el) => {\n    return { id: el.id, op: el.name };\n  });\n  const physicalStatusOptions = data.physical.map((el) => {\n    return { id: el.id, op: el.name };\n  });\n  const usersOptions = data.users.map((el) => {\n    return { id: el.id, op: el.name };\n  });\n  // Handlers\n  const mainFacilityDDHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"facility\",\n      value: e.target.value,\n    });\n  };\n\n  const itemClassDDHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"item_class\",\n      value: e.target.value,\n    });\n\n    let tmp = [];\n    const classId = e.target.value;\n\n    data.items.map((el) => {\n      if (el.item_class.id === +classId) {\n        el.item_type.map((el) => {\n          tmp.push({ id: el.id, op: el.title });\n        });\n      }\n    });\n    setItemTypeOptions(tmp);\n  };\n\n  const itemTypeDDHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"item_type\",\n      value: e.target.value,\n    });\n  };\n  const workingStatusDDHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"working\",\n      value: e.target.value,\n    });\n  };\n  const physicalConditionDDHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"physical\",\n      value: e.target.value,\n    });\n  };\n  const userChangeHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"user\",\n      value: e.target.value,\n    });\n  };\n  const yearFromChangeHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"year_from\",\n      value: e.target.value,\n    });\n  };\n  const yearToChangeHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"year_to\",\n      value: e.target.value,\n    });\n  };\n  const itemCodeChangeHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"code\",\n      value: e.target.value,\n    });\n  };\n  const functionalChangeHandler = (e) => {\n    dispatchFilterState({\n      type: \"CHANGE\",\n      field: \"func\",\n      value: e.target.checked,\n    });\n  };\n  const submitHandler = () => {\n    if (\n      filterState.item_class === undefined ||\n      filterState.item_class === \"-1\"\n    ) {\n      toast.error(\"Please select  item class\");\n    }\n    props.onSubmit(filterState);\n  };\n\n  console.log(filterState);\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-7\">\n        <FilterFormDD\n          key={\"A\"}\n          label={\"Main Facility\"}\n          options={facilityOptions}\n          onChange={mainFacilityDDHandler}\n        />\n        <FilterFormDD\n          key={\"B\"}\n          label={\"Item class\"}\n          options={itemClassOptions}\n          onChange={itemClassDDHandler}\n        />\n        <FilterFormDD\n          key={\"C\"}\n          label={\"Item type\"}\n          options={itemTypeOptions}\n          onChange={itemTypeDDHandler}\n        />\n        <FilterFormDD\n          key={\"D\"}\n          label={\"Working status\"}\n          options={workingStatusOptions}\n          onChange={workingStatusDDHandler}\n        />\n        <FilterFormDD\n          key={\"E\"}\n          label={\"Physical condition\"}\n          options={physicalStatusOptions}\n          onChange={physicalConditionDDHandler}\n        />\n        <FilterFormDD\n          key={\"F\"}\n          label={\"User\"}\n          options={usersOptions}\n          onChange={userChangeHandler}\n        />\n      </div>\n\n      <div className=\"col-sm-4 ml-5\">\n        <FilterFormYearsInput\n          onFromChange={yearFromChangeHandler}\n          onToChange={yearToChangeHandler}\n        />\n        <hr className=\"my-1\" />\n        <FilterFormTextInput onChange={itemCodeChangeHandler} />\n        <hr className=\"my-1\" />\n        <FilterFormCheckbox\n          onChange={functionalChangeHandler}\n          label={\"Is functioning\"}\n        />\n\n        <button\n          onClick={submitHandler}\n          type=\"button\"\n          className=\"btn btn-primary btn-fw mt-3 w-75\"\n        >\n          Search QR code\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterForm;\n","import React from \"react\";\nimport { TableCell } from \"@mui/material\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport \"../../../styles/table.scss\";\n\nconst QRTableRow = (props) => {\n  return (\n    <tr>\n      <TableCell className=\"col-sm-2\">{props?.itemClass}</TableCell>\n      <TableCell className=\"col-sm-2\">{props?.itemType}</TableCell>\n      <TableCell className=\"col-sm-2\">{props?.pqsCode}</TableCell>\n      <TableCell className=\"col-sm-2\">{props?.code}</TableCell>\n      <TableCell className=\"qr\">\n        <QRCodeSVG value={props?.qr} size={128} />\n      </TableCell>\n    </tr>\n  );\n};\n\nexport default QRTableRow;\n","import React from \"react\";\nimport SharedTable from \"../../../shared/SharedTable\";\nimport \"../../../styles/table.scss\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport ItemService from \"../../../services/item.service\";\nimport Spinner from \"../../../shared/Spinner\";\nimport QRTableRow from \"./QRTableRow\";\n\nconst QRTable = React.forwardRef((props, refToPrint) => {\n  const { data, isLoading } = useQuery(\n    [\"filter\"],\n    async () => {\n      const res = await ItemService.getQrTableData(props.query);\n      console.log(\"res.data is\");\n      console.log(res.data);\n      return res?.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const tableRows = data.map((el, i) => {\n    return (\n      <QRTableRow\n        key={i}\n        itemClass={el?.item_class}\n        itemType={el?.item_type}\n        pqsCode={el?.pqs_code}\n        code={el?.code}\n        qr={el?.qr}\n      />\n    );\n  });\n\n  return (\n    <div ref={refToPrint} className={\"mt-5 \"} style={{ color: \"#000\" }}>\n      <div className={\"text-center\"}>\n        <div>\n          <h4>Inventory and Gap Analysis System (IGA)</h4>\n        </div>\n        <div>\n          <h4>{JSON.parse(localStorage.getItem(\"country\"))?.country}</h4>\n        </div>\n      </div>\n\n      <div className=\"card mt-4\">\n        <div className=\"card-body\">\n          <div className=\"table-container-to-print\">\n            <SharedTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell className=\"col-sm-2\">\n                    <Trans>Item class</Trans>\n                  </TableCell>\n                  <TableCell className=\"col-sm-2\">\n                    <Trans>Item category</Trans>\n                  </TableCell>\n                  <TableCell className=\"col-sm-2\">\n                    <Trans>Model</Trans>\n                  </TableCell>\n                  <TableCell className=\"col-sm-2\">\n                    <Trans>code</Trans>\n                  </TableCell>\n                  <TableCell className=\"col-sm-2\">\n                    <Trans>QR Code</Trans>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{tableRows}</TableBody>\n            </SharedTable>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\nexport default QRTable;\n","import React, { Fragment, useRef, useState } from \"react\";\n\nimport FilterForm from \"./filter-form/FilterForm\";\nimport QRTable from \"./table/QRTable\";\nimport ReactToPrint from \"react-to-print\";\n\nconst ItemsQR = () => {\n  const [queryString, setQueryString] = useState();\n  const componentToPrintRef = useRef();\n\n  const filterSubmitHandler = (filterStateData) => {\n    let s = \"\";\n    for (let key in filterStateData) {\n      if (filterStateData[key] !== \"-1\") {\n        s += key + \"=\" + filterStateData[key] + \"&\";\n      }\n    }\n    setQueryString(s);\n  };\n\n  return (\n    <Fragment>\n      <FilterForm onSubmit={filterSubmitHandler} />\n\n      {queryString && (\n        <div>\n          <ReactToPrint\n            trigger={() => (\n              <button className={\"btn btn-info btn-icon-text\"}>\n                Print <i className=\"mdi mdi-printer btn-icon-append\" />\n              </button>\n            )}\n            content={() => componentToPrintRef.current}\n            documentTitle={\"IGA Reports\"}\n          />\n          <QRTable ref={componentToPrintRef} query={queryString} />\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ItemsQR;\n","import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["labelStyle","display","justifyContent","alignItems","lineHeight","props","Form","className","style","Trans","label","size","onChange","e","as","value","options","map","el","id","op","type","width","placeholder","onFromChange","onToChange","state","action","field","facility","item_class","item_type","physical","working","user","year_from","year_to","code","func","useState","itemTypeOptions","setItemTypeOptions","useReducer","filterFormReducer","filterState","dispatchFilterState","useQuery","ItemService","res","data","refetchOnMount","isLoading","length","Spinner","facilityOptions","name","itemClassOptions","items","title","workingStatusOptions","physicalStatusOptions","usersOptions","users","console","log","target","tmp","classId","push","checked","onClick","undefined","toast","onSubmit","TableCell","itemClass","itemType","pqsCode","qr","React","refToPrint","query","tableRows","i","pqs_code","ref","color","JSON","parse","localStorage","getItem","country","SharedTable","TableHead","TableRow","TableBody","queryString","setQueryString","componentToPrintRef","useRef","Fragment","filterStateData","s","key","trigger","content","current","documentTitle","children"],"sourceRoot":""}