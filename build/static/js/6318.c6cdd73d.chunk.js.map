{
  "version": 3,
  "file": "static/js/6318.c6cdd73d.chunk.js",
  "mappings": "6JAGMA,EAAU,0CAEVC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAmDH,OAnDGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,gBAAAA,MACJ,WACE,OAAOC,EAAAA,EAAAA,IAAeF,EAAU,SAAU,CACxCG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,yCACD,SAAyBC,EAAIC,GAC3B,OAAOL,EAAAA,EAAAA,IAAeF,EAAU,cAAgBM,EAAK,SAAWC,EAAM,CACpEJ,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,8BACD,SAAcG,GACZ,OAAON,EAAAA,EAAAA,IAAeF,EAAU,UAAWQ,EAAM,CAC/CL,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,8BACD,WACE,OAAOH,EAAAA,EAAAA,IAAeF,EAAU,cAAe,CAC7CG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,8BACD,SAAcG,GAEZ,OAAON,EAAAA,EAAAA,IAAeF,EAAU,cAAeQ,EAAM,CACnDL,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,mCACD,SAAmBC,GACjB,IAAMG,EAAS,CAAC,EAIhB,OAHIH,IACFG,EAAM,GAASH,GAEVJ,EAAAA,EAAAA,IAAeF,EAAU,oBAAqB,CACnDG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,MAC1BI,OAAAA,GAEH,mCACD,SAAmBC,GACjB,OAAOR,EAAAA,EAAAA,IAAeF,EAAU,oBAAqBU,EAAS,CAC5DP,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,mCACD,WACE,OAAOH,EAAAA,EAAAA,IAAeF,EAAU,oBAAqB,CACnDG,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,mCACD,SAAmBK,GACjB,OAAOR,EAAAA,EAAAA,IAAeF,EAAU,oBAAqBU,EAAS,CAC5DP,QAAS,CAAEC,eAAeC,EAAAA,EAAAA,OAE7B,OAnDGJ,GAsDN,QAAmBA,C,+TC8NnB,UAxQA,WAA2B,IAAD,EACxB,GAAoCU,EAAAA,EAAAA,UAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,MAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOO,EAAP,KAAqBC,EAArB,KAEA,GAIIC,EAAAA,EAAAA,UACF,CAAC,qBADS,uBAEV,yGACoBnB,EAAAA,EAAAA,qBADpB,cACQoB,EADR,yBAESA,EAAIb,MAFb,2CAIA,CACEc,gBAAgB,IAVZC,EADR,EACEf,KACWgB,EAFb,EAEEC,UACSC,EAHX,EAGEC,QAYIC,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,IAAMC,EAAS,CAAC,EAChB,GAAIP,EAAiB,CAAC,IAAD,YACCA,GADD,IACnB,2BAAqC,CAAC,IAAD,EAA1BQ,EAA0B,QAC7BC,EAAkB,UAAGF,EAAOC,EAAME,cAAhB,QAA0B,GAClDD,EAAmBE,KAAKH,GACxBD,EAAOC,EAAME,OAASD,CACvB,CALkB,+BAMpB,CACD,OAAOF,CACR,GAAE,CAACP,IAEEY,EAAuB,SAACC,EAAGC,EAAcC,GAC7C,IAAMC,EAAUH,EAAEI,OAAOD,QACnBE,GAAgB,OAAO3B,GACvB4B,EAAa5B,EAAY6B,WAC7B,SAACZ,GAAD,OAAWA,EAAMzB,KAAO+B,EAAa/B,EAArC,IAEF,IAAoB,IAAhBoC,EAEFD,EAAiBP,MAAjB,kBACKG,GADL,IAEEO,SAAmB,aAATN,GAAsBC,EAChCM,OAAiB,WAATP,GAAoBC,SAEzB,CACL,IAAMO,EAAoBhC,EAAY4B,GACtCD,EAAiBC,IAAjB,kBACKI,GADL,IAEEF,SAAmB,aAATN,EAAsBC,EAAUO,EAAkBF,SAC5DC,OAAiB,WAATP,EAAoBC,EAAUO,EAAkBD,QAE3D,CACD9B,EAAe0B,EAChB,EAEKM,EAAgB,yCAAG,mGACL9C,EAAAA,EAAAA,mBAAkC,EAAC,kBAE9Ce,GAF6C,IAGhDgC,KAAM9B,MAJa,cAOvBQ,IACAT,EAAe,MACfE,EAAgB,IATO,2CAAH,qDAYhB8B,EAAa,yCAAG,mGACFhD,EAAAA,EAAAA,mBAAkCa,GADhC,yDAAH,qDAgBnB,OACE,4BACE,gBAAIoC,UAAU,kBAAd,WACE,SAAC,IAAD,gCADF,KACmC,SAAC,IAAD,4BAElC1B,GACC,SAAC,IAAD,KAEA,iCACE,gBAAK0B,UAAU,OAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,iBAAf,WACE,gBAAKA,UAAU,WAAWC,MAAO,CAAEC,SAAU,QAA7C,UACE,SAAC,IAAD,CAASxC,WAAYA,EAArB,SACGyC,OAAOC,KAAK1B,GAAkB2B,KAAI,SAACtB,EAAOuB,GACzC,OACE,SAAC,IAAD,CAAkBC,QAAS,WAnB/C5C,EAmBgE2C,EAAjB,EAA3B,UACE,SAAC,IAAD,CACEE,MAAM,UACNP,MAAO,CAAEQ,MAAO,eAFlB,SAIG1B,KALMA,EASd,SAGL,gBAAKiB,UAAU,WAAf,UACE,UAAC,IAAD,CAAKU,GAAI,CAAEC,QAAS,OAAQC,cAAe,MAAOC,GAAI,GAAtD,WACE,SAAC,IAAD,CACEL,MAAM,UACNM,SAAyB,IAAfpD,EACV6C,QAzCD,WACjB5C,GAAc,SAACoD,GAAD,OAAoBA,EAAiB,CAArC,GACf,EAwCmBL,GAAI,CAAEM,GAAI,GAJZ,UAME,SAAC,IAAD,sBAEF,SAAC,IAAD,CAAKN,GAAI,CAAEO,KAAM,eACjB,SAAC,IAAD,CACEH,SACEpD,IAAeyC,OAAOC,KAAK1B,GAAkBwC,OAAS,EAExDX,QAvDD,WACjB5C,GAAc,SAACoD,GAAD,OAAoBA,EAAiB,CAArC,GACf,EAsDmBL,GAAI,CAAEM,GAAI,GALZ,UAOE,SAAC,IAAD,sBAEF,mBACEhB,UAAU,mBACVO,QAASR,EAFX,UAIE,SAAC,IAAD,sCAQZ,gBAAKC,UAAU,OAAf,UACE,gBAAKA,UAAU,OAAf,UACE,gBAAKA,UAAU,gBAAf,UACE,iBAAKA,UAAU,MAAf,WACE,8BAAMG,OAAOC,KAAK1B,GAAkBhB,OACpC,gBAAKsC,UAAU,uBAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAWA,UAAU,WAArB,UACE,SAAC,IAAD,4BAEF,SAAC,IAAD,CAAWA,UAAU,WAArB,UACE,SAAC,IAAD,wBAEF,UAAC,IAAD,CAAWA,UAAU,WAArB,WACE,SAAC,IAAD,yCADF,KAC4C,SAAC,IAAD,6BAE5C,SAAC,IAAD,CAAWA,UAAU,WAArB,UAAgC,SAAC,IAAD,2BAGpC,SAAC,IAAD,oBACGG,OAAOgB,OAAOzC,GAAkBhB,UADnC,aACG,EAA6C2C,KAC5C,SAACxB,GAAW,IAAD,EACHuC,EAAU,UACdxD,EAAYyD,MACV,SAACD,GAAD,OAAgBA,EAAWhE,KAAOyB,EAAMzB,EAAxC,WAFY,eAIdiB,QAJc,IAIdA,OAJc,EAIdA,EAAiBgD,MACf,SAACC,GAAD,OAAWzC,EAAMzB,KAAOkE,EAAMlE,EAA9B,IAGJ,OADEmE,QAAQC,IAAIJ,IAEZ,UAAC,IAAD,YACE,SAAC,IAAD,CAAWpB,UAAU,WAArB,UACc,OAAXlC,QAAW,IAAXA,OAAA,EAAAA,EAAaV,MAAOyB,EAAMzB,IACzB,kBACE0C,KAAK,aACLzC,KAAK,OACLoE,SAAU,SAACvC,GAAD,OACRjB,EAAgBiB,EAAEI,OAAOoC,MADjB,EAGVC,aAAc9C,EAAMiB,OAGtBjB,EAAMiB,QAGV,SAAC,IAAD,CAAWE,UAAU,WAArB,UACE,kBACE3C,KAAK,WACLyD,SAAQ,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAYN,SACtBzB,QAAO,OAAE+B,QAAF,IAAEA,OAAF,EAAEA,EAAYzB,OACrB8B,SAAU,SAACvC,GAAD,OACRD,EAAqBC,EAAGL,EAAO,SADvB,OAKd,SAAC,IAAD,CAAWmB,UAAU,WAArB,UACE,kBACE3C,KAAK,WACLyD,UACY,OAAVM,QAAU,IAAVA,OAAA,EAAAA,EAAYN,aACZ,OAACM,QAAD,IAACA,GAAAA,EAAYzB,QAEfN,QAAO,OAAE+B,QAAF,IAAEA,OAAF,EAAEA,EAAY1B,SACrB+B,SAAU,SAACvC,GAAD,OACRD,EAAqBC,EAAGL,EAAO,WADvB,OAKd,SAAC,IAAD,CAAWmB,UAAU,WAArB,UACc,OAAXlC,QAAW,IAAXA,OAAA,EAAAA,EAAaV,MAAOyB,EAAMzB,IACzB,iCACE,mBACE4C,UAAU,WACVO,QAASV,EAFX,UAIE,SAAC,IAAD,sBAEF,mBACEG,UAAU,YACVO,QAAS,WACPxC,EAAe,MACfE,EAAgB,GACjB,EALH,UAOE,SAAC,IAAD,UAIJ,mBACE+B,UAAU,WACVO,QAAS,WACPxC,EAAec,GACfZ,EAAgBY,EAAMiB,KACvB,EALH,UAOE,SAAC,IAAD,UAjEOjB,EAAMzB,GAuExB,yBAa1B,C,uCC3PD,IA5BA,WACE,OACE,+BACE,gBACEwE,QAAQ,MACRxE,GAAG,UACHyE,MAAM,6BACNC,WAAW,+BACXC,EAAE,MACFC,EAAE,MACFvB,MAAM,WACNwB,OAAO,YACPC,QAAQ,qBACRC,iBAAiB,yBACjBC,SAAS,WAXX,UAaE,wBACE,iBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,ucAMb,C,uCCRD,IAlBA,WACE,OACE,+BACE,gBACEX,QAAQ,MACRC,MAAM,6BACNK,QAAQ,cACRzB,MAAM,KACNwB,OAAO,KACPH,WAAW,+BACX,oBAAkB,kBAPpB,UASE,iBAAMS,EAAE,gaAIf,C,6DCJD,IAVA,YAAoC,IAAbC,EAAY,EAAZA,SACrB,OACE,+BACE,SAAC,IAAD,WACE,SAAC,IAAD,UAAQA,OAIf,C,qNCTM,SAASC,EAA0BC,GACxC,OAAOC,EAAAA,EAAAA,GAAqB,gBAAiBD,EAC9C,CACD,IACA,GAD0BE,E,SAAAA,GAAuB,gBAAiB,CAAC,OAAQ,aAAc,WAAY,gB,WCF/FC,EAAY,CAAC,WAAY,YAAa,OAAQ,YA2B9CC,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAY,CACxClD,KAAM,gBACN4C,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,EAAC,uBACCC,EAAAA,aAAkCF,EAAOG,aAC/CH,EAAOI,KAAMJ,EAAOC,EAAWI,aACnC,GAVoBT,EAWpB,gBACDK,EADC,EACDA,WADC,OAEGK,EAAAA,EAAAA,GAAS,CACbhD,MAAO,OACPiD,QAAS,YACTC,OAAQ,cACRC,UAAW,eACiB,aAA3BR,EAAWI,aAA8B,CAC1CK,eAAgB,aAChBH,QAAS,MACTC,OAAQ,SARI,uBAULN,EAAAA,aAAkC,CACvC7C,MAAO,uBAbR,IAoGH,EApFgCsD,EAAAA,YAAiB,SAAoBC,EAASC,GAC5E,IAAMd,GAAQe,EAAAA,EAAAA,GAAc,CAC1Bf,MAAOa,EACPjE,KAAM,kBAIN0C,EAIEU,EAJFV,SACAxC,EAGEkD,EAHFlD,UACAkE,EAEEhB,EAFFgB,KACAC,EACEjB,EADFiB,SAEIC,GAAQC,EAAAA,EAAAA,GAA8BnB,EAAOL,GAGjD/B,EACEgD,EAAAA,WAAiBQ,EAAAA,GADnBxD,SAGA0C,EACEM,EAAAA,WAAiBS,EAAAA,GADnBf,YAGIJ,GAAaK,EAAAA,EAAAA,GAAS,CAAC,EAAGP,EAAO,CACrCM,YAAAA,IAGIgB,EAhEkB,SAAApB,GACxB,IACEoB,EAEEpB,EAFFoB,QAGIC,EAAQ,CACZlB,KAAM,CAAC,OAFLH,EADFI,aAIAF,YAAa,CAAC,gBAEhB,OAAOoB,EAAAA,EAAAA,GAAeD,EAAOhC,EAA2B+B,EACzD,CAsDiBG,CAAkBvB,GAC5BwB,EAAa,CACjBV,KAAAA,EACAC,SAAAA,GAEIU,GAAQC,EAAAA,EAAAA,GAAatC,EAAU,CAAC,cAA6BsB,EAAAA,aAAmBtB,EAAUoC,IAA2BG,EAAAA,EAAAA,KAAKC,EAAAA,GAAWvB,EAAAA,EAAAA,GAAS,CAAC,EAAGmB,EAAY,CAClKpC,SAAUA,KAEZ,OAAoBuC,EAAAA,EAAAA,KAAKjC,GAAgBW,EAAAA,EAAAA,GAAS,CAChDwB,aAAa,EACbnE,SAAUA,EACVoE,iBAAkB,CAChBlF,UAAWwE,EAAQlB,aAErBtD,WAAWmF,EAAAA,EAAAA,GAAKX,EAAQjB,KAAMvD,GAC9BgE,IAAKA,EACLZ,WAAYA,GACXgB,EAAO,CACR5B,SAAUqC,IAEb,G,uECpGD,MCAe,SAAsBO,EAASC,GAC5C,OAAoBvB,EAAAA,eAAqBsB,KAAwD,IAA5CC,EAASC,QAAQF,EAAQ/H,KAAKkI,QACpF,C",
  "sources": [
    "app/services/related.service.js",
    "app/settings/FacilityFields.js",
    "app/shared/CloseIcon.js",
    "app/shared/EditIcon.js",
    "app/shared/SharedTable.js",
    "../node_modules/@mui/material/StepButton/stepButtonClasses.js",
    "../node_modules/@mui/material/StepButton/StepButton.js",
    "../node_modules/@mui/material/utils/isMuiElement.js",
    "../node_modules/@mui/utils/esm/isMuiElement.js"
  ],
  "sourcesContent": [
    "import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://127.0.0.1:8000/related/\";\n\nclass RelatedService {\n  getParameters() {\n    return ApiManager.get(API_URL + \"params\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getParameterDescriptions(id, type) {\n    return ApiManager.get(API_URL + \"params/?id=\" + id + \"&type=\" + type, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putParameters(data) {\n    return ApiManager.put(API_URL + \"params/\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemFields() {\n    return ApiManager.get(API_URL + \"item-fields\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemFields(data) {\n    // change item type\n    return ApiManager.put(API_URL + \"item-fields\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getRelatedItemType(id) {\n    const params = {};\n    if (id) {\n      params[\"id\"] = id;\n    }\n    return ApiManager.get(API_URL + \"related-item-type\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  putRelatedItemType(payload) {\n    return ApiManager.put(API_URL + \"related-item-type\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getRelatedFacility() {\n    return ApiManager.get(API_URL + \"related-facility/\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putRelatedFacility(payload) {\n    return ApiManager.put(API_URL + \"related-facility/\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new RelatedService();\n",
    "import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useMemo, useState } from \"react\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../shared/Spinner\";\nimport EditIcon from \"../shared/EditIcon\";\nimport CloseIcon from \"../shared/CloseIcon\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport StepButton from \"@mui/material/StepButton\";\nimport \"../styles/table.scss\";\nimport RelatedService from \"../services/related.service\";\nimport \"../styles/inputs.scss\";\nimport { Trans } from \"react-i18next\";\n\nfunction FieldsFacility() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [fieldsValue, setFieldsValue] = useState([]);\n  const [editedField, setEditedField] = useState(null);\n  const [newFieldName, setNewFieldName] = useState(\"\");\n\n  const {\n    data: relatedFacility,\n    isLoading: isRelatedFacilityLoading,\n    refetch: refetchRelatedFacility,\n  } = useQuery(\n    [\"related-facility\"],\n    async () => {\n      const res = await RelatedService.getRelatedFacility();\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  const fieldsCategories = useMemo(() => {\n    const result = {};\n    if (relatedFacility) {\n      for (const field of relatedFacility) {\n        const fieldTopicInResult = result[field.topic] ?? [];\n        fieldTopicInResult.push(field);\n        result[field.topic] = fieldTopicInResult;\n      }\n    }\n    return result;\n  }, [relatedFacility]);\n\n  const onFieldChangeHandler = (e, currentField, kind) => {\n    const checked = e.target.checked;\n    const fieldValuesClone = [...fieldsValue];\n    const fieldIndex = fieldsValue.findIndex(\n      (field) => field.id === currentField.id\n    );\n    if (fieldIndex === -1) {\n      //for the first time\n      fieldValuesClone.push({\n        ...currentField,\n        required: kind === \"required\" ? checked : false,\n        active: kind === \"enable\" ? checked : true,\n      });\n    } else {\n      const currentFieldValue = fieldsValue[fieldIndex];\n      fieldValuesClone[fieldIndex] = {\n        ...currentFieldValue,\n        required: kind === \"required\" ? checked : currentFieldValue.required,\n        active: kind === \"enable\" ? checked : currentFieldValue.active,\n      };\n    }\n    setFieldsValue(fieldValuesClone);\n  };\n\n  const handleSubmitEdit = async () => {\n    const res = await RelatedService.putRelatedFacility([\n      {\n        ...editedField,\n        name: newFieldName,\n      },\n    ]);\n    refetchRelatedFacility();\n    setEditedField(null);\n    setNewFieldName(\"\");\n  };\n\n  const onSaveHandler = async () => {\n    const res = await RelatedService.putRelatedFacility(fieldsValue);\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Fields related to</Trans> <Trans>facilities</Trans>\n      </h3>\n      {isRelatedFacilityLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <div className=\"mt-3\">\n            <div className=\"card\">\n              <div className=\"card-body pb-3\">\n                <div className=\"row pb-4\" style={{ overflow: \"auto\" }}>\n                  <Stepper activeStep={activeStep}>\n                    {Object.keys(fieldsCategories).map((topic, index) => {\n                      return (\n                        <Step key={topic} onClick={() => handleStep(index)}>\n                          <StepButton\n                            color=\"inherit\"\n                            style={{ width: \"max-content\" }}\n                          >\n                            {topic}\n                          </StepButton>\n                        </Step>\n                      );\n                    })}\n                  </Stepper>\n                </div>\n                <div className=\"row mt-2\">\n                  <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                    <Button\n                      color=\"inherit\"\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      sx={{ mr: 1 }}\n                    >\n                      <Trans>Back</Trans>\n                    </Button>\n                    <Box sx={{ flex: \"1 1 auto\" }} />\n                    <Button\n                      disabled={\n                        activeStep === Object.keys(fieldsCategories).length - 1\n                      }\n                      onClick={handleNext}\n                      sx={{ mr: 1 }}\n                    >\n                      <Trans>Next</Trans>\n                    </Button>\n                    <button\n                      className=\"btn btn-primary \"\n                      onClick={onSaveHandler}\n                    >\n                      <Trans>Save all</Trans>\n                    </button>\n                  </Box>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-3\">\n            <div className=\"card\">\n              <div className=\"card-body p-3\">\n                <div className=\"row\">\n                  <h4> {Object.keys(fieldsCategories)[activeStep]}</h4>\n                  <div className=\"mt-5 table-container\">\n                    <SharedTable>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell className=\"col-sm-4\">\n                            <Trans>Field name</Trans>\n                          </TableCell>\n                          <TableCell className=\"col-sm-2\">\n                            <Trans>Enable</Trans>\n                          </TableCell>\n                          <TableCell className=\"col-sm-4\">\n                            <Trans>Is this required field for</Trans> <Trans> facility?</Trans>\n                          </TableCell>\n                          <TableCell className=\"col-sm-2\"><Trans>Edit</Trans></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {Object.values(fieldsCategories)[activeStep]?.map(\n                          (field) => {\n                            const fieldValue =\n                              fieldsValue.find(\n                                (fieldValue) => fieldValue.id === field.id\n                              ) ??\n                              relatedFacility?.find(\n                                (rItem) => field.id === rItem.id\n                              );\n                              console.log(fieldValue)\n                            return (\n                              <TableRow key={field.id}>\n                                <TableCell className=\"col-sm-4\">\n                                  {editedField?.id === field.id ? (\n                                    <input\n                                      name=\"field-name\"\n                                      type=\"text\"\n                                      onChange={(e) =>\n                                        setNewFieldName(e.target.value)\n                                      }\n                                      defaultValue={field.name}\n                                    />\n                                  ) : (\n                                    field.name\n                                  )}\n                                </TableCell>\n                                <TableCell className=\"col-sm-2\">\n                                  <input\n                                    type=\"checkbox\"\n                                    disabled={fieldValue?.disabled}\n                                    checked={fieldValue?.active}\n                                    onChange={(e) =>\n                                      onFieldChangeHandler(e, field, \"enable\")\n                                    }\n                                  />\n                                </TableCell>\n                                <TableCell className=\"col-sm-4\">\n                                  <input\n                                    type=\"checkbox\"\n                                    disabled={\n                                      fieldValue?.disabled ||\n                                      !fieldValue?.active\n                                    }\n                                    checked={fieldValue?.required}\n                                    onChange={(e) =>\n                                      onFieldChangeHandler(e, field, \"required\")\n                                    }\n                                  />\n                                </TableCell>\n                                <TableCell className=\"col-sm-2\">\n                                  {editedField?.id === field.id ? (\n                                    <>\n                                      <button\n                                        className=\"save-btn\"\n                                        onClick={handleSubmitEdit}\n                                      >\n                                        <Trans>Save</Trans>\n                                      </button>\n                                      <button\n                                        className=\"close-btn\"\n                                        onClick={() => {\n                                          setEditedField(null);\n                                          setNewFieldName(\"\");\n                                        }}\n                                      >\n                                        <CloseIcon />\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <button\n                                      className=\"edit-btn\"\n                                      onClick={() => {\n                                        setEditedField(field);\n                                        setNewFieldName(field.name);\n                                      }}\n                                    >\n                                      <EditIcon />\n                                    </button>\n                                  )}\n                                </TableCell>\n                              </TableRow>\n                            );\n                          }\n                        )}\n                      </TableBody>\n                    </SharedTable>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FieldsFacility;\n",
    "function CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n",
    "function EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        width=\"20\"\n        height=\"20\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n",
    "import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getStepButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiStepButton', slot);\n}\nconst stepButtonClasses = generateUtilityClasses('MuiStepButton', ['root', 'horizontal', 'vertical', 'touchRipple']);\nexport default stepButtonClasses;",
    "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"icon\", \"optional\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport StepLabel from '../StepLabel';\nimport isMuiElement from '../utils/isMuiElement';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from '../Step/StepContext';\nimport stepButtonClasses, { getStepButtonUtilityClass } from './stepButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation],\n    touchRipple: ['touchRipple']\n  };\n  return composeClasses(slots, getStepButtonUtilityClass, classes);\n};\n\nconst StepButtonRoot = styled(ButtonBase, {\n  name: 'MuiStepButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${stepButtonClasses.touchRipple}`]: styles.touchRipple\n    }, styles.root, styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  width: '100%',\n  padding: '24px 16px',\n  margin: '-24px -16px',\n  boxSizing: 'content-box'\n}, ownerState.orientation === 'vertical' && {\n  justifyContent: 'flex-start',\n  padding: '8px',\n  margin: '-8px'\n}, {\n  [`& .${stepButtonClasses.touchRipple}`]: {\n    color: 'rgba(0, 0, 0, 0.3)'\n  }\n}));\nconst StepButton = /*#__PURE__*/React.forwardRef(function StepButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepButton'\n  });\n\n  const {\n    children,\n    className,\n    icon,\n    optional\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    disabled\n  } = React.useContext(StepContext);\n  const {\n    orientation\n  } = React.useContext(StepperContext);\n\n  const ownerState = _extends({}, props, {\n    orientation\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {\n    icon,\n    optional\n  };\n  const child = isMuiElement(children, ['StepLabel']) ? /*#__PURE__*/React.cloneElement(children, childProps) : /*#__PURE__*/_jsx(StepLabel, _extends({}, childProps, {\n    children: children\n  }));\n  return /*#__PURE__*/_jsx(StepButtonRoot, _extends({\n    focusRipple: true,\n    disabled: disabled,\n    TouchRippleProps: {\n      className: classes.touchRipple\n    },\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: child\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon displayed by the step label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default StepButton;",
    "import { unstable_isMuiElement as isMuiElement } from '@mui/utils';\nexport default isMuiElement;",
    "import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}"
  ],
  "names": [
    "API_URL",
    "RelatedService",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "id",
    "type",
    "data",
    "params",
    "payload",
    "useState",
    "activeStep",
    "setActiveStep",
    "fieldsValue",
    "setFieldsValue",
    "editedField",
    "setEditedField",
    "newFieldName",
    "setNewFieldName",
    "useQuery",
    "res",
    "refetchOnMount",
    "relatedFacility",
    "isRelatedFacilityLoading",
    "isLoading",
    "refetchRelatedFacility",
    "refetch",
    "fieldsCategories",
    "useMemo",
    "result",
    "field",
    "fieldTopicInResult",
    "topic",
    "push",
    "onFieldChangeHandler",
    "e",
    "currentField",
    "kind",
    "checked",
    "target",
    "fieldValuesClone",
    "fieldIndex",
    "findIndex",
    "required",
    "active",
    "currentFieldValue",
    "handleSubmitEdit",
    "name",
    "onSaveHandler",
    "className",
    "style",
    "overflow",
    "Object",
    "keys",
    "map",
    "index",
    "onClick",
    "color",
    "width",
    "sx",
    "display",
    "flexDirection",
    "pt",
    "disabled",
    "prevActiveStep",
    "mr",
    "flex",
    "length",
    "values",
    "fieldValue",
    "find",
    "rItem",
    "console",
    "log",
    "onChange",
    "value",
    "defaultValue",
    "version",
    "xmlns",
    "xmlnsXlink",
    "x",
    "y",
    "height",
    "viewBox",
    "enableBackground",
    "xmlSpace",
    "fillRule",
    "clipRule",
    "d",
    "children",
    "getStepButtonUtilityClass",
    "slot",
    "generateUtilityClass",
    "generateUtilityClasses",
    "_excluded",
    "StepButtonRoot",
    "styled",
    "ButtonBase",
    "overridesResolver",
    "props",
    "styles",
    "ownerState",
    "stepButtonClasses",
    "touchRipple",
    "root",
    "orientation",
    "_extends",
    "padding",
    "margin",
    "boxSizing",
    "justifyContent",
    "React",
    "inProps",
    "ref",
    "useThemeProps",
    "icon",
    "optional",
    "other",
    "_objectWithoutPropertiesLoose",
    "StepContext",
    "StepperContext",
    "classes",
    "slots",
    "composeClasses",
    "useUtilityClasses",
    "childProps",
    "child",
    "isMuiElement",
    "_jsx",
    "StepLabel",
    "focusRipple",
    "TouchRippleProps",
    "clsx",
    "element",
    "muiNames",
    "indexOf",
    "muiName"
  ],
  "sourceRoot": ""
}
