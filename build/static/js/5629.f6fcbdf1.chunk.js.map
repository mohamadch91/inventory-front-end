{
  "version": 3,
  "file": "static/js/5629.f6fcbdf1.chunk.js",
  "mappings": "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",
  "sources": [
    "app/helpers/separator.js",
    "app/reports/GapItemReport.js",
    "app/services/report.service.js",
    "app/shared/SharedTable.js"
  ],
  "sourcesContent": [
    "export const separator = (x) => {\n  if (x === undefined || x === null) {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n",
    "import React, { Fragment, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport { Form } from \"react-bootstrap\";\nimport ReportService from \"../services/report.service\";\nimport \"./form.scss\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\nimport API_URL from \"../services/APIURL\";\nimport { separator } from \"../helpers/separator\";\nconst defaultValues = {\n  name: \"\",\n  code: \"\",\n  level: \"-1\",\n  type: \"-1\",\n  power: \"-1\",\n  degree: \"1\",\n  option: \"1\",\n  year_from: \"-1\",\n  year_to: \"-1\",\n  calculate_for: \"-1\",\n};\n\nconst degrees = [\n  { id: \"1\", name: \"2-8 C\" },\n  { id: \"2\", name: \"-20 C\" },\n  { id: \"3\", name: \"-70 C\" },\n  { id: \"4\", name: \"+25 C\" },\n  { id: \"5\", name: \"Dry store\" },\n  { id: \"6\", name: \"All\" },\n];\n\nconst options = [\n  { id: \"1\", name: \"All Equipment\" },\n  { id: \"2\", name: \"Only equipment from PQS/PIS\" },\n  { id: \"3\", name: \"Only equipment with installation date\" },\n];\n\nconst tableData = [\n  {\n    headTitle: \"Parent\",\n    valueKey: \"parent\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Name\",\n    valueKey: \"name\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Level\",\n    valueKey: \"level\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Code\",\n    valueKey: \"code\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"Type\",\n    valueKey: \"type\",\n      func: (val) => val,\n\n  },\n  {\n    headTitle: \"General\",\n    valueKey: \"general\",\n    func: (val) => separator(val),\n\n  },\n  {\n    headTitle: \"Under_1\",\n    valueKey: \"children\",\n    func: (val) => separator(val),\n\n  },\n];\n\nconst tableDegreeData = [\n  {\n    headTitle: \"Required Capacity(lit)\",\n    valueKey: \"req\",\n    func: (val) => {\n      parseFloat(val).toFixed(2)},\n  },\n  {\n    headTitle: \"All Total Available (lit)\",\n    valueKey: \"tcapacity\",\n    func: (val) => parseFloat(val).toFixed(2),\n  },\n  {\n    headTitle: \"Functioning Total Available (lit)\",\n    valueKey: \"fcapacity\",\n    func: (val) => parseFloat(val).toFixed(2),\n  },\n  {\n    headTitle: \"Excess/ Shortage (lit)\",\n    valueKey: \"excees\",\n    func: (val) => parseFloat(val).toFixed(2),\n  },\n];\n\nfunction GapItemReport() {\n  const [filterValues, setFilterValues] = useState(defaultValues);\n  const [selectedDegree, setSelectedDegree] = useState(\"1\");\n\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n\n  const { data: gapItemHelper, isLoading: isGapItemHelperLoading } = useQuery(\n    [\"gap-item-helper\"],\n    async () => {\n      const res = await ReportService.getGapItem({ help: true });\n      return res.data;\n    }\n  );\n\n  const {\n    data: reports,\n    isLoading: isReportsLoading,\n    refetch: fetchReports,\n  } = useQuery(\n    [\"gap-item-report\"],\n    async () => {\n      const params = {\n        help: false,\n      };\n      for (const key in filterValues) {\n        const filter = filterValues[key];\n        if (filter.length > 0 && filter !== \"-1\") {\n          params[key] = filter;\n        }\n      }\n      const res = await ReportService.getGapItem(params);\n      return res.data;\n    },\n    {\n      refetchOnMount: false,\n      enabled: false,\n      onSuccess() {\n        setSelectedDegree(filterValues.degree);\n      },\n    }\n  );\n    const printFilterValues = () => {\n        let filter = \"\";\n        for (const key in filterValues) {\n            const filterValue = filterValues[key];\n            if (filterValue.length > 0 && filterValue !== \"-1\") {\n              if(key==='degree'){\n                filter += `Storage condition=${degrees.find((d) => d.id === filterValue).name} , `;\n              }else if(key==='option'){\n                filter += `${key} = ${options.find((d) => d.id === filterValue).name} , `;\n              }else{\n                filter += `${key} = ${filterValue} , `;\n            }}\n        }\n        return filter;\n\n    }\n  if (isGapItemHelperLoading || isReportsLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Gap Item Report</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                fetchReports();\n              }}\n            >\n              <h4>\n                <Trans>Filters</Trans>\n              </h4>\n              <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Facility name:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          name: value,\n                        }));\n                      }}\n                      value={filterValues.name}\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Code:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          code: value,\n                        }));\n                      }}\n                      value={filterValues.code}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Level:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          level: value,\n                        }));\n                      }}\n                      value={filterValues.level}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {gapItemHelper?.level.map((lev) => (\n                        <option key={lev.id} value={lev.id}>\n                          {`${lev.id} - ${lev.name}`}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Type:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          type: value,\n                        }));\n                      }}\n                      value={filterValues.type}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {gapItemHelper?.type.map((ty) => (\n                        <option key={ty.id} value={ty.id}>\n                          {ty.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Power source:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          power: value,\n                        }));\n                      }}\n                      value={filterValues.power}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        Please select\n                      </option>\n                      {gapItemHelper?.power.map((pow) => (\n                        <option key={pow.id} value={pow.id}>\n                          {pow.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Storage condition:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          degree: value,\n                        }));\n                      }}\n                      value={filterValues.item_class}\n                      as=\"select\"\n                    >\n                      {degrees?.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-5\">\n                <h4>\n                  <Trans>Item Options</Trans>\n                </h4>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Options:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          option: value,\n                        }));\n                      }}\n                      value={filterValues.item_class}\n                      as=\"select\"\n                    >\n                      {options?.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-2\">\n                      <Trans>from:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          year_from: value,\n                        }));\n                      }}\n                      value={filterValues.year_from}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        select\n                      </option>\n                      {console.log(new Date().getUTCFullYear())}\n                      {Array.from({ length: 30 }).map((_, i) => {\n                        const year =\n                          (\n                            new Date().getUTCFullYear()) - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                    <label className=\"label col-sm-1\">\n                      <Trans>to:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          year_to: value,\n                        }));\n                      }}\n                      value={filterValues.year_to}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        select\n                      </option>\n                      {Array.from({\n                        length:\n                          new Date().getUTCFullYear() - filterValues.year_from+1,\n                      }).map((_, i) => {\n                        const year = new Date().getUTCFullYear() - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                    <label className=\"label col-sm-3\">\n                      <Trans>Calculate for year:</Trans>\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-2\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          calculate_for: value,\n                        }));\n                      }}\n                      value={filterValues.calculate_for}\n                      as=\"select\"\n                    >\n                      <option value=\"-1\" selected disabled>\n                        select\n                      </option>\n                      {Array.from({ length: 30 }).map((_, i) => {\n                        const year = new Date().getUTCFullYear() - i;\n                        return (\n                          <option key={year} value={year}>\n                            {year}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-1\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Reports\n                  </button>\n                </div>\n                <div className=\"col-sm-1\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    onClick={() => setFilterValues(defaultValues)}\n                  >\n                    Clear\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <h4>\n              <Trans>Report : Gap Item Report ({country?.country})</Trans>\n            </h4>\n            <h6>\n              Filters : {\"\"} {printFilterValues()}\n            </h6>\n\n            <h6>Date: {new Date().toISOString().split(\"T\")[0]}</h6>\n            <div className=\"mt-3 table-container \">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={5}>\n                      Facility information\n                    </TableCell>\n                    <TableCell align=\"center\" colSpan={2}>\n                      Populations\n                    </TableCell>\n                    {selectedDegree === \"6\" ? (\n                      Array.from({ length: 5 }).map((_, i) => (\n                        <TableCell\n                          key={i}\n                          align=\"center\"\n                          colSpan={4}\n                          style={{ textAlign: \"center\" }}\n                        >\n                          {degrees[i].name}\n                        </TableCell>\n                      ))\n                    ) : (\n                      <TableCell\n                        align=\"center\"\n                        colSpan={4}\n                        style={{ textAlign: \"center\" }}\n                      >\n                        {degrees[+selectedDegree - 1].name}\n                      </TableCell>\n                    )}\n                  </TableRow>\n                  <TableRow>\n                    {tableData.map((data) => (\n                      <TableCell key={data.headTitle}>\n                        <Trans>{data.headTitle}</Trans>\n                      </TableCell>\n                    ))}\n                    {Array.from({ length: selectedDegree === \"6\" ? 5 : 1 }).map(\n                      (_, i) => (\n                        <Fragment key={i}>\n                          {tableDegreeData.map((td) => (\n                            <TableCell key={`${td.valueKey}${i + 1}`}>\n                              <Trans>{td.headTitle}</Trans>\n                            </TableCell>\n                          ))}\n                        </Fragment>\n                      )\n                    )}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.data.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        {tableData.map((data) => (\n                          <TableCell key={data.valueKey}>\n                            {data.func(report[data.valueKey]) ?? \"-\"}\n                          </TableCell>\n                        ))}\n                        {Array.from({\n                          length: selectedDegree === \"6\" ? 5 : 1,\n                        }).map((_, i) => (\n                          <Fragment key={i}>\n                            {tableDegreeData.map((td) => (\n                              <TableCell\n                                key={`${td.valueKey}${i + 1}`}\n                                style={{\n                                  color:\n                                    td.valueKey === \"excees\"\n                                      ? report[`exceed${i + 1}`]\n                                        ? \"blue\"\n                                        : \"red\"\n                                      : \"unset\",\n                                }}\n                              >\n                                {td.func(report[`${td.valueKey}${i + 1}`]) ??\n                                  \"-\"}\n                              </TableCell>\n                            ))}\n                          </Fragment>\n                        ))}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n            {reports?.excel && (\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-2\">\n                  <a href={API_URL + reports.excel} download>\n                    <button className=\"btn btn-primary\">\n                      <Trans>Export to MS Excel</Trans>\n                    </button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GapItemReport;\n",
    "import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"https://inventory.runflare.run/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n",
    "import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"
  ],
  "names": [
    "separator",
    "x",
    "undefined",
    "n",
    "sep",
    "reverse",
    "text",
    "split",
    "join",
    "rx",
    "toString",
    "replace",
    "thousandSeparator",
    "parseInt",
    "defaultValues",
    "name",
    "code",
    "level",
    "type",
    "power",
    "degree",
    "option",
    "year_from",
    "year_to",
    "calculate_for",
    "degrees",
    "id",
    "options",
    "tableData",
    "headTitle",
    "valueKey",
    "func",
    "val",
    "tableDegreeData",
    "parseFloat",
    "toFixed",
    "useState",
    "filterValues",
    "setFilterValues",
    "selectedDegree",
    "setSelectedDegree",
    "country",
    "JSON",
    "parse",
    "localStorage",
    "getItem",
    "useQuery",
    "ReportService",
    "help",
    "res",
    "data",
    "gapItemHelper",
    "isGapItemHelperLoading",
    "isLoading",
    "key",
    "params",
    "filter",
    "length",
    "refetchOnMount",
    "enabled",
    "onSuccess",
    "reports",
    "isReportsLoading",
    "fetchReports",
    "refetch",
    "className",
    "onSubmit",
    "e",
    "preventDefault",
    "onChange",
    "value",
    "target",
    "preValues",
    "as",
    "selected",
    "disabled",
    "map",
    "lev",
    "ty",
    "pow",
    "item_class",
    "i",
    "console",
    "log",
    "Date",
    "getUTCFullYear",
    "Array",
    "from",
    "_",
    "year",
    "onClick",
    "filterValue",
    "find",
    "d",
    "printFilterValues",
    "toISOString",
    "align",
    "colSpan",
    "style",
    "textAlign",
    "Fragment",
    "td",
    "report",
    "index",
    "color",
    "excel",
    "href",
    "API_URL",
    "download",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "payload",
    "children"
  ],
  "sourceRoot": ""
}
