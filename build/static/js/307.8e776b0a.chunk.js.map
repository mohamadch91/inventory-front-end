{"version":3,"file":"static/js/307.8e776b0a.chunk.js","mappings":"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","sources":["app/helpers/separator.js","app/reports/ProfileOfColdChain.js","app/services/report.service.js","app/shared/SharedTable.js"],"sourcesContent":["export const separator = (x) => {\n  if (x === undefined || x === null) {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n","import React, { useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport ReportService from \"../services/report.service\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\nimport { Form } from \"react-bootstrap\";\nimport \"./form.scss\";\nimport { separator } from \"../helpers/separator\";\n\nconst table1Data = [\n  {\n    headTitle: \"Level\",\n    valueKey: \"id\",\n  },\n  {\n    headTitle: \"Level name\",\n    valueKey: \"name\",\n  },\n  {\n    headTitle: \"General population\",\n    valueKey: \"general\",\n  },\n  {\n    headTitle: \"Number of under-one children served by this facility\",\n    valueKey: \"under1\",\n  },\n  {\n    headTitle: \"Cold RoomA\",\n    valueKey: \"cold_a\",\n  },\n  {\n    headTitle: \"Freezer Room\",\n    valueKey: \"fr\",\n  },\n  {\n    headTitle: \"Refrigerator\",\n    valueKey: \"refrig\",\n  },\n  {\n    headTitle: \"Freezer\",\n    valueKey: \"freezer\",\n  },\n  {\n    headTitle: \"Cold Box\",\n    valueKey: \"cb\",\n  },\n  {\n    headTitle: \"Vaccine Carrier\",\n    valueKey: \"vc\",\n  },\n  {\n    headTitle: \"Cold RoomA\",\n    valueKey: \"nw_cold_a\",\n  },\n  {\n    headTitle: \"Freezer Room\",\n    valueKey: \"nw_fr\",\n  },\n  {\n    headTitle: \"Refrigerator\",\n    valueKey: \"nw_refrig\",\n  },\n  {\n    headTitle: \"Freezer\",\n    valueKey: \"nw_freezer\",\n  },\n  {\n    headTitle: \"Cold Box\",\n    valueKey: \"nw_cb\",\n  },\n  {\n    headTitle: \"Vaccine Carrier\",\n    valueKey: \"nw_vc\",\n  },\n];\n\nconst table2Data = [\n  {\n    headTitle: \"Level\",\n    valueKey: \"id\",\n    func: (val) => val,\n    size: \"fit\",\n  },\n  {\n    headTitle: \"Level name\",\n    valueKey: \"name\",\n    func: (val) => val,\n    size: \"fit\",\n  },\n  {\n    headTitle: \"General population\",\n    valueKey: \"general\",\n    func: (val) => separator(val),\n    size: \"fit\",\n  },\n  {\n    headTitle: \"Number of under-one children served by this facility\",\n    valueKey: \"under1\",\n    func: (val) => separator(val),\n    size: \"large\",\n  },\n  {\n    headTitle: \"Require capacity per target population (cm3)\",\n    valueKey: \"req\",\n    func: (val) => (+val).toFixed(2),\n    size: \"large\",\n  },\n  {\n    headTitle: \"Available capacity per target population (cm3)\",\n    valueKey: \"available\",\n    func: (val) => (+val).toFixed(2),\n    size: \"large\",\n  },\n  {\n    headTitle:\n      \"The difference between available capacity and require capacity per target population (cm3)\",\n    valueKey: \"diff\",\n    func: (val) => (+val).toFixed(2),\n    size: \"large\",\n  },\n  {\n    headTitle: \"Require capacity\",\n    valueKey: \"require_capacity\",\n    func: (val) => (+separator(val)).toFixed(2),\n    size: \"fit\",\n  },\n  {\n    headTitle: \"Available capacity (lit.)\",\n    valueKey: \"available_capacity\",\n    func: (val) => (+separator(val)).toFixed(2),\n    size: \"fit\",\n  },\n  {\n    headTitle:\n      \"The difference between current available capacity and require capacity (lit.)\",\n    valueKey: \"diff_capacity\",\n    func: (val) => (+separator(val)).toFixed(2),\n    size: \"large\",\n  },\n];\n\nconst degrees = [\n  {\n    id: 1,\n    name: \"2-8 C\",\n  },\n  {\n    id: 2,\n    name: \"-20 C\",\n  },\n  {\n    id: 3,\n    name: \"-70 C\",\n  },\n  {\n    id: 4,\n    name: \"+25 C\",\n  },\n];\n\nfunction ProfileOfColdChain() {\n  const [selectedDegree, setSelectedDegree] = useState(1);\n\n  const { data: reports, isLoading: isReportsLoading } = useQuery(\n    [\"profile-of-cold-chain\", selectedDegree],\n    async () => {\n      const res = await ReportService.getColdProf(selectedDegree);\n      return res.data;\n    }\n  );\n\n  if (isReportsLoading) {\n    return <Spinner />;\n  }\n\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Profile of Cold Chain</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <h4>\n              <Trans>\n                Report Number: Profile of Cold Chain ({country?.country})\n              </Trans>\n            </h4>\n            <h6>Date: {new Date().toISOString().split(\"T\")[0]}</h6>\n            <div className=\"mt-3 table-container\">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={4}></TableCell>\n                    <TableCell align=\"center\" colSpan={6}>\n                      Exist Items\n                    </TableCell>\n                    <TableCell align=\"center\" colSpan={6}>\n                      Not Work Items\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    {table1Data.map((cell, i) => (\n                      <TableCell\n                        key={cell.headTitle}\n                        style={{ minWidth: i === 3 ? \"230px\" : \"\" }}\n                      >\n                        <Trans>{cell.headTitle}</Trans>\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.table_1.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        {table1Data.map((data) => (\n                          <TableCell key={data.valueKey}>\n                            {report[data.valueKey] ?? \"-\"}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-sm-12 col-lg-6\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-4 mt-3\">\n                    <Trans>Please select ...</Trans>\n                  </label>\n                  <Form.Control\n                    className=\"form-select col-sm-3\"\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      setSelectedDegree(value);\n                    }}\n                    value={selectedDegree}\n                    as=\"select\"\n                  >\n                    {degrees.map((i) => (\n                      <option key={i.id} value={i.id}>\n                        {i.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"mt-3 table-container\">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    {table2Data.map((cell) => (\n                      <TableCell\n                        key={cell.headTitle}\n                        style={{\n                          minWidth: cell.size === \"large\" ? \"230px\" : \"auto\",\n                        }}\n                      >\n                        <Trans>{cell.headTitle}</Trans>\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.table_2.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        {table2Data.map((data) => (\n                          <TableCell key={data.valueKey}>\n                            {data.func(report[data.valueKey]) ?? \"-\"}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileOfColdChain;\n","import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"http://5.182.47.38:8001/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n","import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["separator","x","undefined","n","sep","reverse","text","split","join","rx","toString","replace","thousandSeparator","parseInt","table1Data","headTitle","valueKey","table2Data","func","val","size","toFixed","degrees","id","name","useState","selectedDegree","setSelectedDegree","useQuery","ReportService","res","data","reports","isLoading","country","JSON","parse","localStorage","getItem","className","Date","toISOString","align","colSpan","map","cell","i","style","minWidth","table_1","report","index","onChange","e","value","target","as","table_2","API_URL","ApiManager","headers","Authorization","authHeader","params","degree","payload","children"],"sourceRoot":""}