{"version":3,"file":"static/js/8211.7df8ec1e.chunk.js","mappings":"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","sources":["app/facilities/FacilityToPrint.js","app/facilities/PrintFacility.js","app/services/facilities.service.js"],"sourcesContent":["import { forwardRef, useEffect, useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport toast from \"react-hot-toast\";\nimport { Trans } from \"react-i18next\";\nimport FacilitiesService from \"../services/facilities.service.js\";\nimport Spinner from \"../shared/Spinner\";\n\nconst ItemToPrint = forwardRef((props, ref) => {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  function getData() {\n    FacilitiesService.getFacilityFields()\n      .then((res) => {\n        setData(res.data.related);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div ref={ref}>\n          <div className=\"container\">\n            <h2 className=\"mb-4\">\n              <Trans>Facility information:</Trans>\n            </h2>\n            <div className=\"wrapper\">\n              <Row>\n                {data.map((item, index) => (\n                  <>\n                    <div style={{ width: \"50%\" }}>\n                      <h6>{item.name}</h6>\n                      <div\n                        style={{\n                          border: \"gray 1px solid\",\n                          padding: \"1rem\",\n                          \"border-radius\": \"5px\",\n                          marginButtom: \"5px\",\n                        }}\n                        className=\"box mb-3\"\n                      >\n                        {item.params.map((param) => (\n                          <div\n                            style={{ display: \"inline-block\" }}\n                            className=\"param\"\n                          >\n                            <span style={{ color: \"blue\" }}>{param.name}</span>\n                            <input\n                              style={{\n                                Background: \"white\",\n                                Border: \"1px solid #ababab70\",\n                                BorderRadius: \"5px\",\n                                Padding: \"0.5rem\",\n                                marginRight: \"5px\",\n                              }}\n                              className=\"m-1 mr-3\"\n                              type=\"checkbox\"\n                              checked={param.enabled}\n                              disabled\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </>\n                ))}\n              </Row>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n});\n\nexport default ItemToPrint;\n","import * as React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Trans } from \"react-i18next\";\nimport { useReactToPrint } from \"react-to-print\";\nimport ItemToPrint from \"./FacilityToPrint\";\nimport \"./print.scss\";\n\nconst PrintFacility = () => {\n  const componentRef = React.useRef(null);\n\n  const onBeforeGetContentResolve = React.useRef(null);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const handleOnBeforeGetContent = React.useCallback(() => {\n    setLoading(true);\n\n    return new Promise((resolve) => {\n      onBeforeGetContentResolve.current = resolve;\n\n      setTimeout(() => {\n        setLoading(false);\n        resolve();\n      }, 0);\n    });\n  }, [setLoading]);\n\n  const reactToPrintContent = React.useCallback(() => {\n    return componentRef.current;\n  }, [componentRef.current]);\n\n  const handlePrint = useReactToPrint({\n    content: reactToPrintContent,\n    documentTitle: \"AwesomeFileName\",\n    onBeforeGetContent: handleOnBeforeGetContent,\n    removeAfterPrint: true,\n  });\n\n  React.useEffect(() => {\n    if (typeof onBeforeGetContentResolve.current === \"function\") {\n      onBeforeGetContentResolve.current();\n    }\n  }, [onBeforeGetContentResolve.current]);\n\n  return (\n    <div className=\"print-page\">\n      <Row className=\"justify-content-center mb-4\">\n        <Col md={6} className=\"justify-content-center\">\n          <button className=\"w-100\" onClick={handlePrint}>\n            {loading ? <Trans>Loading...</Trans> : <Trans>Print</Trans>}\n          </button>\n        </Col>\n      </Row>\n      <ItemToPrint ref={componentRef} />\n    </div>\n  );\n};\n\nexport default PrintFacility;\n","import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://5.182.47.38:8001/facilities/\";\n\nclass FacilitiesService {\n  getFacilities(id) {\n    const params = {};\n    if (id) {\n      params.id = id;\n    }\n    return ApiManager.get(API_URL, {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacilities(id) {\n    const params = { id };\n    return ApiManager.get(API_URL + \"parent\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacilityFields() {\n    return ApiManager.get(API_URL + \"facility-field\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postFacility(payload) {\n    return ApiManager.post(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putFacility(payload) {\n    return ApiManager.put(API_URL, payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new FacilitiesService();\n"],"names":["forwardRef","props","ref","useState","data","setData","isLoading","setIsLoading","useEffect","FacilitiesService","then","res","related","catch","err","toast","Spinner","className","Trans","Row","map","item","index","style","width","name","border","padding","marginButtom","params","param","display","color","Background","Border","BorderRadius","Padding","marginRight","type","checked","enabled","disabled","componentRef","React","onBeforeGetContentResolve","loading","setLoading","handleOnBeforeGetContent","Promise","resolve","current","setTimeout","reactToPrintContent","handlePrint","useReactToPrint","content","documentTitle","onBeforeGetContent","removeAfterPrint","Col","md","onClick","API_URL","id","ApiManager","headers","Authorization","authHeader","payload"],"sourceRoot":""}