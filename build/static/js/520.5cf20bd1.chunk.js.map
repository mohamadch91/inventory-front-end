{"version":3,"file":"static/js/520.5cf20bd1.chunk.js","mappings":"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","sources":["app/settings/NewLevel.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport UserService from \"../services/user.service\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Level from \"./Level\";\nimport { alpha } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Paper from \"@mui/material/Paper\";\nimport { Form } from \"react-bootstrap\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport \"./newLevel.css\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { styled } from \"@mui/material/styles\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/DeleteOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CancelIcon from \"@mui/icons-material/Close\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\nfunction createData(\n  id,\n  name,\n  maxpop,\n  minpop,\n  uppervol,\n  undervol,\n  m25vol,\n  m70vol,\n  dryvol,\n  m25volnew,\n  m70volnew,\n  uppervolnew,\n  undervolnew,\n  dryvolnew,\n  country,\n  parent\n) {\n  return {\n    id,\n    name,\n    maxpop,\n    minpop,\n    uppervol,\n    undervol,\n    m25vol,\n    m70vol,\n    dryvol,\n    m25volnew,\n    m70volnew,\n    uppervolnew,\n    undervolnew,\n    dryvolnew,\n    country,\n    parent,\n  };\n}\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  height: 300,\n  width: \"100%\",\n  \"& .MuiDataGrid-cell--editing\": {\n    backgroundColor: \"rgb(255,215,115, 0.19)\",\n    color: \"#1a3e72\",\n    \"& .MuiInputBase-root\": {\n      height: \"100%\",\n    },\n  },\n  \"& .Mui-error\": {\n    backgroundColor: `rgb(126,10,15, ${\n      theme.palette.mode === \"dark\" ? 0 : 0.1\n    })`,\n    color: theme.palette.error.main,\n  },\n}));\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"55%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"40%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst headCells = [\n  {\n    id: \"number\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Levels\",\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"name\",\n  },\n  {\n    id: \"m25vol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+25 C\",\n  },\n  {\n    id: \"uppervol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+2 - +8 C\",\n  },\n  {\n    id: \"undervol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-20 C\",\n  },\n  {\n    id: \"m70vol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-70 C\",\n  },\n  {\n    id: \"dryvol\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dry store\",\n  },\n  {\n    id: \"m25volnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+25 C\",\n  },\n  {\n    id: \"uppervolnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"+2 - +8 C\",\n  },\n  {\n    id: \"undervolnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-20 C\",\n  },\n  {\n    id: \"m70volnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"-70 C\",\n  },\n  {\n    id: \"dryvolnew\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dry store\",\n  },\n  {\n    id: \"minpop\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Min pop\",\n  },\n  {\n    id: \"max pop\",\n    numeric: false,\n    disablePadding: true,\n    label: \"max pop\",\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell colSpan={7}></TableCell>\n        <TableCell colSpan={4}>\n          Target Population :\n          {JSON.parse(localStorage.getItem(\"country\")).poptarget}\n          {/* {console.log(JSON.parse(localStorage.getItem(\"country\")).poptarget)} */}\n        </TableCell>\n        <TableCell colSpan={6}></TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={3}></TableCell>\n        <TableCell\n          sx={{\n            backgroundColor: \"#82c4ed\",\n            textAlign: \"center\",\n            borderLeft: \"1px solid black\",\n          }}\n          colSpan={5}\n        >\n          Current values\n        </TableCell>\n        <TableCell\n          sx={{\n            backgroundColor: \"#2f7ebf\",\n            textAlign: \"center\",\n            borderLeft: \"1px solid black\",\n            borderRight: \"1px solid black\",\n          }}\n          colSpan={5}\n        >\n          Planned values\n        </TableCell>\n      </TableRow>\n      <TableRow>\n       \n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            sx={\n              headCell.id == \"m25vol\" || headCell.id == \"m25volnew\"\n                ? { borderLeft: \"1px solid black\" }\n                : headCell.id == \"dryvolnew\"\n                ? { borderRight: \"1px solid black\" }\n                : \"\"\n            }\n            align={headCell.numeric ? \"center\" : \"center\"}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n            {headCell.label}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\nconst EnhancedTableToolbar = (props) => {\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            ),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: \"1 1 100%\" }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{ flex: \"1 1 100%\" }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Level list\n        </Typography>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default function DataTable() {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const [rows, setRows] = React.useState([]);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [dense, setDense] = React.useState(false);\n  const [isEdit, setEdit] = React.useState(false);\n  const [disable, setDisable] = React.useState(true);\n  const [showConfirm, setShowConfirm] = React.useState(false);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n  const handleEdit = (i) => {\n    // If edit mode is true setEdit will\n    // set it to false and vice versa\n    setEdit(!isEdit);\n  };\n  const handleAdd = () => {\n    setRows([\n      ...rows,\n      {\n        id: rows.length + 1,\n        firstname: \"\",\n        lastname: \"\",\n        city: \"\",\n      },\n    ]);\n    setEdit(true);\n  };\n  const handleSave = () => {\n    setEdit(!isEdit);\n    setRows(rows);\n    console.log(\"saved : \", rows);\n    setDisable(true);\n    // const req = JSON.stringify({ rows: rows });\n    // console.log(req)\n     UserService.putLevels( rows )\n       .then((response) => {\n         const country = JSON.parse(localStorage.getItem(\"country\"));\n         let row = [];\n         for (let i = 0; i < country.levels; i++) {\n           row.push(\n             createData(\n               response.data[i].id,\n               response.data[i].name,\n               parseInt(response.data[i].maxpop),\n               parseInt(response.data[i].minpop),\n               response.data[i].uppervol,\n               response.data[i].undervol,\n               response.data[i].m25vol,\n               response.data[i].m70vol,\n               response.data[i].dryvol,\n               response.data[i].m25volnew,\n               response.data[i].m70volnew,\n               response.data[i].uppervolnew,\n               response.data[i].undervolnew,\n               response.data[i].dryvolnew,\n               response.data[i].country,\n               response.data[i].parent\n             )\n           );\n         }\n         setRows(row);\n       })\n       .catch((e) => {\n         // console.log(e);\n       });\n    setOpen(true);\n  };\n  const handleInputChange = (e, index) => {\n    setDisable(false);\n     let number = e.target.value;\n     const flag = number.split(\".\").length;\n     console.log(flag);\n     if (flag > 1) {\n       const num = number.split(\".\")[0];\n       const floatpoint = number.split(\".\")[1].slice(0, 2);\n       number = num + \".\" + floatpoint;\n       console.log(number);\n     }\n    const { name, value } = e.target;\n    const list = [...rows];\n    list[index][name] = number;\n    setRows(list);\n  };\n\n  // Showing delete confirmation to users\n  const handleConfirm = () => {\n    setShowConfirm(true);\n  };\n\n  // Handle the case of delete confirmation where\n  // user click yes delete a specific row of id:i\n  const handleRemoveClick = (i) => {\n    const list = [...rows];\n    list.splice(i, 1);\n    setRows(list);\n    setShowConfirm(false);\n  };\n\n  // Handle the case of delete confirmation\n  // where user click no\n  const handleNo = () => {\n    setShowConfirm(false);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n) => n.name);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const separator = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const levelValidator = (text) => {\n    if (text.length > 0) {\n      return true;\n    }\n  };\n  const minpopValidator = (text) => {\n    if (text.toString().length > 0) {\n      return true;\n    }\n  };\n  const maxpopValidator = (text) => {\n    if (text.toString().length > 0) {\n      return true;\n    }\n  };\n  const capacityValidator = (text) => {\n    // console.log(text)\n    const check=parseFloat(text)\n    console.log(check)\n    if (check < 0) {\n      return false;\n    }\n    if (check.toString().length > 0) {\n      return true;\n    }\n    return true\n  };\n  React.useEffect(() => {\n    // get\n    UserService.getLevels()\n      .then((response) => {\n        const country = JSON.parse(localStorage.getItem(\"country\"));\n        let row = [];\n        for (let i = 0; i < country.levels; i++) {\n          row.push(\n            createData(\n              response.data[i].id,\n              response.data[i].name,\n              parseInt(response.data[i].maxpop),\n              parseInt(response.data[i].minpop),\n              response.data[i].uppervol,\n              response.data[i].undervol,\n              response.data[i].m25vol,\n              response.data[i].m70vol,\n              response.data[i].dryvol,\n              response.data[i].m25volnew,\n              response.data[i].m70volnew,\n              response.data[i].uppervolnew,\n              response.data[i].undervolnew,\n              response.data[i].dryvolnew,\n              response.data[i].country,\n              response.data[i].parent\n            )\n          );\n        }\n      \n        setRows(row);\n      \n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  return (\n    \n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\"> Level Configurations </h3>\n      </div>\n      {rows.length !== 0 && (\n        <div>\n          {disable ? (\n            <Button disabled align=\"right\" onClick={handleSave}>\n              <DoneIcon />\n              SAVE\n            </Button>\n          ) : (\n            <Button align=\"right\" onClick={handleSave}>\n              <DoneIcon />\n              SAVE\n            </Button>\n          )}\n          <Button align=\"right\" onClick={handleEdit}>\n            <CreateIcon />\n            EDIT\n          </Button>\n        </div>\n      )}\n      <Box sx={{ width: \"100%\" }}>\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <TableContainer>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? \"small\" : \"medium\"}\n            >\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n\n              <TableBody>\n                {/* if you don't need to support IE11, you can replace the `stableSort` call with:\n                 rows.slice().sort(getComparator(order, orderBy)) */}\n                 {console.log(rows)}\n                {stableSort(rows, getComparator(order, orderBy)).map(\n                  (row, i) => {\n                    const isItemSelected = isSelected(row.name);\n                    const labelId = `enhanced-table-checkbox-${i}`;\n                    console.log(row)\n                    return (\n                      <>\n                        {isEdit ? (\n                          <TableRow\n                            hover\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.id}\n                            selected={isItemSelected}\n                          >\n                            <TableCell\n                              className=\"text-center\"\n                              scope=\"row\"\n                              padding=\"none\"\n                            >\n                              {row.id}\n                            </TableCell>\n                            <TableCell\n                              component=\"th\"\n                              id={labelId}\n                              scope=\"row\"\n                              padding=\"none\"\n                              className=\"text-center\"\n                            >\n                              <input\n                                required\n                                isValid={levelValidator(rows[i].name)}\n                                value={rows[i].name}\n                                name=\"name\"\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                type=\"text\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell\n                              sx={{ borderLeft: \"1px solid black\" }}\n                              padding=\"none\"\n                              align=\"center\"\n                            >\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].m25vol)}\n                                isInvalid={!capacityValidator(rows[i].m25vol)}\n                                value={rows[i].m25vol}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"m25vol\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                             \n                              <span></span>\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].uppervol)}\n                                value={rows[i].uppervol}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"uppervol\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].undervol)}\n                                value={rows[i].undervol}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"undervol\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].m70vol)}\n                                value={rows[i].m70vol}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"m70vol\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].dryvol)}\n                                value={rows[i].dryvol}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"dryvol\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                            </TableCell>\n                            <TableCell\n                              sx={{ borderLeft: \"1px solid black\" }}\n                              padding=\"none\"\n                              align=\"center\"\n                            >\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].m25volnew)}\n                                value={rows[i].m25volnew}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"m25volnew\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].uppervolnew)}\n                                value={rows[i].uppervolnew}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"uppervolnew\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].undervolnew)}\n                                value={rows[i].undervolnew}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"undervolnew\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].m70volnew)}\n                                value={rows[i].m70volnew}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"m70volnew\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell\n                              padding=\"none\"\n                              sx={{ borderRight: \"1px solid black\" }}\n                              align=\"center\"\n                            >\n                              <input\n                                required\n                                isValid={capacityValidator(rows[i].dryvolnew)}\n                                value={rows[i].dryvolnew}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"dryvolnew\"\n                                type=\"number\"\n                                placeholder=\"0\"\n                                min=\"0\"\n                              />\n                            </TableCell>\n\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={minpopValidator(rows[i].maxpop)}\n                                value={separator(rows[i].maxpop)}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"maxpop\"\n                                type=\"number\"\n                              />\n                              <span></span>\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              <input\n                                required\n                                isValid={maxpopValidator(rows[i].minpop)}\n                                value={separator(rows[i].minpop)}\n                                onChange={(e) => {\n                                  handleInputChange(e, i);\n                                }}\n                                name=\"minpop\"\n                                type=\"number\"\n                              />\n                            </TableCell>\n                          </TableRow>\n                        ) : (\n                          <TableRow\n                            hover\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.id}\n                            selected={isItemSelected}\n                          >\n                            <TableCell\n                              className=\"text-center\"\n                              scope=\"row\"\n                              padding=\"none\"\n                            >\n                              {row.id}\n                            </TableCell>\n                            <TableCell\n                              component=\"th\"\n                              id={labelId}\n                              scope=\"row\"\n                              className=\"text-center\"\n                              padding=\"none\"\n                            >\n                              {row.name}\n                            </TableCell>\n                            <TableCell\n                              sx={{ borderLeft: \"1px solid black\" }}\n                              padding=\"none\"\n                              align=\"center\"\n                            >\n                              {row.m25vol}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {row.uppervol}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {row.undervol}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {row.m70vol}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {row.dryvol}\n                            </TableCell>\n                            <TableCell\n                              sx={{ borderLeft: \"1px solid black\" }}\n                              padding=\"none\"\n                              align=\"center\"\n                            >\n                              {row.m25volnew}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {row.uppervolnew}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {row.undervolnew}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {row.m70volnew}\n                            </TableCell>\n                            <TableCell\n                              padding=\"none\"\n                              sx={{ borderRight: \"1px solid black\" }}\n                              align=\"center\"\n                            >\n                              {row.dryvolnew}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {separator(row.minpop)}\n                            </TableCell>\n                            <TableCell padding=\"none\" align=\"center\">\n                              {separator(row.maxpop)}\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </>\n                    );\n                  }\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {/* pagination */}\n        </Paper>\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\n          label=\"Dense padding\"\n        />\n      </Box>\n    </div>\n  );\n}\n"],"names":["createData","id","name","maxpop","minpop","uppervol","undervol","m25vol","m70vol","dryvol","m25volnew","m70volnew","uppervolnew","undervolnew","dryvolnew","country","parent","styled","Box","theme","height","width","backgroundColor","color","palette","mode","error","main","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","TableCell","colSpan","JSON","parse","localStorage","getItem","poptarget","sx","textAlign","borderLeft","borderRight","headCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","component","visuallyHidden","EnhancedTableToolbar","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","action","activatedOpacity","Typography","flex","variant","DataTable","React","setOpen","rows","setRows","setOrder","setOrderBy","selected","setSelected","dense","setDense","isEdit","setEdit","disable","setDisable","handleSave","console","log","UserService","then","response","row","i","levels","push","data","parseInt","catch","e","handleInputChange","number","target","value","flag","split","length","num","floatpoint","slice","list","separator","x","toString","replace","levelValidator","text","minpopValidator","maxpopValidator","capacityValidator","check","parseFloat","className","Button","disabled","Done","Create","Paper","mb","TableContainer","Table","minWidth","size","checked","newSelected","n","TableBody","isItemSelected","indexOf","labelId","hover","role","tabIndex","scope","required","isValid","onChange","type","isInvalid","placeholder","min","FormControlLabel","control","Switch"],"sourceRoot":""}