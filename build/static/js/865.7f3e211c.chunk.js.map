{"version":3,"file":"static/js/865.7f3e211c.chunk.js","mappings":"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","sources":["app/services/items.service.js","app/settings/ItemType.js","app/shared/CloseIcon.js","app/shared/EditIcon.js","app/shared/SharedTable.js"],"sourcesContent":["import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://5.182.47.38:8001/items/\";\n\nclass ItemService {\n  getItemClasses() {\n    return axios.get(API_URL + \"itemClass\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getActiveItemClasses() {\n    return axios.get(API_URL + \"class-helper\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemClass(data) {\n    // change item class\n    return axios.put(API_URL + \"itemClass\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemTypes() {\n    return axios.get(API_URL + \"itemType\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postItemType(data) {\n    // add item category\n    return axios.post(API_URL + \"itemType\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putItemTypes(data) {\n    // change item category\n    return axios.put(API_URL + \"itemType\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getItemClassesOfAnItemType(itemTypeId) {\n    return axios.get(API_URL + \"itembyclass?id=\" + itemTypeId, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getActiveItemClassesWithFields(itemClassId) {\n    const params = {};\n    if (itemClassId) {\n      params[\"id\"] = itemClassId;\n    }\n    return axios.get(API_URL + \"itembyclass\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemTinLevels(level) {\n    const params = {};\n    if (level) {\n      params[\"level\"] = level;\n    }\n    return axios.get(API_URL + \"itemTinLevels\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  putItemTypeInClass(payload) {\n    return axios.put(API_URL + \"itemTinLevels\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getManufacturers(id) {\n    return axios.get(API_URL + \"manufacturer?id=\" + id, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  postManufacturer(data) {\n    return axios.post(API_URL + \"manufacturer\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  putManufacturer(data) {\n    return axios.put(API_URL + \"manufacturer\", data, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ItemService();\n","import { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport ItemsService from \"../services/items.service\";\nimport CloseIcon from \"../shared/CloseIcon\";\nimport EditIcon from \"../shared/EditIcon\";\nimport SharedTable from \"../shared/SharedTable\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../shared/Spinner\";\nimport \"./itemClass.scss\";\nimport \"./itemType.scss\";\nimport \"../styles/inputs.scss\";\n\nfunction ItemType() {\n  const [itemTypes, setItemTypes] = useState([]);\n  const [itemClasses, setItemClasses] = useState([]);\n  const [editFormData, setEditFormData] = useState({});\n  const [addRowFormData, setAddRowFormData] = useState({});\n  const [editableRowId, setEditableRowId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  function getItemClasses() {\n    ItemsService.getItemClasses()\n      .then((res) => {\n        const data = res.data.filter((item) => item.active === true);\n        setItemClasses(data);\n        getItemTypes();\n      })\n      .catch((err) => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  function getItemTypes() {\n    ItemsService.getItemTypes()\n      .then((res) => {\n        setItemTypes(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        toast.error(\"There is a problem loading data\");\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getItemClasses();\n  }, []);\n\n  useEffect(() => {\n    setAddRowFormData({\n      ...addRowFormData,\n      itemClass: itemClasses[0],\n      active: false,\n      havePQS: false,\n    });\n  }, [itemClasses]);\n\n  function handleEdit(i) {\n    const formData = itemTypes.find((item) => item.id === i.id);\n    setEditFormData(formData);\n    setEditableRowId(i.id);\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setEditFormData({ ...editFormData, [name]: value });\n  }\n\n  function handleChangeAdd(e) {\n    const { name, value } = e.target;\n    setAddRowFormData({ ...addRowFormData, [name]: value });\n  }\n\n  function handleSubmitEdit() {\n    const isValid = Object.keys(editFormData).every((key) => {\n      return editFormData[key] !== \"\";\n    });\n    if (!isValid) {\n      toast.error(\"Please fill all the fields\");\n    } else {\n      setIsLoading(true);\n      const formToPut = (({ id, title, code, active, havePQS, itemclass }) => ({\n        id,\n        title,\n        code,\n        active,\n        havePQS,\n        itemclass,\n      }))(editFormData);\n      ItemsService.putItemTypes(formToPut)\n        .then((res) => {\n          getItemTypes();\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending data\");\n          setIsLoading(false);\n        });\n      setEditableRowId(null);\n      setEditFormData({});\n    }\n  }\n\n  function handleSubmitNew() {\n    const isValid = Object.keys(addRowFormData).every((key) => {\n      return addRowFormData[key] !== \"\";\n    });\n    if (!isValid) {\n      toast.error(\"Please fill all the fields\");\n    } else {\n      setIsLoading(true);\n      let formToPut = (({ title, code, active, havePQS }) => ({\n        title,\n        code,\n        active,\n        havePQS,\n      }))(addRowFormData);\n      if (addRowFormData?.itemClass?.id) {\n        formToPut.itemclass = parseInt(addRowFormData.itemClass.id);\n      } else {\n        formToPut.itemclass = parseInt(addRowFormData.itemClass);\n      }\n      ItemsService.postItemType(formToPut)\n        .then((res) => {\n          getItemTypes();\n        })\n        .catch((err) => {\n          toast.error(\"There is a problem sending data\");\n          setIsLoading(false);\n        });\n      setAddRowFormData({\n        ...addRowFormData,\n        itemClass: itemClasses[0],\n        active: false,\n        havePQS: false,\n        title: \"\",\n      });\n    }\n  }\n\n  function findItemClassById(id) {\n    return itemClasses.find((item) => item.id === id);\n  }\n\n  return (\n    <div className=\"item-class-page\">\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <h3 className=\"page-title mb-3\">item category list</h3>\n          <div>\n            <SharedTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Title</TableCell>\n                  <TableCell>Item class</TableCell>\n                  <TableCell>Code</TableCell>\n                  <TableCell>Active</TableCell>\n                  <TableCell>Have PQS?</TableCell>\n                  <TableCell>Edit</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {itemTypes.map((itemType, index) => (\n                  <>\n                    {editableRowId !== itemType.id ? (\n                      <TableRow>\n                        <TableCell>{index + 1}</TableCell>\n                        <TableCell>{itemType.title}</TableCell>\n                        <TableCell>\n                          {findItemClassById(itemType.itemclass)?.title}\n                        </TableCell>\n                        <TableCell>{itemType.code}</TableCell>\n                        <TableCell>\n                          <input\n                            type=\"checkbox\"\n                            checked={itemType.active}\n                            disabled\n                          ></input>\n                        </TableCell>\n                        <TableCell>\n                          <input\n                            type=\"checkbox\"\n                            checked={itemType.havePQS}\n                            disabled\n                          ></input>\n                        </TableCell>\n                        <TableCell>\n                          <button\n                            className=\"edit-btn\"\n                            onClick={(event) => handleEdit(itemType)}\n                          >\n                            <EditIcon />\n                          </button>\n                        </TableCell>\n                      </TableRow>\n                    ) : (\n                      <TableRow>\n                        <TableCell>{index + 1}</TableCell>\n                        <TableCell>\n                          <input\n                            name=\"title\"\n                            type=\"text\"\n                            onChange={handleChange}\n                            value={editFormData?.title}\n                            required\n                          ></input>\n                        </TableCell>\n                        <TableCell>\n                          <select\n                            name=\"itemclass\"\n                            onChange={handleChange}\n                            value={editFormData?.itemClass}\n                          >\n                            {itemClasses.map((itemClass, index) => (\n                              <option\n                                key={itemClass.id}\n                                value={itemClass.id}\n                                selected={itemType.itemclass === itemClass.id}\n                              >\n                                {itemClass.title}\n                              </option>\n                            ))}\n                          </select>\n                        </TableCell>\n                        <TableCell>{editFormData?.code}</TableCell>\n                        <TableCell>\n                          <input\n                            name=\"active\"\n                            type=\"checkbox\"\n                            onChange={() =>\n                              setEditFormData({\n                                ...editFormData,\n                                active: !editFormData.active,\n                              })\n                            }\n                            checked={editFormData?.active}\n                          ></input>\n                        </TableCell>\n                        <TableCell>\n                          <input\n                            name=\"havePQS\"\n                            type=\"checkbox\"\n                            onChange={() =>\n                              setEditFormData({\n                                ...editFormData,\n                                havePQS: !editFormData.havePQS,\n                              })\n                            }\n                            checked={editFormData?.havePQS}\n                          ></input>\n                        </TableCell>\n                        <TableCell>\n                          <button\n                            className=\"save-btn\"\n                            onClick={handleSubmitEdit}\n                          >\n                            Save\n                          </button>\n                          <button\n                            className=\"close-btn\"\n                            onClick={() => setEditableRowId(null)}\n                          >\n                            <CloseIcon />\n                          </button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </>\n                ))}\n              </TableBody>\n            </SharedTable>\n          </div>\n          <div className=\"add-row mt-4\">\n            <h3>Submit new</h3>\n            <div className=\"row\">\n              <div className=\"col-md-4 flex-column d-flex\">\n                <label>item category</label>\n                <input\n                  name=\"title\"\n                  type=\"text\"\n                  onChange={handleChangeAdd}\n                  value={addRowFormData?.title}\n                  required\n                ></input>\n              </div>\n              <div className=\"col-md-4 flex-column d-flex\">\n                <label>Item class</label>\n                <select\n                  name=\"itemClass\"\n                  onChange={handleChangeAdd}\n                  value={addRowFormData?.itemClass}\n                >\n                  {itemClasses.map((item, index) => (\n                    <option\n                      key={item.id}\n                      value={item.id}\n                      selected={index === 0}\n                    >\n                      {item.title}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"col-md-4 d-flex justify-content-center align-items-center\">\n                <label>Active</label>\n                <input\n                  name=\"active\"\n                  className=\"mr-4\"\n                  type=\"checkbox\"\n                  onChange={() =>\n                    setAddRowFormData({\n                      ...addRowFormData,\n                      active: !addRowFormData.active,\n                    })\n                  }\n                  checked={addRowFormData?.active}\n                ></input>\n                <label>Have PQS?</label>\n                <input\n                  name=\"havePQS\"\n                  className=\"mr-4\"\n                  type=\"checkbox\"\n                  onChange={() =>\n                    setAddRowFormData({\n                      ...addRowFormData,\n                      havePQS: !addRowFormData.havePQS,\n                    })\n                  }\n                  checked={addRowFormData?.havePQS}\n                ></input>\n                <button className=\"save-btn\" onClick={handleSubmitNew}>\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ItemType;\n","function CloseIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"121.31px\"\n        height=\"122.876px\"\n        viewBox=\"0 0 121.31 122.876\"\n        enableBackground=\"new 0 0 121.31 122.876\"\n        xmlSpace=\"preserve\"\n      >\n        <g>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default CloseIcon;\n","function EditIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        enable-background=\"new 0 0 512 512\"\n      >\n        <g>\n          <g>\n            <path d=\"m455.1,137.9l-32.4,32.4-81-81.1 32.4-32.4c6.6-6.6 18.1-6.6 24.7,0l56.3,56.4c6.8,6.8 6.8,17.9 0,24.7zm-270.7,271l-81-81.1 209.4-209.7 81,81.1-209.4,209.7zm-99.7-42l60.6,60.7-84.4,23.8 23.8-84.5zm399.3-282.6l-56.3-56.4c-11-11-50.7-31.8-82.4,0l-285.3,285.5c-2.5,2.5-4.3,5.5-5.2,8.9l-43,153.1c-2,7.1 0.1,14.7 5.2,20 5.2,5.3 15.6,6.2 20,5.2l153-43.1c3.4-0.9 6.4-2.7 8.9-5.2l285.1-285.5c22.7-22.7 22.7-59.7 0-82.5z\" />\n          </g>\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default EditIcon;\n","import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"],"names":["API_URL","ItemService","axios","headers","Authorization","authHeader","data","itemTypeId","itemClassId","params","level","payload","id","useState","itemTypes","setItemTypes","itemClasses","setItemClasses","editFormData","setEditFormData","addRowFormData","setAddRowFormData","editableRowId","setEditableRowId","isLoading","setIsLoading","getItemTypes","ItemsService","then","res","catch","err","toast","handleChange","e","target","name","value","handleChangeAdd","handleSubmitEdit","Object","keys","every","key","formToPut","title","code","active","havePQS","itemclass","useEffect","filter","item","itemClass","className","map","itemType","index","find","type","checked","disabled","onClick","event","i","formData","handleEdit","onChange","required","selected","parseInt","version","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","fillRule","clipRule","d","children"],"sourceRoot":""}