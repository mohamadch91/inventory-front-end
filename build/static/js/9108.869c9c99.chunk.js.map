{"version":3,"file":"static/js/9108.869c9c99.chunk.js","mappings":"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","sources":["app/dashboard/warnings/tables/logbook/LogBookDetailsPage.js","app/shared/UI/EmptyDataBaseMessage.js","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport DashboardService from \"../../../../services/dashboard.service\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Trans } from \"react-i18next\";\nimport EmptyDataBaseMessage from \"../../../../shared/UI/EmptyDataBaseMessage\";\n\nconst LogBookDetailsPage = () => {\n  const param = useParams();\n\n  const { data: detailsData, isLoading } = useQuery(\n    [\"log-details\"],\n    async () => {\n      const res = await DashboardService.getLogDetails(\"?item=\" + param.id);\n\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n  if (!isLoading && detailsData.length === 0) {\n    return <EmptyDataBaseMessage />;\n  }\n\n  const data = detailsData.maintanances;\n\n  return (\n    <div className=\"d-flex mb-3\">\n      <div className=\"col-lg-12 stretch-card\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">\n              <Trans>\n                Details of <i>{`${detailsData.type}`}</i> maintenance performed\n                by {`${detailsData.gp}`}: #{`${detailsData.code}`}\n              </Trans>\n            </h4>\n            <div className=\"table-responsive\">\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>\n                      {\" \"}\n                      <Trans>#</Trans>{\" \"}\n                    </th>\n                    <th>\n                      {\" \"}\n                      <Trans>Name</Trans>{\" \"}\n                    </th>\n                    <th>\n                      {\" \"}\n                      <Trans>Code</Trans>{\" \"}\n                    </th>\n                    <th>\n                      {\" \"}\n                      <Trans>interval</Trans>{\" \"}\n                    </th>\n                    <th>\n                      {\" \"}\n                      <Trans>interval in location</Trans>{\" \"}\n                    </th>\n                    <th>\n                      {\" \"}\n                      <Trans>Deadline</Trans>{\" \"}\n                    </th>\n                    <th>\n                      {\" \"}\n                      <Trans> Deadline in location</Trans>{\" \"}\n                    </th>\n                    <th>\n                      {\" \"}\n                      <Trans>Status</Trans>{\" \"}\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map((el, i) => {\n                    return (\n                      <tr key={el.id} className=\"table-info\">\n                        <td key={el.id + i}> {i + 1} </td>\n                        <td key={i + el.name}> {el.name} </td>\n                        <td key={i + el.code}> {el.code} </td>\n                        <td key={i + el.interval}> {el.interval} </td>\n\n                        <td key={i + el.loc_interval}> {el.loc_interval} </td>\n                        <td key={i + el.deadline}> {el.deadline} </td>\n                        <td key={i + el.deadline_in_loc}>\n                          {el.deadline_in_loc}\n                        </td>\n                        <td key={i + \"A\"}>\n                          <label\n                            className={`badge badge-${\n                              el.done ? \"success\" : \"warning\"\n                            }  `}\n                            style={{ fontSize: \"12px\" }}\n                          >\n                            {el.done ? \"Done\" : \"Pending\"}\n                          </label>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LogBookDetailsPage;\n","import React from \"react\";\nimport { Trans } from \"react-i18next\";\n\nconst EmptyDataBaseMessage = (props) => {\n  return (\n    <div className=\"alert alert-danger w-50 text-center m-auto\" role=\"alert\">\n      <p className=\"display-4\">\n        <Trans>We've been looking everywhere, nothing was found ... ðŸ˜Ÿ</Trans>\n      </p>\n      {props.message && <p>{props.message}</p>}\n    </div>\n  );\n};\n\nexport default EmptyDataBaseMessage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["param","useParams","useQuery","DashboardService","id","res","data","refetchOnMount","detailsData","isLoading","length","maintanances","className","type","gp","code","map","el","i","name","interval","loc_interval","deadline","deadline_in_loc","done","style","fontSize","props","role","message","_excluded","Spinner","React","_ref","ref","bsPrefix","variant","animation","size","children","_ref$as","as","Component","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","_extends","classNames","displayName"],"sourceRoot":""}