{
  "version": 3,
  "file": "static/js/3121.f0318633.chunk.js",
  "mappings": "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",
  "sources": [
    "app/services/report.service.js",
    "app/settings/PlanningCCEGap.js",
    "app/shared/SharedTable.js"
  ],
  "sourcesContent": [
    "import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"http://46.105.58.235:8000/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  savegaps(payload, saved) {\n    return ApiManager.post(API_URL + \"gapsave?condition=\" + payload, saved, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n",
    "import React, { useState } from \"react\";\nimport { Translation,Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport { Form } from \"react-bootstrap\";\nimport ReportService from \"../services/report.service\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedTable from \"../shared/SharedTable\";\nimport { TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport \"../styles/table.scss\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\n\nconst defaultValues = {\n  name: \"\",\n  level: \"-1\",\n  type: \"-1\",\n  power: \"-1\",\n  code: \"\",\n  degree: \"-1\",\n  general_from: \"\",\n  general_to: \"\",\n  under_1_from: \"\",\n  under_1_to: \"\",\n  req_cap_from: \"\",\n  req_cap_to: \"\",\n  available_from: \"\",\n  available_to: \"\",\n  func_cap_from: \"\",\n  func_cap_to: \"\",\n  excees_from: \"\",\n  excees_to: \"\",\n};\n\nconst degrees = [\n  { id: \"1\", name: \"2-8 C\" },\n  { id: \"2\", name: \"-20 C\" },\n  { id: \"3\", name: \"-70 C\" },\n  { id: \"4\", name: \"+25 C\" },\n  { id: \"5\", name: \"Dry store\" },\n];\n\nfunction PlanningCCEGap() {\n  const [filterValues, setFilterValues] = useState(defaultValues);\n\n  const { data: gapCCEHelper, isLoading: isGapCCEHelperLoading } = useQuery(\n    [\"planning-cce-gap-helper\"],\n    async () => {\n      const res = await ReportService.getPlanningCCEGap({ help: true });\n      return res.data;\n    }\n  );\n\n  const {\n    data: reports,\n    isLoading: isReportsLoading,\n    refetch: fetchReports,\n  } = useQuery(\n    [\"gap-cce-report\"],\n    async () => {\n      const params = {\n        help: false,\n      };\n      for (const key in filterValues) {\n        const filter = filterValues[key];\n        if (filter.length > 0 && filter !== \"-1\") {\n          params[key] = filter;\n        }\n      }\n      const res = await ReportService.getPlanningCCEGap(params);\n        if (res.data.length === 0) {\n                   toast.error(<Trans>No data found</Trans>);\n\n        }\n      return res.data;\n    },\n    {\n      refetchOnMount: false,\n      enabled: false,\n    }\n  );\n\n  if (isGapCCEHelperLoading || isReportsLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Planning CCE Gap</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                fetchReports();\n              }}\n            >\n              <h4>\n                <Trans>Filters</Trans>\n              </h4>\n              <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Facility Name</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          name: value,\n                        }));\n                      }}\n                      value={filterValues.name}\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Code</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-control col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          code: value,\n                        }));\n                      }}\n                      value={filterValues.code}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Levels</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          level: value,\n                        }));\n                      }}\n                      value={filterValues.level}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n\n                      {gapCCEHelper?.level.map((lev) => (\n                        <option key={lev.id} value={lev.id}>\n                          {`${lev.id} - ${lev.name}`}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Type</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          type: value,\n                        }));\n                      }}\n                      value={filterValues.type}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {gapCCEHelper?.type.map((ty) => (\n                        <option key={ty.id} value={ty.id}>\n                          {ty.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Power source</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          power: value,\n                        }));\n                      }}\n                      value={filterValues.power}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {gapCCEHelper?.power.map((pow) => (\n                        <option key={pow.id} value={pow.id}>\n                          {pow.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Storage Condition For Planning</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          degree: value,\n                        }));\n                      }}\n                      value={filterValues.degree}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option i18n value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {degrees.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <Form.Group className=\"row mt-1\">\n                <label className=\"label col-sm-2 mt-3\">\n                  <Trans>General populations</Trans>\n                </label>\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>from</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      general_from: value,\n                    }));\n                  }}\n                  value={filterValues.general_from}\n                />\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>to</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      general_to: value,\n                    }));\n                  }}\n                  value={filterValues.general_to}\n                />\n              </Form.Group>\n              <Form.Group className=\"row mt-1\">\n                <label className=\"label col-sm-2 mt-3\">\n                  <Trans>Under-1 populations</Trans>\n                </label>\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>from</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      under_1_from: value,\n                    }));\n                  }}\n                  value={filterValues.under_1_from}\n                />\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>to</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      under_1_to: value,\n                    }));\n                  }}\n                  value={filterValues.under_1_to}\n                />\n              </Form.Group>\n              <Form.Group className=\"row mt-1\">\n                <label className=\"label col-sm-2 mt-3\">\n                  <Trans>Require Capacity</Trans>\n                </label>\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>from</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      req_cap_from: value,\n                    }));\n                  }}\n                  value={filterValues.req_cap_from}\n                />\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>to</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      req_cap_to: value,\n                    }));\n                  }}\n                  value={filterValues.req_cap_to}\n                />\n              </Form.Group>\n              <Form.Group className=\"row mt-1\">\n                <label className=\"label col-sm-2 mt-3\">\n                  <Trans>Available capacity</Trans> (lit.)\n                </label>\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>from</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      available_from: value,\n                    }));\n                  }}\n                  value={filterValues.available_from}\n                />\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>to</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      available_to: value,\n                    }));\n                  }}\n                  value={filterValues.available_to}\n                />\n              </Form.Group>\n              <Form.Group className=\"row mt-1\">\n                <label className=\"label col-sm-2 mt-3 mt-3\">\n                  <Trans>Functional Capacity</Trans>\n                </label>\n                <label className=\"label-center col-sm-2 mt-3 mt-3\">\n                  <Trans>from</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      func_cap_from: value,\n                    }));\n                  }}\n                  value={filterValues.func_cap_from}\n                />\n                <label className=\"label-center col-sm-2 mt-3 mt-3\">\n                  <Trans>to</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      func_cap_to: value,\n                    }));\n                  }}\n                  value={filterValues.func_cap_to}\n                />\n              </Form.Group>\n              <Form.Group className=\"row mt-1\">\n                <label className=\"label col-sm-2 mt-3\">\n                  <Trans>Shortage/Exces Capacity</Trans>\n                </label>\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>from</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      excees_from: value,\n                    }));\n                  }}\n                  value={filterValues.excees_from}\n                />\n                <label className=\"label-center col-sm-2 mt-3\">\n                  <Trans>to</Trans>:\n                </label>\n                <Form.Control\n                  className=\"form-control col-sm-3 \"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setFilterValues((preValues) => ({\n                      ...preValues,\n                      excees_to: value,\n                    }));\n                  }}\n                  value={filterValues.excees_to}\n                />\n              </Form.Group>\n\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-2\">\n                  <button type=\"submit\" className=\"btn btn-primary fs-5 \">\n                    <Trans>Reports</Trans>\n                  </button>\n                </div>\n                <div className=\"col-sm-2\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary fs-5\"\n                    onClick={() => {\n                      setFilterValues(defaultValues);\n                      window.location.reload();\n                    }}\n                  >\n                    <Trans>Clear Filter</Trans>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <h4>\n              <Trans>Reports</Trans>\n            </h4>\n            <div className=\"mt-3 table-container\">\n              <SharedTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Trans>Planned</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Facility Name</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Parent facility</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Level</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Code</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Type</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Power source</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Storage conditions</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Require Capacity</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Available capacity</Trans> (lit.)\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Functional Capacity</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Shortage/Exces Capacity</Trans>\n                    </TableCell>\n                    <TableCell>\n                      <Trans>Plan it</Trans>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reports?.map((report, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <input\n                            type=\"checkbox\"\n                            disabled\n                            defaultChecked={report.planned}\n                          />\n                        </TableCell>\n                        <TableCell>{report.facility ?? \"-\"}</TableCell>\n                        <TableCell>{report.parent ?? \"-\"}</TableCell>\n                        <TableCell>{report.level ?? \"-\"}</TableCell>\n                        <TableCell>{report.code ?? \"-\"}</TableCell>\n                        <TableCell>{report.type ?? \"-\"}</TableCell>\n                        <TableCell>{report.power ?? \"-\"}</TableCell>\n                        <TableCell>{report.condition ?? \"-\"}</TableCell>\n                        <TableCell>\n                          {report.req_capacity.toFixed(2) ?? \"-\"}\n                        </TableCell>\n                        <TableCell>\n                          {report.available.toFixed(2) ?? \"-\"}\n                        </TableCell>\n                        <TableCell>\n                          {report.func_cap.toFixed(2) ?? \"-\"}\n                        </TableCell>\n                        <TableCell>{report.exces ?? \"-\"}</TableCell>\n                        <TableCell>\n                          <Link to={`/settings/fac-gap-info/${report.id}`}>\n                            Plan it\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </SharedTable>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlanningCCEGap;\n",
    "import { Table, TableContainer } from \"@mui/material\";\n\nfunction SharedTable({ children }) {\n  return (\n    <>\n      <TableContainer>\n        <Table>{children}</Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default SharedTable;\n"
  ],
  "names": [
    "API_URL",
    "ReportService",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "params",
    "degree",
    "payload",
    "data",
    "saved",
    "defaultValues",
    "name",
    "level",
    "type",
    "power",
    "code",
    "general_from",
    "general_to",
    "under_1_from",
    "under_1_to",
    "req_cap_from",
    "req_cap_to",
    "available_from",
    "available_to",
    "func_cap_from",
    "func_cap_to",
    "excees_from",
    "excees_to",
    "degrees",
    "id",
    "useState",
    "filterValues",
    "setFilterValues",
    "useQuery",
    "help",
    "res",
    "gapCCEHelper",
    "isGapCCEHelperLoading",
    "isLoading",
    "key",
    "filter",
    "length",
    "toast",
    "refetchOnMount",
    "enabled",
    "reports",
    "isReportsLoading",
    "fetchReports",
    "refetch",
    "className",
    "onSubmit",
    "e",
    "preventDefault",
    "onChange",
    "value",
    "target",
    "preValues",
    "as",
    "t",
    "i18n",
    "selected",
    "disabled",
    "map",
    "lev",
    "ty",
    "pow",
    "i",
    "onClick",
    "window",
    "location",
    "reload",
    "report",
    "index",
    "defaultChecked",
    "planned",
    "facility",
    "parent",
    "condition",
    "req_capacity",
    "toFixed",
    "available",
    "func_cap",
    "exces",
    "to",
    "children"
  ],
  "sourceRoot": ""
}
