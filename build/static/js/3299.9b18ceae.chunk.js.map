{"version":3,"file":"static/js/3299.9b18ceae.chunk.js","mappings":"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","sources":["app/dashboard/chart-card/chart/ChangeProgressProvider.js","webpack://inventory/./src/app/dashboard/chart-card/chart/ChartDropDown.module.css?dc49","app/dashboard/chart-card/chart/ChartDropDown.js","webpack://inventory/./src/app/dashboard/chart-card/Facilities.module.css?220d","webpack://inventory/./src/app/shared/UI/Card.module.css?f4b8","app/shared/UI/Card.js","app/shared/custom-hooks/use-http.js","app/dashboard/dashboard-api.js","app/dashboard/chart-card/Facilities.js","webpack://inventory/./src/app/dashboard/chart-card/ItemCard.module.css?0e3d","app/dashboard/chart-card/ItemsCard.js","app/dashboard/warnings/WarningItem.js","webpack://inventory/./src/app/dashboard/warnings/Warnings.module.css?e2cb","app/dashboard/warnings/Warnings.js","webpack://inventory/./src/app/dashboard/Dashbord.module.css?b05d","webpack://inventory/./src/app/dashboard/tables/DashboardTables.module.css?e3d7","app/dashboard/tables/sub-facilities/SubFacilitiesTableRow.js","app/dashboard/tables/sub-facilities/SubFacilitiesTable.js","app/dashboard/tables/level/LevelsTableRow.js","app/dashboard/tables/level/LevelsTable.js","app/dashboard/tables/DashboardTables.js","app/dashboard/Dashboard.js","app/services/dashboard.service.js"],"sourcesContent":["// Copied from: https://codesandbox.io/s/vymm4oln6y?file=/ChangingProgressProvider.js:0-500\nimport React from \"react\";\n\nclass ChangingProgressProvider extends React.Component {\n    static defaultProps = {\n        interval: 1000\n    };\n\n    state = {\n        valuesIndex: 0\n    };\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({\n                valuesIndex: (this.state.valuesIndex + 1) % this.props.values.length\n            });\n        }, this.props.interval);\n    }\n\n    render() {\n\n        return this.props.children(this.props.values[this.state.valuesIndex]);\n    }\n}\n\nexport default ChangingProgressProvider;\n","// extracted by mini-css-extract-plugin\nexport default {\"drop\":\"ChartDropDown_drop__3zt0I\"};","import classes from \"./ChartDropDown.module.css\";\n\nconst ChartDropDown = (props) => {\n  return (\n    <div className={classes.drop}>\n      <select onChange={props.onChange}>\n        <option value=\"\">Select Item Class</option>\n\n        {props.options.map((el, i) => (\n          <option key={i} value={el.id}>\n            {el.op}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default ChartDropDown;\n","// extracted by mini-css-extract-plugin\nexport default {\"facilities\":\"Facilities_facilities__joa8-\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__Bhi4l\"};","import React from 'react';\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n    return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import DashboardService from \"../services/dashboard.service\";\n\nexport async function getItemsAndTypes() {\n  try {\n    const res = await DashboardService.getAllDashboardItems();\n    return res.data;\n  } catch (error) {\n    throw new Error(\"Error fetching data from back-end \" + error.message);\n  }\n}\n\nexport async function getFacilities() {\n  try {\n    const res = await DashboardService.getAllFacilities();\n    return res.data;\n  } catch (error) {\n    throw new Error(\"Error fetching data from back-end \" + error.message);\n  }\n}\n\nexport async function getTablesData() {\n  try {\n    const res = await DashboardService.getAllTablesData();\n\n    return res.data;\n  } catch (error) {\n    throw new Error(\"Error fetching data from back-end \" + error.message);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport CircularChart from \"./chart/CircularChart\";\nimport ChartDropDown from \"./chart/ChartDropDown\";\nimport classes from \"./Facilities.module.css\";\nimport Card from \"../../shared/UI/Card\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\nimport { getFacilities } from \"../dashboard-api\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../../shared/Spinner\";\nimport GaugeChart from \"react-gauge-chart\";\nconst Facilities = () => {\n  const [facilities, setFacilities] = useState([]);\n  const [chartData, setChartData] = useState({ defined: 0, subFacilities: 0 });\n\n  const { sendRequest, status, data, error: err } = useHttp(getFacilities);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n\n  // Handling api response\n  if (status === \"pending\") {\n    return <Spinner />;\n  }\n\n  // TODO: Remove error message at production\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  if (status === \"completed\" && facilities.length === 0) {\n    console.log(\"completed\");\n    console.log(data);\n\n    let tmp = [];\n    data.map((el, i) => {\n      tmp.push({ op: el.name, id: i, facility: el });\n    });\n    setFacilities(tmp);\n  }\n\n  const ddChangeHandler = (e) => {\n    e.preventDefault();\n    console.log(facilities);\n    facilities.map((el) => {\n      if (el.id === +e.target.value) {\n        setChartData({\n          defined: el.facility.defined,\n          subFacilities: el.facility.sub_fac,\n        });\n      }\n    });\n  };\n\n  return (\n    <div className={classes.facilities}>\n      <Card>\n        <h3>🏢 Facilities </h3>\n        <ChartDropDown onChange={ddChangeHandler} options={facilities} />\n        <GaugeChart\n          id=\"gauge-chart6\"\n          animate={true}\n          nrOfLevels={10}\n          percent={chartData.defined}\n          needleColor=\"#345243\"\n          colors={[\"#EA4228\", \"#F5CD19\", \"#5BE12C\"]}\n          textColor={\"#000000\"}\n          animDelay={100}\n        />\n        <span>{chartData.subFacilities}</span>\n        <p> Subset Facilities </p>\n      </Card>\n    </div>\n  );\n};\n\nexport default Facilities;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ItemCard_item__XSGC1\"};","import Card from \"../../shared/UI/Card\";\nimport ChartDropDown from \"./chart/ChartDropDown\";\nimport CircularChart from \"./chart/CircularChart\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { getItemsAndTypes } from \"../dashboard-api\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\n\nimport classes from \"./ItemCard.module.css\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../../shared/Spinner\";\nimport GaugeChart from \"react-gauge-chart\";\n\nconst ItemsCard = () => {\n  const [itemClasses, setItemClasses] = useState([]);\n  const [items, setItems] = useState([]);\n  const [chartData, setChartData] = useState({ workings: 0, totalItems: 0 });\n\n  // api call to get items and types\n  const { sendRequest, status, data, error: err } = useHttp(getItemsAndTypes);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n\n  // Handling api response\n\n  if (status === \"pending\") {\n    return (\n      <div className={\"centered\"}>\n        <Spinner />\n      </div>\n    );\n  }\n  // TODO: Remove error message at production\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  // ----------- Feeding to app\n  // creating first dropdown available options\n  if (status === \"completed\" && itemClasses.length === 0) {\n    // Setting item classes\n    let tmp = [];\n    data.map((el, i) => {\n      tmp.push({ op: el.item_class, id: i });\n    });\n    setItemClasses(tmp);\n\n    tmp = [];\n  }\n  // after selecting first dropdown option, create second dropdown options based in first ID.\n  const itemClassChangeHandler = (e) => {\n    e.preventDefault();\n    let tmp = [];\n    const classId = e.target.value;\n\n    data.map((el, i) => {\n      if (i === +classId) {\n        el.items.map((el, j) => {\n          tmp.push({\n            id: j,\n            classId: i,\n            op: el.item_type,\n            working: el.working,\n            totalItems: el.total_items,\n          });\n        });\n      }\n    });\n\n    setItems(tmp);\n  };\n  // like before, find desired result based on ID found in onChange event.\n  const itemChangeHandler = (e) => {\n    const itemId = e.target.value;\n    items.map((el) => {\n      if (el.id === +itemId) {\n        setChartData({ working: el.working, totalItems: el.totalItems });\n      }\n    });\n  };\n\n  return (\n    <div className={classes.item}>\n      <Card>\n        <h3>🏢 Items </h3>\n\n        <ChartDropDown\n          onChange={itemClassChangeHandler}\n          options={itemClasses}\n        />\n\n        <ChartDropDown onChange={itemChangeHandler} options={items} />\n        <GaugeChart\n          className=\"pt-3\"\n          id=\"gauge-chart6\"\n          animate={true}\n          nrOfLevels={10}\n          percent={chartData.working || 0}\n          needleColor=\"#345243\"\n          colors={[ \"#EA4228\",\"#F5CD19\", \"#5BE12C\"]}\n          textColor={\"#000000\"}\n          animDelay={100}\n        />\n\n        <span>{chartData.totalItems}</span>\n        <p>Items</p>\n      </Card>\n    </div>\n  );\n};\nexport default ItemsCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst WarningItem = (props) => {\n  return (\n    <div className=\"d-flex mb-3\">\n      <div>\n        <p className=\"activity-info bg-warning\" style={{ color: \"#000000\" }}>\n          {\" \"}\n          ⚠{\" \"}\n        </p>\n      </div>\n      <div className=\"activity-details\">\n        <Link\n          className={\"p-0 btn btn-link btn-fw text-muted \"}\n          style={{ fontSize: \"16px\", textDecorationColor: \"#777\" }}\n          to={\"dashboard/warnings-info/\" + props.param}\n        >\n          {`  (${props.count})  `}\n          {props.title}\n          <label\n            className={`badge badge-danger opacity-${props.badgeOp} `}\n            style={{ fontSize: \"12px\" }}\n          >\n            {props.badge}\n          </label>\n          {props.maxExtended && (\n            <label\n              className={`badge badge-warning  `}\n              style={{ fontSize: \"12px\" }}\n            >\n              {\" \"}\n              {props.maxExtended} days extended\n            </label>\n          )}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default WarningItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"warnings\":\"Warnings_warnings__73LHj\"};","import WarningItem from \"./WarningItem\";\nimport React from \"react\";\n\nimport classes from \"./Warnings.module.css\";\nimport { useQuery } from \"react-query\";\n\nimport dashboardService from \"../../services/dashboard.service\";\n\nconst warningsData = [\n  {\n    title: \"Maintenance services must be done in   \",\n\n    badge: \"7 Days\",\n  },\n  {\n    title: \"Maintenance services must be done in   \",\n\n    badge: \"3 Days\",\n  },\n  {\n    title: \"Maintenance  services were \",\n    badge: \"not performed on time\",\n  },\n];\n\nconst Warnings = () => {\n  const { data, isLoading: warningData } = useQuery(\n    [\"warnings\"],\n    async () => {\n      const res = await dashboardService.getAllWarningsData();\n      return res.data;\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  if (warningData || data.length === 0) {\n    return null;\n  }\n\n  console.log(data);\n\n  return (\n    <div className={`card-body recent-activity ${classes.warnings}`}>\n      <h4 className=\"card-title\"> Warnings</h4>\n\n      <p className=\"card-description\">\n        Warnings that need to be taken cared of\n      </p>\n\n      {data && (\n        <div className=\"activities\">\n          <WarningItem\n            title={warningsData[0].title}\n            text={warningsData[0].text}\n            badge={warningsData[0].badge}\n            count={data.seven_days}\n            badgeOp={50}\n            param={\"day=7\"}\n          />\n          <WarningItem\n            title={warningsData[1].title}\n            text={warningsData[1].text}\n            badge={warningsData[1].badge}\n            count={data.three_days}\n            badgeOp={75}\n            param={\"day=3\"}\n          />\n          <WarningItem\n            title={warningsData[2].title}\n            text={warningsData[2].text}\n            badge={warningsData[2].badge}\n            count={data.extended.count}\n            maxExtended={data.extended.maxExtended}\n            badgeOp={100}\n            param={\"day=extended\"}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Warnings;\n","// extracted by mini-css-extract-plugin\nexport default {\"charts\":\"Dashbord_charts__aHm0k\",\"warning\":\"Dashbord_warning__DSWyr\"};","// extracted by mini-css-extract-plugin\nexport default {\"levels\":\"DashboardTables_levels__KWMUa\",\"sub-facilities\":\"DashboardTables_sub-facilities__YkEFi\"};","import React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nconst SubFacilitiesTableRow = (props) => {\n  const updatedOn = props.updatedOn.split(\"T\")[0].replace(/-/g, \" / \");\n\n  return (\n    <tr>\n      <td key={\"E\"}> {props.num} </td>\n\n      <td key={\"F\"} className=\"py-1\">\n        {props.name}\n      </td>\n\n      <td key={\"G\"}>\n        <label className=\"badge badge-info\"> {props.level} </label>\n      </td>\n      <td key={\"Z\"} className=\"py-1\">\n        {` ${props.levelName}`}\n      </td>\n\n      <td key={\"H\"}>\n        <ProgressBar variant={props.variant} now={props.registered} />\n      </td>\n      <td key={\"J\"}> {updatedOn} </td>\n    </tr>\n  );\n};\nexport default SubFacilitiesTableRow;\n","import React from \"react\";\nimport SubFacilitiesTableRow from \"./SubFacilitiesTableRow\";\n\nimport Card from \"../../../shared/UI/Card\";\n\nconst SubFacilitiesTable = (props) => {\n  const generateRows = () => {\n    let rows = [];\n    for (let i = 0; i < props.data.length; i++) {\n      const variant = i % 2 === 0 ? \"success\" : \"warning\";\n\n      rows.push(\n        <SubFacilitiesTableRow\n          key={i + 1}\n          num={props.data[i].id}\n          name={props.data[i].name}\n          level={props.data[i].level_id}\n          levelName={props.data[i].level_name}\n          registered={+props.data[i].defined * 100}\n          updatedOn={props.data[i].update}\n          variant={variant}\n        />\n      );\n    }\n    return rows;\n  };\n  return (\n    <Card>\n      <h4 className=\"card-title\"> Sub Facilities</h4>\n      <p className=\"card-description\">\n        {\" \"}\n        list of all sub facilities contained in the organizaion{\" \"}\n      </p>\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th> # </th>\n              <th> Facility Name </th>\n              <th> Level </th>\n              <th> Level name </th>\n              <th> Registered </th>\n              <th> Last Update </th>\n            </tr>\n          </thead>\n\n          <tbody>{generateRows()}</tbody>\n        </table>\n      </div>\n    </Card>\n  );\n};\n\nexport default SubFacilitiesTable;\n","import React from \"react\";\n\nconst LevelsTableRow = (props) => {\n  console.log(props._key);\n  return (\n    <tr>\n      <td key={\"A\"}>\n        <label className=\"badge badge-info\"> {props.level} </label>{\" \"}\n      </td>\n      <td key={\"B\"}>{props.levelName}</td>\n      <td key={\"C\"}>{props.facilitiesNum}</td>\n      <td key={\"D\"}>{props.subFacilitiesNum}</td>\n      <td key={\"E\"}>{props.defSubFacilitiesNum}</td>\n    </tr>\n  );\n};\n\nexport default LevelsTableRow;\n","import LevelsTableRow from \"./LevelsTableRow\";\nimport React from \"react\";\n\nconst LevelsTable = (props) => {\n  console.log(\"here\");\n  console.log(props.data);\n  return (\n    <div>\n      <h4 className=\"card-title\"> 🏢 Facilities</h4>\n      <p className=\"card-description\"> Facilities owned separated by levels</p>\n      <div className=\"table-responsive\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Level</th>\n              <th>Level Name</th>\n              <th>Total number of facilities</th>\n              <th>Total number of sub-facilities</th>\n              <th>Number of Defined sub-level facilities</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.data.map((item, i) => {\n              return (\n                <LevelsTableRow\n                  key={i}\n                  level={item.level_id}\n                  levelName={item.level_name}\n                  facilitiesNum={item.total}\n                  subFacilitiesNum={item.sub}\n                  defSubFacilitiesNum={item.def}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\nexport default LevelsTable;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport classes from \"./DashboardTables.module.css\";\nimport SubFacilitiesTable from \"./sub-facilities/SubFacilitiesTable\";\nimport useHttp from \"../../shared/custom-hooks/use-http\";\nimport { getTablesData } from \"../dashboard-api\";\nimport LevelsTable from \"./level/LevelsTable\";\nimport toast from \"react-hot-toast\";\nimport Spinner from \"../../shared/Spinner\";\n\nconst DashboardTables = () => {\n  const { sendRequest, status, data, error: err } = useHttp(getTablesData);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n  if (status === \"pending\") {\n    return <Spinner />;\n  }\n  console.log(\"error object\", err);\n  // TODO: Remove error message at production\n  if (err) {\n    toast.error(\"There was a problem loading data\");\n    return <p>{err}</p>;\n  }\n\n  if (status === \"completed\" && !dataLoaded) {\n    setDataLoaded(true);\n  }\n\n  return (\n    <Fragment>\n      <section className={classes.levels}>\n        {dataLoaded && <LevelsTable data={data.level_table} />}\n      </section>\n      <section className={classes[\"sub-facilities\"]}>\n        {dataLoaded && <SubFacilitiesTable data={data.facility_table} />}\n      </section>\n    </Fragment>\n  );\n};\n\nexport default DashboardTables;\n","import React from \"react\";\n\nimport Facilities from \"./chart-card/Facilities\";\nimport ItemsCard from \"./chart-card/ItemsCard\";\nimport Warnings from \"./warnings/Warnings\";\n\nimport classes from \"./Dashbord.module.css\";\n\nimport DashboardTables from \"./tables/DashboardTables\";\n\nconst Dashboard = () => {\n  return (\n    <main>\n      <section className={classes.charts}>\n        <ItemsCard />\n        <Facilities />\n      </section>\n\n      <section className={classes.warning}>\n        <Warnings />\n      </section>\n      <DashboardTables />\n    </main>\n  );\n};\n\nexport default Dashboard;\n","import ApiManager from \"./axios-config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://5.182.47.38:8001/dashboard\";\n\nclass DashboardService {\n  getAllDashboardItems() {\n    return ApiManager.get(API_URL + \"/item\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllFacilities() {\n    return ApiManager.get(API_URL + \"/facility\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getAllTablesData() {\n    return ApiManager.get(API_URL + \"/table\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getAllWarningsData() {\n    return ApiManager.get(API_URL + \"/maintenance\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n\n  getWarningsInfo(payload) {\n    console.log(\"Now requesting to \" + API_URL + \"/maintenance\" + payload);\n    return ApiManager.get(API_URL + \"/todo\" + payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\nexport default new DashboardService();\n"],"names":["ChangingProgressProvider","state","valuesIndex","setTimeout","setState","props","values","length","this","interval","children","React","defaultProps","className","classes","onChange","value","options","map","el","i","id","op","httpReducer","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","getItemsAndTypes","DashboardService","res","Error","getFacilities","getTablesData","useState","facilities","setFacilities","defined","subFacilities","chartData","setChartData","useHttp","err","useEffect","Spinner","toast","console","log","tmp","push","name","facility","e","preventDefault","target","sub_fac","animate","nrOfLevels","percent","needleColor","colors","textColor","animDelay","itemClasses","setItemClasses","items","setItems","workings","totalItems","item_class","classId","j","item_type","working","total_items","itemId","style","color","fontSize","textDecorationColor","to","param","count","title","badgeOp","badge","maxExtended","warningsData","useQuery","dashboardService","refetchOnMount","isLoading","text","seven_days","three_days","extended","updatedOn","split","replace","num","level","levelName","ProgressBar","variant","now","registered","rows","level_id","level_name","update","generateRows","_key","facilitiesNum","subFacilitiesNum","defSubFacilitiesNum","item","total","sub","def","dataLoaded","setDataLoaded","Fragment","level_table","facility_table","API_URL","ApiManager","headers","Authorization","authHeader","payload"],"sourceRoot":""}