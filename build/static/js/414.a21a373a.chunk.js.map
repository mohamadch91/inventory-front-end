{"version":3,"file":"static/js/414.a21a373a.chunk.js","mappings":"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","sources":["app/components/DynamicInput.js","app/shared/LeftArrowIcon.js","app/shared/RightArrowIcon.js","app/components/StepOperations.js","app/helpers/separator.js","app/helpers/validation-checker.js","app/constants/item.js","app/items/Item.js"],"sourcesContent":["import { Form } from \"react-bootstrap\";\nimport { separator as thousandSeparator } from \"../helpers/separator\";\n\nconst numericKeys = \"0123456789.:\";\nconst num1 = \"0123456789\";\nconst DynamicInput = (props) => {\n  const { field, onChangeHandler, defaultValue, separator } = props;\n  if (field.type === \"select\") {\n    return (\n      <Form.Control\n        onChange={(e) => onChangeHandler(e.target.value, field)}\n        defaultValue={defaultValue}\n        className=\"form-control\"\n        as=\"select\"\n        disabled={field.active ? !field.active : field.disabled}\n        id={`field-${field.id}`}\n      >\n        <option value=\"\" selected disabled>\n          Please select\n        </option>\n        {field.params.map((param) => (\n          <option\n            disabled={\n              param.enabled\n                ? !param.enabled\n                : param.active\n                ? !param.active\n                : !param.enable\n            }\n            value={param.id}\n          >\n            {param.name || param.describe}\n          </option>\n        ))}\n      </Form.Control>\n    );\n  }\n\n  if (field.type === \"bool\") {\n    return (\n      <>\n        <input\n          type=\"checkbox\"\n          defaultChecked={defaultValue}\n          onChange={(e) => onChangeHandler(e.target.checked, field)}\n          disabled={field.active ? !field.active : field.disabled}\n        />\n        <i style={{ marginLeft: \"5px\" }}> checked: yes </i>\n      </>\n    );\n  }\n\n  const validation = field.validation?.[0];\n  return (\n    <Form.Control\n      onKeyPress={(e) => {\n        e.persist();\n        if (field.type === \"number\") {\n          if (validation && validation?.float) {\n            if (numericKeys.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          } else if (validation && validation?.float === false) {\n            if (num1.indexOf(e.key) === -1) {\n              e.preventDefault();\n              return;\n            }\n          }\n        }\n        onChangeHandler(e.target.value, field);\n      }}\n      onChange={(e) => onChangeHandler(e.target.value, field)}\n      value={defaultValue}\n      className=\"form-control\"\n      id={`field-${field.id}`}\n      disabled={field.active ? !field.active : field.disabled}\n      min={validation && validation?.min !== -1 ? validation.min : undefined}\n      max={validation && validation?.max !== -1 ? validation.max : undefined}\n      step={\n        validation && validation?.float\n          ? Math.pow(0.1, validation.floating).toFixed(validation.floating)\n          : undefined\n      }\n      maxLength={\n        validation && validation?.digits !== -1 ? validation.digits : undefined\n      }\n      onBlur={(e) => {\n        e.persist();\n        if (separator) {\n          const formatted = thousandSeparator(e.target.value);\n          onChangeHandler(formatted, field);\n        }\n      }}\n    />\n  );\n};\n\nexport default DynamicInput;\n","function LeftArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 400 400\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M382.688,182.686H59.116l77.209-77.214c6.764-6.76,6.764-17.726,0-24.485c-6.764-6.764-17.73-6.764-24.484,0L5.073,187.757\n\t\tc-6.764,6.76-6.764,17.727,0,24.485l106.768,106.775c3.381,3.383,7.812,5.072,12.242,5.072c4.43,0,8.861-1.689,12.242-5.072\n\t\tc6.764-6.76,6.764-17.726,0-24.484l-77.209-77.218h323.572c9.562,0,17.316-7.753,17.316-17.315\n\t\tC400.004,190.438,392.251,182.686,382.688,182.686z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default LeftArrowIcon;\n","function RightArrowIcon() {\n  return (\n    <>\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 1024 1024\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M754.752 480H160a32 32 0 100 64h594.752L521.344 777.344a32 32 0 0045.312 45.312l288-288a32 32 0 000-45.312l-288-288a32 32 0 10-45.312 45.312L754.752 480z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default RightArrowIcon;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { Trans } from \"react-i18next\";\nimport LeftArrowIcon from \"../shared/LeftArrowIcon\";\nimport RightArrowIcon from \"../shared/RightArrowIcon\";\n\nfunction StepOperations(props) {\n  const { activeStep, handleBack, handleNext, stepsLength, isNextDisabled } =\n    props;\n  return (\n    <div className=\"row mt-2\">\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          disabled={activeStep === 0}\n          onClick={handleBack}\n          sx={{ mr: 1 }}\n          type=\"button\"\n        >\n          <LeftArrowIcon sx={{ mr: 2 }} />\n          <Trans>Back</Trans>\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        {activeStep === stepsLength ? (\n          <button className=\"btn btn-primary \">Save</button>\n        ) : (\n          <Button\n            disabled={isNextDisabled}\n            onClick={handleNext}\n            type=\"button\"\n            sx={{ mr: 1 }}\n          >\n            <Trans>Next</Trans>\n            <RightArrowIcon />\n          </Button>\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default StepOperations;\n","export const separator = (x) => {\n  if (x === undefined || x === null) {\n    return;\n  }\n  x = parseInt(x);\n  return thousandSeparator(x);\n};\n\nfunction thousandSeparator(n, sep) {\n  function reverse(text) {\n    return text.split(\"\").reverse().join(\"\");\n  }\n\n  var rx = /(\\d{3}(?!.*\\.|$))/g;\n\n  if (!sep) {\n    sep = \" \";\n  }\n\n  return reverse(reverse(n.toString()).replace(rx, \"$1\" + sep));\n}\n","import { separator } from \"../helpers/separator\";\n\nexport const hasValidationError = (value, validation) => {\n  console.log(typeof value);\n  if (typeof value !== \"string\" && typeof value !== \"number\") return false;\n\n  const _value = value.replaceAll(\" \", \"\");\n  if (validation === undefined || !_value) return false;\n  if (validation.min !== -1 && validation.min > _value) {\n    return `value must greater than ${separator(validation.min)}`;\n  }\n  if (validation.max !== -1 && validation.max < _value) {\n    return `value must less than ${separator(validation.max)}`;\n  }\n\n  if (\n    validation.float &&\n    _value.includes(\".\") &&\n    (+_value).toFixed(validation.floating) > _value\n  ) {\n    return `value must has ${validation.floating} decimals`;\n  }\n  if (\n    validation.digits !== -1 &&\n    _value\n      .toString()\n      .replaceAll(\",\", \"\")\n      .replaceAll(\".\", \"\")\n      .replaceAll(\":\", \"\").length >\n      validation.digits + (validation.floating > 0 ? validation.floating : 0)\n  ) {\n    return `value must be ${validation.digits} digits`;\n  }\n  return false;\n};\n\nexport const timeValidationError = (value) => {\n  const isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(\n    value\n  );\n\n  if (isValid) {\n    return false;\n  }\n  return \"value must be in (hh:mm) format!\";\n};\n","export const fromPQSFields = [\n  {\n    id: \"PQSPISCode\",\n    name: \"PQS/PIS Code:\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISCode\",\n    params: [],\n  },\n  {\n    id: \"PQSPISType\",\n    name: \"PQS/PIS-Type:\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISType\",\n    params: [],\n  },\n  {\n    id: \"PQSPISManufacturer\",\n    name: \"PQS/PIS-Manufacturer\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISManufacturer\",\n    params: [],\n  },\n\n  {\n    id: \"PQSPISRefrigerantGas\",\n    name: \"PQS/PIS-Refrigerant gas\",\n    topic: \"\",\n    type: \"text\",\n    active: true,\n    disabled: false,\n    required: false,\n    state: \"PQSPISRefrigerantGas\",\n    params: [],\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Spinner from \"../shared/Spinner\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport { Form } from \"react-bootstrap\";\nimport ItemService from \"../services/item.service\";\nimport DynamicInput from \"../components/DynamicInput\";\nimport { fromPQSFields } from \"../constants/item\";\nimport { hasValidationError } from \"../helpers/validation-checker\";\nimport { Trans } from \"react-i18next\";\nimport Select from \"react-select\";\nimport StepOperations from \"../components/StepOperations\";\n\nconst facilityField = {\n  id: \"facility\",\n  type: \"text\",\n  active: false,\n  disabled: true,\n  state: \"facility\",\n  name: \"\",\n};\n\nfunction Item() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [fieldsValue, setFieldValue] = useState({});\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [selectedItemClass, setSelectedItemClass] = useState(null);\n  const [selectedItemType, setSelectedItemType] = useState(null);\n  const [isFromPQS, setIsFromPQS] = useState(false);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const params = new URLSearchParams(history.location.search);\n  const parent = params.get(\"parent\");\n\n  const { isLoading: isItemDefaultLoading } = useQuery(\n    [\"item-default-value\", id],\n    async () => {\n      const defaultData = {\n        code: \"Unique code generated by IGA\",\n      };\n\n      if (id === \"new\") return defaultData;\n\n      const res = await ItemService.getItems(id);\n      return { ...res.data[1], ...defaultData };\n    },\n    {\n      refetchOnMount: true,\n      onSuccess(data) {\n        setFieldValue(data);\n      },\n    }\n  );\n\n  const { data: itemClassesAndTypes, isLoading: isItemClassesAndTypesLoading } =\n    useQuery(\n      [\"item-classes-and-types\"],\n      async () => {\n        const res = await ItemService.getItemClassesAndTypes();\n        setFieldValue((preValues) => ({\n          ...preValues,\n          facility: res.data.facility,\n        }));\n        return res.data.data.filter((item) => item.item_type.length > 0);\n      },\n      {\n        refetchOnMount: true,\n        onSuccess(data) {\n          setSelectedItemClass(data[0]);\n          setSelectedItemType(data[0]?.item_type?.[0]);\n        },\n      }\n    );\n\n  const { data: pqsData, isLoading: isPqsLoading } = useQuery(\n    [\"pqs\", selectedItemType?.id],\n    async () => {\n      const res = await ItemService.getPQS(selectedItemType?.id);\n      return res?.data?.map((item) => ({\n        label: item.pqsnumber ?? item.pqscode,\n        value: item,\n      }));\n    },\n    {\n      refetchOnMount: true,\n    }\n  );\n\n  const {\n    data: itemFields,\n    isLoading: isItemsFieldsLoading,\n    isIdle: isItemsFieldsIdle,\n    refetch: refetchItemFields,\n  } = useQuery(\n    [\n      \"item-fields\",\n      selectedItemClass?.item_class.id,\n      selectedItemType?.id,\n      parent,\n    ],\n    async () => {\n      const res = await ItemService.getItemFields(\n        selectedItemClass.item_class.id,\n        selectedItemType.id,\n        parent\n      );\n      const result = {};\n      if (res.data.fields) {\n        for (const field of res.data.fields) {\n          const fieldTopicInResult = result[field.field.topic] ?? [];\n          fieldTopicInResult.push(field.field);\n          result[field.field.topic] = fieldTopicInResult;\n        }\n        const firstTopic = Object.keys(result)[0] ?? \"Type\";\n        if (result[firstTopic] === undefined) {\n          result[firstTopic] = [];\n        }\n        //static fields\n        result[firstTopic].unshift({\n          id: \"code\",\n          name: \"Item code:\",\n          topic: firstTopic,\n          type: \"text\",\n          active: false,\n          disabled: true,\n          required: false,\n          state: \"code\",\n          params: [],\n        });\n      }\n      return result;\n    },\n    {\n      enabled: !!selectedItemType,\n    }\n  );\n\n  useEffect(() => {\n    if (selectedItemType) refetchItemFields();\n  }, [selectedItemType]);\n\n  const hasRequiredErrors = () => {\n    const _fieldErrors = { ...fieldErrors };\n    const currentStepFields = Object.values(itemFields)[activeStep];\n    currentStepFields.forEach((field) => {\n      if (field.required && !fieldsValue[field.state]) {\n        _fieldErrors[field.state] = \"this field is required!\";\n      }\n    });\n    setFieldErrors(_fieldErrors);\n    return Object.keys(_fieldErrors).length > 0;\n  };\n\n  const handleNext = () => {\n    if (!hasRequiredErrors()) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const onChangeHandler = (value, field) => {\n    const validationErr = hasValidationError(value, field.validation?.[0]);\n    const cloneFieldsValue = { ...fieldsValue };\n    cloneFieldsValue[field.state] = value;\n    setFieldValue(cloneFieldsValue);\n    //check validation and required\n    const _fieldErrors = { ...fieldErrors };\n    if (validationErr) {\n      _fieldErrors[field.state] = validationErr;\n    } else {\n      delete _fieldErrors[field.state];\n    }\n    setFieldErrors(_fieldErrors);\n  };\n\n  const onSaveHandler = async (e) => {\n    e.preventDefault();\n    if (hasRequiredErrors()) {\n      return;\n    }\n    const _fieldsValue = { ...fieldsValue };\n    if (!isFromPQS) {\n      for (const key in fieldsValue) {\n        if (fromPQSFields.find((pqsField) => pqsField.state === key)) {\n          delete _fieldsValue[key];\n        }\n      }\n    }\n    _fieldsValue[\"item_class\"] = selectedItemClass.item_class.id;\n    _fieldsValue[\"item_type\"] = selectedItemType.id;\n    _fieldsValue[\"facility\"] = _fieldsValue[\"facility\"].id;\n    const res = await (id === \"new\"\n      ? ItemService.postItem(_fieldsValue)\n      : ItemService.putItem(_fieldsValue));\n\n    setFieldValue(_fieldsValue);\n  };\n\n  const selectItemClassHandler = (e) => {\n    setSelectedItemClass(itemClassesAndTypes[e.target.value]);\n    setSelectedItemType(selectedItemClass.item_type[0]);\n  };\n\n  const selectItemTypeHandler = (e) => {\n    setSelectedItemType(selectedItemClass.item_type[e.target.value]);\n  };\n\n  const onIsFromPQSChange = () => {\n    setIsFromPQS((preChecked) => !preChecked);\n  };\n\n  const selectPQSHandler = () => {\n    const value = pqsData.find(\n      (pqs) => pqs.label === fieldsValue[\"PQSPISCode\"]\n    )?.value;\n    if (value === undefined) {\n      //TODO: show a correct massage to user\n      return;\n    }\n    const cloneFieldsValue = { ...fieldsValue };\n    const selectedPqs = pqsData.find((pqs) => pqs.id === value);\n    cloneFieldsValue[\"PQSPISType\"] = selectedPqs?.model;\n    cloneFieldsValue[\"PQSPISManufacturer\"] =\n      selectedPqs?.manufacturer ?? selectedPqs?.make;\n    cloneFieldsValue[\"PQSPISRefrigerantGas\"] = selectedPqs?.refrigerant;\n    setFieldValue(cloneFieldsValue);\n  };\n\n  if (\n    isItemDefaultLoading ||\n    isItemClassesAndTypesLoading ||\n    isItemsFieldsLoading ||\n    isItemsFieldsIdle ||\n    isPqsLoading\n  ) {\n    return <Spinner />;\n  }\n\n  return (\n    <form onSubmit={onSaveHandler}>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Item information</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row pb-4\" style={{ overflow: \"auto\" }}>\n              <Stepper activeStep={activeStep}>\n                {Object.keys(itemFields).map((topic) => {\n                  return (\n                    <Step key={topic}>\n                      <StepLabel style={{ width: \"max-content\" }}>\n                        {topic}\n                      </StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n            </div>\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              stepsLength={Object.keys(itemFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body pb-3\">\n            <div className=\"row\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  Facility Name:\n                </label>\n                <div className={\"col-sm-8\"}>\n                  <DynamicInput\n                    field={facilityField}\n                    defaultValue={fieldsValue[\"facility\"]?.name}\n                  />\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-left control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Trans>Item class</Trans>\n                </label>\n                <div className=\"col-sm-8\">\n                  <Form.Control\n                    onChange={selectItemClassHandler}\n                    className=\"form-select\"\n                    as=\"select\"\n                    value={itemClassesAndTypes?.findIndex(\n                      (i) =>\n                        i?.item_class.id === selectedItemClass?.item_class.id\n                    )}\n                    disabled={activeStep !== 0}\n                  >\n                    {itemClassesAndTypes.map((itemClass, index) => (\n                      <option value={index}>\n                        {itemClass.item_class.title}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            </div>\n            <div className=\"row mt-3\">\n              <Form.Group className=\"row mb-0\">\n                <label\n                  className={`col-sm-4 text-right control-label`}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\",\n                    lineHeight: \"1.4\",\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Trans>Item Category</Trans>\n                </label>\n                <div className=\"col-sm-8\">\n                  <Form.Control\n                    onChange={selectItemTypeHandler}\n                    className=\"form-select\"\n                    as=\"select\"\n                    value={selectedItemClass?.item_type.findIndex(\n                      (i) => i?.id === selectedItemType?.id\n                    )}\n                    disabled={activeStep !== 0}\n                  >\n                    {selectedItemClass?.item_type.map((itemType, index) => (\n                      <option value={index}>{itemType.title}</option>\n                    ))}\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {activeStep === 0 && (\n              <>\n                {selectedItemType.havepqs && (\n                  <>\n                    <div className=\"row\">\n                      <Form.Group className=\"row mb-0\">\n                        <label\n                          className={`col-sm-4 text-right`}\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"flex-end\",\n                            alignItems: \"center\",\n                            lineHeight: \"1.4\",\n                            textAlign: \"right\",\n                          }}\n                        >\n                          <Trans>Is this item from PQS/PIS list?</Trans>\n                        </label>\n                        <div className=\"col-sm-6\">\n                          <input\n                            name=\"is-from-pqs\"\n                            type=\"checkbox\"\n                            onChange={onIsFromPQSChange}\n                            checked={isFromPQS}\n                          />\n                        </div>\n                        <hr className=\"my-3\" />\n                      </Form.Group>\n                    </div>\n                    {isFromPQS &&\n                      fromPQSFields.map((pqsField) => (\n                        <div className=\"row\" key={pqsField.name}>\n                          <Form.Group className=\"row mb-0\">\n                            <label\n                              className={`col-sm-4 text-right ${\n                                pqsField.required ? \"control-label\" : \"\"\n                              }`}\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                                alignItems: \"center\",\n                                lineHeight: \"1.4\",\n                                textAlign: \"right\",\n                              }}\n                            >\n                              {pqsField.name}\n                            </label>\n\n                            <div\n                              className={`${\n                                pqsField.state === \"PQSPISCode\"\n                                  ? \"col-sm-7\"\n                                  : \"col-sm-8\"\n                              }`}\n                            >\n                              {pqsData && pqsField.state === \"PQSPISCode\" ? (\n                                <Select\n                                  options={pqsData}\n                                  onChange={(e) => {\n                                    onChangeHandler(e.label, pqsField);\n                                  }}\n                                  value={{\n                                    label: fieldsValue[\"PQSPISCode\"],\n                                    value: pqsData.find(\n                                      (pqs) =>\n                                        pqs.label === fieldsValue[\"PQSPISCode\"]\n                                    )?.value,\n                                  }}\n                                  onBlur={(e) => {\n                                    const value = e.target.value;\n                                    if (value.length > 0) {\n                                      onChangeHandler(value, pqsField);\n                                    }\n                                  }}\n                                />\n                              ) : (\n                                // <DynamicInput\n                                //   field={{\n                                //     ...pqsField,\n                                //     type: \"select\",\n                                //     params: pqsData,\n                                //   }}\n                                //   onChangeHandler={(value, field) => {\n                                //     onChangeHandler(value, field);\n                                //     selectPQSHandler(value);\n                                //   }}\n                                //   defaultValue={fieldsValue[pqsField.state]}\n                                // />\n                                <DynamicInput\n                                  field={pqsField}\n                                  onChangeHandler={onChangeHandler}\n                                  defaultValue={fieldsValue[pqsField.state]}\n                                />\n                              )}\n                            </div>\n                            {pqsField.state === \"PQSPISCode\" && (\n                              <div className=\"col-sm-1\">\n                                <button\n                                  className=\"btn btn-primary w-100 h-100\"\n                                  onClick={selectPQSHandler}\n                                  type=\"button\"\n                                >\n                                  <Trans>Load</Trans>\n                                </button>\n                              </div>\n                            )}\n                            <hr className=\"my-3\" />\n                          </Form.Group>\n                        </div>\n                      ))}\n                  </>\n                )}\n              </>\n            )}\n            {Object.values(itemFields)[activeStep]?.map((field) => {\n              const hasRequiredError = !!fieldErrors[field.state];\n              return (\n                <div className=\"row\" key={field.name}>\n                  <Form.Group className=\"row mb-0\">\n                    <label\n                      className={`col-sm-4 text-right ${\n                        field.required ? \"control-label\" : \"\"\n                      }`}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                        alignItems: \"center\",\n                        lineHeight: \"1.4\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {field.name}\n                    </label>\n                    <div className=\"col-sm-8\">\n                      <DynamicInput\n                        field={field}\n                        onChangeHandler={onChangeHandler}\n                        defaultValue={fieldsValue[field.state]}\n                      />\n                    </div>\n                    {hasRequiredError && (\n                      <div className=\"row\">\n                        <div className=\"col-sm-4\"></div>\n                        <div className=\"col-sm-8\">\n                          <p className=\"my-1 ml-2 text-danger\">\n                            {fieldErrors[field.state]}\n                          </p>\n                        </div>\n                      </div>\n                    )}\n                    <hr className=\"my-3\" />\n                  </Form.Group>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <StepOperations\n              handleBack={handleBack}\n              handleNext={handleNext}\n              activeStep={activeStep}\n              stepsLength={Object.keys(itemFields).length - 1}\n              isNextDisabled={Object.keys(fieldErrors).length > 0}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Item;\n"],"names":["props","field","onChangeHandler","defaultValue","separator","type","onChange","e","target","value","className","as","disabled","active","id","selected","params","map","param","enabled","enable","name","describe","defaultChecked","checked","style","marginLeft","validation","onKeyPress","persist","float","indexOf","key","preventDefault","min","undefined","max","step","Math","pow","floating","toFixed","maxLength","digits","onBlur","formatted","thousandSeparator","version","x","y","width","height","viewBox","fill","d","activeStep","handleBack","handleNext","stepsLength","isNextDisabled","Box","sx","display","flexDirection","pt","Button","color","onClick","mr","Trans","flex","n","sep","reverse","text","split","join","rx","toString","replace","parseInt","hasValidationError","console","log","_value","replaceAll","includes","length","timeValidationError","test","fromPQSFields","topic","required","state","facilityField","useState","setActiveStep","fieldsValue","setFieldValue","fieldErrors","setFieldErrors","selectedItemClass","setSelectedItemClass","selectedItemType","setSelectedItemType","isFromPQS","setIsFromPQS","useParams","history","useHistory","parent","URLSearchParams","location","search","get","isItemDefaultLoading","useQuery","defaultData","code","ItemService","res","data","refetchOnMount","onSuccess","isLoading","preValues","facility","filter","item","item_type","itemClassesAndTypes","isItemClassesAndTypesLoading","label","pqsnumber","pqscode","pqsData","isPqsLoading","item_class","result","fields","fieldTopicInResult","push","firstTopic","Object","keys","unshift","itemFields","isItemsFieldsLoading","isItemsFieldsIdle","isIdle","refetchItemFields","refetch","useEffect","hasRequiredErrors","_fieldErrors","values","forEach","prevActiveStep","validationErr","cloneFieldsValue","onSaveHandler","_fieldsValue","find","pqsField","selectPQSHandler","pqs","selectedPqs","model","manufacturer","make","refrigerant","Spinner","onSubmit","overflow","Stepper","Step","StepLabel","StepOperations","Form","justifyContent","alignItems","lineHeight","textAlign","DynamicInput","findIndex","i","itemClass","index","title","itemType","havepqs","preChecked","options","hasRequiredError"],"sourceRoot":""}