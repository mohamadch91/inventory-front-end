{"version":3,"file":"static/js/4781.4b1a759c.chunk.js","mappings":"uTA2BMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYC,GAAQ,IAAD,yBACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,MAAjB,WACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,MAAtB,WACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,MAAtB,WAExB,EAAKG,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,SAAS,EACTC,KAAM,GACNC,OAAQ,CACNC,cAAc,GAEhBC,UAAU,EACVC,KAAM,UACNC,SAAU,EACVC,OAAQ,KACRC,MAAM,GAnBS,CAqBlB,CAmLA,OA7KE,EAAL,sCACE,SAAiBC,GACfC,KAAKC,SAAS,CACZd,SAAUY,EAAEG,OAAOC,MACnBZ,KAAMQ,EAAEG,OAAOC,OAElB,GAKH,8BACE,SAAiBJ,GACfC,KAAKC,SAAS,CACZb,SAAUW,EAAEG,OAAOC,OAEtB,GASH,yBACE,SAAYJ,GAAI,IAAD,OAOb,GANAA,EAAEK,iBAEFJ,KAAKC,SAAS,CACZX,SAAS,IAGgB,IAAvBU,KAAKd,MAAMC,SAKb,OAJAkB,EAAAA,GAAAA,OAAY,SAACC,EAAA,EAAD,0CACZN,KAAKC,SAAS,CACZX,SAAS,IAIb,GAA2B,IAAvBU,KAAKd,MAAME,SAKb,OAJAiB,EAAAA,GAAAA,OAAY,SAACC,EAAA,EAAD,yCACZN,KAAKC,SAAS,CACZX,SAAS,IAIb,MAA8BU,KAAKnB,MAA3B0B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAElBD,GAASE,EAAAA,EAAAA,GAAMT,KAAKd,MAAMC,SAAUa,KAAKd,MAAME,WAC5CsB,MAAK,SAACC,GACLN,EAAAA,GAAAA,SAAc,SAACC,EAAA,EAAD,iCAEdE,EAAQI,KAAK,cACbC,OAAOC,SAASC,QACjB,IACAC,OAAM,SAACC,GACNZ,EAAAA,GAAAA,OAAY,SAACC,EAAA,EAAD,4BACZ,EAAKL,SAAS,CACZX,SAAS,GAEZ,GACJ,G,oBAoBD,WAAU,IAAD,OACP,EAAgCU,KAAKnB,MAA7BqC,EAAR,EAAQA,WAAR,EAAoBC,QACpB,OAAID,GACK,SAAC,KAAD,CAAUE,GAAG,gBAIpB,oBAASC,UAAU,mDAAnB,UACE,gBAAKA,UAAU,4EAAf,UACE,iBAAKA,UAAU,sDAAf,WACE,iBACEA,UAAU,oCACVC,MAAO,CAAEC,OAAQ,KAAMC,YAAa,OAFtC,WAIE,gBACEH,UAAU,sCACVC,MAAO,CAAEG,MAAO,qBAAsBC,SAAU,QAFlD,WAIE,SAACpB,EAAA,EAAD,gDAJF,KAImD,mBACjD,iBAAMgB,MAAO,CAAEG,MAAO,4BAExB,gBAAKJ,UAAU,MAAMM,IAAI,yBAG3B,iBAAKN,UAAU,gFAAf,WACE,gBACEO,GAAG,iBACHP,UAAU,sDAEZ,gBACEO,GAAG,iBACHP,UAAU,uCAGZ,gBAAKA,UAAU,sCAAf,UACE,gBAAKA,UAAU,wCAAf,UACE,UAACQ,EAAA,EAAD,CACEC,SAAU9B,KAAKlB,YACfiD,IAAK,SAACC,GACJ,EAAKC,KAAOD,CACb,EAJH,WAME,iBAAKX,UAAU,yBAAf,WACE,kBAAOA,UAAU,aAAaa,QAAQ,gBAAtC,UACE,SAAC5B,EAAA,EAAD,0BAEF,kBACE6B,SAAU,SAACpC,GACT,EAAKf,iBAAiBe,EACvB,EACDJ,KAAK,OACLiC,GAAG,gBACHP,UAAU,qBAId,iBAAKA,UAAU,oBAAf,WACE,kBAAOA,UAAU,aAAaa,QAAQ,gBAAtC,UACE,SAAC5B,EAAA,EAAD,0BAEF,kBACE6B,SAAU,SAACpC,GACT,EAAKd,iBAAiBc,EACvB,EACDJ,KAAK,WACLiC,GAAG,gBACHP,UAAU,qBAId,gBAAKA,UAAU,mDAEf,oBACE1B,KAAK,SACL0B,UAAU,sCAFZ,WAIE,gBAAIA,UAAU,SAAd,WACE,SAACf,EAAA,EAAD,sBAAuB,OAExBN,KAAKd,MAAMI,UACV,iBAAM+B,UAAU,uEAWrC,OAzMGzC,CAAcwD,EAAAA,WAqNpB,OAAeC,EAAAA,EAAAA,KATf,SAAyBnD,GAGvB,MAAO,CACLgC,WAHqBhC,EAAMoD,KAArBpB,WAINC,QAHkBjC,EAAMiC,QAAlBA,QAKT,GAED,CAAwCvC,E","sources":["app/user-pages/Login.js"],"sourcesContent":["import \"./css/login.css\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport { Link } from \"react-router-dom\";\nimport { Trans } from \"react-i18next\";\n\nimport EventBus from \"../common/EventBus\";\nimport PropTypes from \"prop-types\";\n\nimport { Toast } from \"react-bootstrap\";\n// import { withTranslation } from \"react-i18next\";\nimport { withRouter } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\n\n/**\n *   Login component is used to login the user\n * @param {object} props\n * @param {boolean} props.isLoggedIn isLoggedIn is a boolean value which is used to check if the user is logged in or not\n * @param {object} props.message message is an object which contains the message to be displayed\n * @returns {JSX.Element} Login component\n * @example\n * <Login />\n *\n */\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      content: \"\",\n      loading: false,\n      name: \"\",\n      values: {\n        showPassword: false,\n      },\n      loadfile: false,\n      type: \"success\",\n      progress: 0,\n      source: null,\n      open: false,\n    };\n  }\n\n  /**\n   * @param  {event} e is an event\n   * @function onChangeUsername is used to set the username in the state\n   * change user username come from the form\n   */\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n      name: e.target.value,\n    });\n  }\n  /**\n   * @param  {event} e is an event\n   * @function onChangePassword is used to set the password in the state\n   * change user password come from the form\n   */\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  /**\n   * @param  {event} e is an event\n   * @function handleLogin is used to login the user\n   * if the user is logged in successfully then redirect to the home page\n   * if the user is not logged in successfully then display the error message\n   *\n   *\n   */\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    if (this.state.username == \"\") {\n      toast.error(<Trans>Please enter username</Trans>);\n      this.setState({\n        loading: false,\n      });\n      return;\n    }\n    if (this.state.password == \"\") {\n      toast.error(<Trans>Password is required</Trans>);\n      this.setState({\n        loading: false,\n      });\n      return;\n    }\n    const { dispatch, history } = this.props;\n\n    dispatch(login(this.state.username, this.state.password))\n      .then((res) => {\n        toast.success(<Trans>Login Successfull</Trans>);\n\n        history.push(\"/dashboard\");\n        window.location.reload();\n      })\n      .catch((err) => {\n        toast.error(<Trans>Login Failed</Trans>);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n  /**\n   *\n   * if you want add show password button please use this function\n   * and uncomment the code in the render function\n   */\n  // handleClickShowPassword = () => {\n  //   this.setState({\n  //     values: {\n  //       ...this.state.values,\n  //       showPassword: !this.state.values.showPassword,\n  //     },\n  //   });\n\n  // };\n\n  // handleMouseDownPassword(event) {\n  //   event.preventDefault();\n  // }\n\n  render() {\n    const { isLoggedIn, message } = this.props;\n    if (isLoggedIn) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n      <section className=\"background-radial-gradient overflow-hidden w-100\">\n        <div className=\"container mobile-padding px-4 py-5 px-md-5 text-center text-lg-start my-5\">\n          <div className=\"row mobile gx-lg-5 align-items-center mb-5 new_row \">\n            <div\n              className=\"col-lg-6 mb-5 zero_margin mb-lg-0\"\n              style={{ Zindex: \"10\", marginRight: \"10%\" }}\n            >\n              <h1\n                className=\"my-5 new-margin  display-5 fw-bold \"\n                style={{ color: \"hsl(218, 81%, 95%)\", fontSize: \"30px\" }}\n              >\n                <Trans>Inventory and Gap Analysis System</Trans> <br />\n                <span style={{ color: \"hsl(218, 81%, 75%)\" }}></span>\n              </h1>\n              <img className=\"who\" src=\"./who-emblem.png\" />\n            </div>\n\n            <div className=\"offset-1 offset-sm-0 col-lg-4 zero_margin mb-5 mb-lg-0 position-relative mt-5\">\n              <div\n                id=\"radius-shape-1\"\n                className=\"position-absolute rounded-circle shadow-5-strong\"\n              ></div>\n              <div\n                id=\"radius-shape-2\"\n                className=\"position-absolute shadow-5-strong\"\n              ></div>\n\n              <div className=\"card bg-glass new-margin  mb-5 mt-5\">\n                <div className=\"card-body px-5 py-5 px-md-5 col-md-12\">\n                  <Form\n                    onSubmit={this.handleLogin}\n                    ref={(c) => {\n                      this.form = c;\n                    }}\n                  >\n                    <div className=\"form-outline mb-4 mt-2\">\n                      <label className=\"form-label\" htmlFor=\"form3Example3\">\n                        <Trans>Username</Trans>\n                      </label>\n                      <input\n                        onChange={(e) => {\n                          this.onChangeUsername(e);\n                        }}\n                        type=\"text\"\n                        id=\"form3Example3\"\n                        className=\"form-control\"\n                      />\n                    </div>\n\n                    <div className=\"form-outline mb-4\">\n                      <label className=\"form-label\" htmlFor=\"form3Example4\">\n                        <Trans>Password</Trans>\n                      </label>\n                      <input\n                        onChange={(e) => {\n                          this.onChangePassword(e);\n                        }}\n                        type=\"password\"\n                        id=\"form3Example4\"\n                        className=\"form-control\"\n                      />\n                    </div>\n\n                    <div className=\"form-check d-flex justify-content-center mb-4\"></div>\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn sign btn-primary btn-block mb-2\"\n                    >\n                      <h3 className=\"m-auto\">\n                        <Trans>SIGN IN</Trans>{\" \"}\n                      </h3>\n                      {this.state.loading && (\n                        <span className=\"mr-2 pr-1 pl-2 spinner-border spinner-border-sm\"></span>\n                      )}\n                    </button>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n"],"names":["Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","username","password","content","loading","name","values","showPassword","loadfile","type","progress","source","open","e","this","setState","target","value","preventDefault","toast","Trans","dispatch","history","login","then","res","push","window","location","reload","catch","err","isLoggedIn","message","to","className","style","Zindex","marginRight","color","fontSize","src","id","Form","onSubmit","ref","c","form","htmlFor","onChange","Component","connect","auth"],"sourceRoot":""}