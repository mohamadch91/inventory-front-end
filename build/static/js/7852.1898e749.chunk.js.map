{
  "version": 3,
  "file": "static/js/7852.1898e749.chunk.js",
  "mappings": "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",
  "sources": [
    "app/reports/FacilityMapBasedReport.js",
    "app/services/report.service.js",
    "app/shared/sharedMap.js",
    "../node_modules/react-i18next/dist/es/Translation.js"
  ],
  "sourcesContent": [
    "import React, { useState } from \"react\";\nimport { Translation,Trans } from \"react-i18next\";\nimport { useQuery } from \"react-query\";\nimport { Form } from \"react-bootstrap\";\nimport ReportService from \"../services/report.service\";\nimport \"./form.scss\";\nimport Spinner from \"../shared/Spinner\";\nimport SharedMap from \"../shared/sharedMap\";\nimport { toast } from \"react-hot-toast\";\n\nconst defaultValues = {\n  level: \"-1\",\n  type: \"-1\",\n  power: \"-1\",\n  func: \"-1\",\n};\n\nfunction FacilityMapBasedReport() {\n  const [filterValues, setFilterValues] = useState(defaultValues);\n\n  const country = JSON.parse(localStorage.getItem(\"country\")) || {};\n\n  const { data: facMapHelper, isLoading: isFacMapHelperLoading } = useQuery(\n    [\"fac-map-based-helper\"],\n    async () => {\n      const res = await ReportService.getFacMap({ help: true });\n      return res.data;\n    }\n  );\n\n  const {\n    data: reports,\n    isLoading: isReportsLoading,\n    refetch: fetchReports,\n  } = useQuery(\n    [\"fac-map-report\"],\n    async () => {\n      const params = {\n        help: false,\n      };\n      for (const key in filterValues) {\n        const filter = filterValues[key];\n        if (filter.length > 0 && filter !== \"-1\") {\n          params[key] = filter;\n        }\n      }\n      const res = await ReportService.getFacMap(params);\n       if (res.data.length === 0) {\n         toast.error(<Trans>No data found</Trans>);\n       }\n      return res.data;\n    },\n    {\n      refetchOnMount: false,\n      enabled: false,\n    }\n  );\n\n  if (isFacMapHelperLoading || isReportsLoading) {\n    return <Spinner />;\n  }\n  return (\n    <div>\n      <h3 className=\"page-title mb-3\">\n        <Trans>Facility Map-Based Report</Trans>\n      </h3>\n      <div className=\"mt-3\">\n        <div className=\"card\">\n          <div className=\"card-body py-3\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                fetchReports();\n              }}\n            >\n              <h4>\n                <Trans>Filter</Trans>\n              </h4>\n              <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Levels</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          level: value,\n                        }));\n                      }}\n                      value={filterValues.level}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n\n                      {facMapHelper?.level.map((lev) => (\n                        <option key={lev.id} value={lev.id}>\n                          {`${lev.id} - ${lev.name}`}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Type</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          type: value,\n                        }));\n                      }}\n                      value={filterValues.type}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {facMapHelper?.type.map((ty) => (\n                        <option key={ty.id} value={ty.id}>\n                          {ty.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Power source</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          power: value,\n                        }));\n                      }}\n                      value={filterValues.power}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      {facMapHelper?.power.map((pow) => (\n                        <option key={pow.id} value={pow.id}>\n                          {pow.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-12 col-lg-6\">\n                  <Form.Group className=\"row\">\n                    <label className=\"label col-sm-4\">\n                      <Trans>Functioning Status</Trans>:\n                    </label>\n                    <Form.Control\n                      className=\"form-select col-sm-8\"\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setFilterValues((preValues) => ({\n                          ...preValues,\n                          func: value,\n                        }));\n                      }}\n                      value={filterValues.func}\n                      as=\"select\"\n                    >\n                      <Translation>\n                        {(t, { i18n }) => (\n                          <option value=\"-1\" selected disabled>\n                            {t(\"Please select\")}\n                          </option>\n                        )}\n                      </Translation>\n                      <option value={true}>Working</option>\n                      <option value={false}>Not working</option>\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"row mt-4\">\n                <div className=\"col-sm-2\">\n                  <button type=\"submit\" className=\"btn fs-5  btn-primary\">\n                    <Trans>Reports</Trans>\n                  </button>\n                </div>\n                <div className=\"col-sm-3\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary fs-5\"\n                    onClick={() => setFilterValues(defaultValues)}\n                  >\n                    <Trans>Clear Filter</Trans>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"p-3\">\n        <h2 className=\"text-dark fs-5\">\n          <Trans>Report</Trans> : <Trans>Facility Map-Based</Trans> (\n          {country?.country})\n        </h2>\n        <h5 className=\"text-dark fs-5\">\n          <Trans>Date</Trans>: {new Date().toISOString().split(\"T\")[0]}\n        </h5>\n        <SharedMap locations={reports} />\n      </div>\n    </div>\n  );\n}\n\nexport default FacilityMapBasedReport;\n",
    "import authHeader from \"./auth-header\";\nimport ApiManager from \"./axios-config\";\n\nconst API_URL = \"https://api.invgap.org/reports/\";\n\nclass ReportService {\n  getDownloadLinks() {\n    return ApiManager.get(API_URL + \"excel\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getFacSeg(params) {\n    return ApiManager.get(API_URL + \"facseg\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getSubFacPop(params) {\n    return ApiManager.get(API_URL + \"subfacpop\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getFacMap(params) {\n    return ApiManager.get(API_URL + \"facmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapMap(params) {\n    return ApiManager.get(API_URL + \"gapmap\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemGp(params) {\n    return ApiManager.get(API_URL + \"item-gp\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getItemFac(params) {\n    return ApiManager.get(API_URL + \"itemfac\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapItem(params) {\n    return ApiManager.get(API_URL + \"gapitem\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getProfOfFac() {\n    return ApiManager.get(API_URL + \"facprof\", {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  getColdProf(degree) {\n    return ApiManager.get(API_URL + \"coldprof\", {\n      headers: { Authorization: authHeader() },\n      params: {\n        degree,\n      },\n    });\n  }\n  getPlanningReport(params) {\n    return ApiManager.get(API_URL + \"planingreport\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getPlanningCCEGap(params) {\n    return ApiManager.get(API_URL + \"gapcce\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  getGapCCEPlan(params) {\n    return ApiManager.get(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      params,\n    });\n  }\n  postGapCCEPlan(payload) {\n    return ApiManager.post(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  deleteGapCCEPlan(payload) {\n    return ApiManager.delete(API_URL + \"gapccePlan\", {\n      headers: { Authorization: authHeader() },\n      data: payload,\n    });\n  }\n  putGapCCEPlan(payload) {\n    return ApiManager.put(API_URL + \"gapccePlan\", payload, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n  savegaps(payload, saved) {\n    return ApiManager.post(API_URL + \"gapsave?condition=\" + payload, saved, {\n      headers: { Authorization: authHeader() },\n    });\n  }\n}\n\nexport default new ReportService();\n",
    "import { useEffect, useState } from \"react\";\nimport {\n  MapContainer,\n  useMap,\n  TileLayer,\n  Marker,\n  Popup,\n  useMapEvents,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\n// import tileLayer from '../util/tileLayer';\n// import \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet.css\";\nconst center = [52.22977, 21.01178];\n// delete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\nfunction LocationMarker() {\n  const [position, setPosition] = useState(null);\n  const map = useMapEvents({\n    click() {\n      map.locate();\n      map.invalidateSize();\n    },\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  });\n\n  return position === null ? null : <></>;\n}\nconst GetCoordinates = (props) => {\n  const map = useMap();\n  const handleClick = (e) => {\n    props.change(e);\n  };\n\n  useEffect(() => {\n    if (!map) return;\n    const info = L.DomUtil.create(\"div\", \"legend\");\n\n    const positon = L.Control.extend({\n      options: {\n        position: \"bottomleft\",\n      },\n\n      onAdd: function () {\n        info.textContent = \"Click on map too add location\";\n        return info;\n      },\n    });\n    map.on(\"load\", (e) => {\n      console.log(\"salam\");\n    });\n    map.on(\"click\", (e) => {\n      window.navigator.geolocation.getCurrentPosition(console.log, console.log);\n      info.textContent = e.latlng;\n      handleClick(e);\n    });\n\n    map.addControl(new positon());\n  }, [map]);\n\n  return null;\n};\n\n\nconst MapWrapper = (props) => {\n    const LeafIcon = L.Icon.extend({\n      options: {},\n    });\n\n    const blueIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|abcdef&chf=a,s,ee00FFFF\",\n      }),\n      greenIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2ecc71&chf=a,s,ee00FFFF\",\n      }),\n      redIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2ccc22&chf=a,s,ee00FFFF\",\n      }),\n      yellowIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|4acc71&chf=a,s,ee00FFFF\",\n      }),purpleIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|7dcc71&chf=a,s,ee00FFFF\",\n      }),blackIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|3ccc71&chf=a,s,ee00FFFF\",\n      }),roseIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2dcc71&chf=a,s,ee00FFFF\",\n      }),pupIcon = new LeafIcon({\n        iconUrl:\n          \"https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|2eee71&chf=a,s,ee00FFFF\",\n      });\n    const levels = {\n      1: blueIcon,\n      2: greenIcon,\n      3: redIcon,\n      4: yellowIcon,\n      5: purpleIcon,\n      6: blackIcon,\n      7: roseIcon,\n      8: pupIcon,\n    };\n  const { locations } = props;\n  const [map, setMap] = useState(null);\n  const [Current, sercurrent] = useState([]);\n    // const [icon, setIcon] = useState(blueIcon);\n\n  const [x1, setx1] = useState(\n    JSON.parse(localStorage.getItem(\"country\")) === null\n      ? 35\n      : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] ===\n        undefined\n      ? 35\n      : JSON.parse(localStorage.getItem(\"country\"))\n          [\"mainlocation\"]?.split(\"(\")[1]\n          ?.split(\",\")[0]\n  );\n  const [x2, setx2] = useState(\n    JSON.parse(localStorage.getItem(\"country\")) === null\n      ? 51\n      : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"] ===\n        undefined\n      ? 51\n      : JSON.parse(localStorage.getItem(\"country\"))\n          [\"mainlocation\"]?.split(\",\")[1]\n          ?.split(\")\")[0]\n  );\n\n  const handl = (e) => {\n    props.handleChange(e);\n    setMap(e.latlng);\n  };\n  useEffect(() => {\n    const country =\n      JSON.parse(localStorage.getItem(\"country\")) === null\n        ? undefined\n        : JSON.parse(localStorage.getItem(\"country\"))[\"mainlocation\"];\n    console.log(country);\n    let ans = [];\n    if (country === undefined) {\n      ans = [50, 50];\n    } else {\n      console.log(country);\n      let temp = country?.split(\"(\")[1]?.split(\",\")[0];\n      let temp1 = country?.split(\"(\")[1]?.split(\",\")[1]?.split(\")\")[0];\n      if (temp === undefined || temp1 === undefined) {\n        setx1(35);\n        setx2(51);\n      } else {\n        setx1(parseFloat(temp));\n        setx2(parseFloat(temp1));\n      }\n    }\n    sercurrent(ans);\n  }, []);\n\n  return (\n    <div className=\"map\">\n      {Current !== null && x1 && x2 && (\n        <MapContainer\n          center={[x1, x2]}\n          zoom={5}\n          scrollWheelZoom={true}\n          style={{ width: \"100%\", height: \"450px\", zIndex: \"1\" }}\n\n          //   onClick={this.handlemapclick}\n        >\n          <TileLayer\n            {...{\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n              width: 500,\n            }}\n          />\n\n          <GetCoordinates change={handl} />\n          <>\n            {locations?.map((e, i) => {\n              return (\n                <Marker key={i} position={e.cordinates} icon={levels[e.level] ?levels[e.level] :blueIcon } >\n                  <Popup>\n                    <span>{e.cordinates}</span>\n                  </Popup>\n                </Marker>\n              );\n            })}\n          </>\n\n          <LocationMarker />\n        </MapContainer>\n      )}\n    </div>\n  );\n};\n\nexport default MapWrapper;\n",
    "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ns\", \"children\"];\nimport { useTranslation } from './useTranslation';\nexport function Translation(props) {\n  var ns = props.ns,\n      children = props.children,\n      options = _objectWithoutProperties(props, _excluded);\n\n  var _useTranslation = useTranslation(ns, options),\n      _useTranslation2 = _slicedToArray(_useTranslation, 3),\n      t = _useTranslation2[0],\n      i18n = _useTranslation2[1],\n      ready = _useTranslation2[2];\n\n  return children(t, {\n    i18n: i18n,\n    lng: i18n.language\n  }, ready);\n}"
  ],
  "names": [
    "defaultValues",
    "level",
    "type",
    "power",
    "func",
    "useState",
    "filterValues",
    "setFilterValues",
    "country",
    "JSON",
    "parse",
    "localStorage",
    "getItem",
    "useQuery",
    "ReportService",
    "help",
    "res",
    "data",
    "facMapHelper",
    "isFacMapHelperLoading",
    "isLoading",
    "key",
    "params",
    "filter",
    "length",
    "toast",
    "refetchOnMount",
    "enabled",
    "reports",
    "isReportsLoading",
    "fetchReports",
    "refetch",
    "className",
    "onSubmit",
    "e",
    "preventDefault",
    "onChange",
    "value",
    "target",
    "preValues",
    "as",
    "t",
    "i18n",
    "selected",
    "disabled",
    "map",
    "lev",
    "id",
    "name",
    "ty",
    "pow",
    "onClick",
    "Date",
    "toISOString",
    "split",
    "locations",
    "API_URL",
    "ApiManager",
    "headers",
    "Authorization",
    "authHeader",
    "degree",
    "payload",
    "saved",
    "LocationMarker",
    "position",
    "setPosition",
    "useMapEvents",
    "click",
    "locate",
    "invalidateSize",
    "locationfound",
    "latlng",
    "flyTo",
    "getZoom",
    "L",
    "iconRetinaUrl",
    "require",
    "iconUrl",
    "shadowUrl",
    "GetCoordinates",
    "props",
    "useMap",
    "useEffect",
    "info",
    "positon",
    "options",
    "onAdd",
    "textContent",
    "on",
    "console",
    "log",
    "window",
    "navigator",
    "geolocation",
    "getCurrentPosition",
    "change",
    "handleClick",
    "addControl",
    "LeafIcon",
    "blueIcon",
    "greenIcon",
    "redIcon",
    "yellowIcon",
    "purpleIcon",
    "blackIcon",
    "roseIcon",
    "pupIcon",
    "levels",
    "setMap",
    "Current",
    "sercurrent",
    "undefined",
    "x1",
    "setx1",
    "x2",
    "setx2",
    "ans",
    "temp",
    "temp1",
    "parseFloat",
    "center",
    "zoom",
    "scrollWheelZoom",
    "style",
    "width",
    "height",
    "zIndex",
    "url",
    "handleChange",
    "i",
    "cordinates",
    "icon",
    "_excluded",
    "Translation",
    "ns",
    "children",
    "_objectWithoutProperties",
    "_useTranslation",
    "useTranslation",
    "_useTranslation2",
    "_slicedToArray",
    "ready",
    "lng",
    "language"
  ],
  "sourceRoot": ""
}
